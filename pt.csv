Path,oldFileContent,currentFileContent
tools/train_shadownet.py,"Module(body=[Expr(value=Constant(value='\nTrain shadow net script\n', kind=None)), Import(names=[alias(name='os', asname=None)]), Import(names=[alias(name='tensorflow', asname='tf')]), Import(names=[alias(name='os.path', asname='ops')]), Import(names=[alias(name='time', asname=None)]), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='argparse', asname=None)]), ImportFrom(module='crnn_model', names=[alias(name='crnn_model', asname=None)], level=0), ImportFrom(module='local_utils', names=[alias(name='data_utils', asname=None), alias(name='log_utils', asname=None)], level=0), ImportFrom(module='global_configuration', names=[alias(name='config', asname=None)], level=0), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Attribute(value=Name(id='log_utils', ctx=Load()), attr='init_logger', ctx=Load()), args=[], keywords=[]), type_comment=None), FunctionDef(name='init_args', args=arguments(posonlyargs=[], args=[], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n\n    :return:\n    ', kind=None)), Assign(targets=[Name(id='parser', ctx=Store())], value=Call(func=Attribute(value=Name(id='argparse', ctx=Load()), attr='ArgumentParser', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--dataset_dir', kind=None)], keywords=[keyword(arg='type', value=Name(id='str', ctx=Load())), keyword(arg='help', value=Constant(value='Where you store the dataset', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--weights_path', kind=None)], keywords=[keyword(arg='type', value=Name(id='str', ctx=Load())), keyword(arg='help', value=Constant(value='Where you store the pretrained weights', kind=None))])), Return(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='parse_args', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='train_shadownet', args=arguments(posonlyargs=[], args=[arg(arg='dataset_dir', annotation=None, type_comment=None), arg(arg='weights_path', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[Constant(value=None, kind=None)]), body=[Expr(value=Constant(value='\n\n    :param dataset_dir:\n    :param weights_path:\n    :return:\n    ', kind=None)), Assign(targets=[Name(id='decoder', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Name(id='data_utils', ctx=Load()), attr='TextFeatureIO', ctx=Load()), args=[], keywords=[]), attr='reader', ctx=Load()), type_comment=None), Assign(targets=[Tuple(elts=[Name(id='images', ctx=Store()), Name(id='labels', ctx=Store()), Name(id='imagenames', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='decoder', ctx=Load()), attr='read_features', ctx=Load()), args=[Call(func=Attribute(value=Name(id='ops', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='dataset_dir', ctx=Load()), Constant(value='train_feature.tfrecords', kind=None)], keywords=[])], keywords=[keyword(arg='num_epochs', value=Constant(value=None, kind=None))]), type_comment=None), Assign(targets=[Tuple(elts=[Name(id='inputdata', ctx=Store()), Name(id='input_labels', ctx=Store()), Name(id='input_imagenames', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='train', ctx=Load()), attr='shuffle_batch', ctx=Load()), args=[], keywords=[keyword(arg='tensors', value=List(elts=[Name(id='images', ctx=Load()), Name(id='labels', ctx=Load()), Name(id='imagenames', ctx=Load())], ctx=Load())), keyword(arg='batch_size', value=Constant(value=32, kind=None)), keyword(arg='capacity', value=BinOp(left=Constant(value=1000, kind=None), op=Add(), right=BinOp(left=Constant(value=2, kind=None), op=Mult(), right=Constant(value=32, kind=None)))), keyword(arg='min_after_dequeue', value=Constant(value=100, kind=None)), keyword(arg='num_threads', value=Constant(value=1, kind=None))]), type_comment=None), Assign(targets=[Name(id='inputdata', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='cast', ctx=Load()), args=[], keywords=[keyword(arg='x', value=Name(id='inputdata', ctx=Load())), keyword(arg='dtype', value=Attribute(value=Name(id='tf', ctx=Load()), attr='float32', ctx=Load()))]), type_comment=None), Assign(targets=[Name(id='shadownet', ctx=Store())], value=Call(func=Attribute(value=Name(id='crnn_model', ctx=Load()), attr='ShadowNet', ctx=Load()), args=[], keywords=[keyword(arg='phase', value=Constant(value='Train', kind=None)), keyword(arg='hidden_nums', value=Constant(value=256, kind=None)), keyword(arg='layers_nums', value=Constant(value=2, kind=None)), keyword(arg='seq_length', value=Constant(value=25, kind=None)), keyword(arg='num_classes', value=Constant(value=37, kind=None))]), type_comment=None), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='variable_scope', ctx=Load()), args=[Constant(value='shadow', kind=None)], keywords=[keyword(arg='reuse', value=Constant(value=False, kind=None))]), optional_vars=None)], body=[Assign(targets=[Name(id='net_out', ctx=Store())], value=Call(func=Attribute(value=Name(id='shadownet', ctx=Load()), attr='build_shadownet', ctx=Load()), args=[], keywords=[keyword(arg='inputdata', value=Name(id='inputdata', ctx=Load()))]), type_comment=None)], type_comment=None), Assign(targets=[Name(id='cost', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='reduce_mean', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='nn', ctx=Load()), attr='ctc_loss', ctx=Load()), args=[], keywords=[keyword(arg='labels', value=Name(id='input_labels', ctx=Load())), keyword(arg='inputs', value=Name(id='net_out', ctx=Load())), keyword(arg='sequence_length', value=BinOp(left=Constant(value=25, kind=None), op=Mult(), right=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ones', ctx=Load()), args=[Constant(value=32, kind=None)], keywords=[])))])], keywords=[]), type_comment=None), Assign(targets=[Tuple(elts=[Name(id='decoded', ctx=Store()), Name(id='log_prob', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='nn', ctx=Load()), attr='ctc_beam_search_decoder', ctx=Load()), args=[Name(id='net_out', ctx=Load()), BinOp(left=Constant(value=25, kind=None), op=Mult(), right=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ones', ctx=Load()), args=[Constant(value=32, kind=None)], keywords=[]))], keywords=[keyword(arg='merge_repeated', value=Constant(value=False, kind=None))]), type_comment=None), Assign(targets=[Name(id='sequence_dist', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='reduce_mean', ctx=Load()), args=[Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='edit_distance', ctx=Load()), args=[Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='cast', ctx=Load()), args=[Subscript(value=Name(id='decoded', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), Attribute(value=Name(id='tf', ctx=Load()), attr='int32', ctx=Load())], keywords=[]), Name(id='input_labels', ctx=Load())], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='global_step', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='Variable', ctx=Load()), args=[Constant(value=0, kind=None)], keywords=[keyword(arg='name', value=Constant(value='global_step', kind=None)), keyword(arg='trainable', value=Constant(value=False, kind=None))]), type_comment=None), Assign(targets=[Name(id='starter_learning_rate', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='cfg', ctx=Load()), attr='TRAIN', ctx=Load()), attr='LEARNING_RATE', ctx=Load()), type_comment=None), Assign(targets=[Name(id='learning_rate', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='train', ctx=Load()), attr='exponential_decay', ctx=Load()), args=[Name(id='starter_learning_rate', ctx=Load()), Name(id='global_step', ctx=Load()), Attribute(value=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='cfg', ctx=Load()), attr='TRAIN', ctx=Load()), attr='LR_DECAY_STEPS', ctx=Load()), Attribute(value=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='cfg', ctx=Load()), attr='TRAIN', ctx=Load()), attr='LR_DECAY_RATE', ctx=Load())], keywords=[keyword(arg='staircase', value=Constant(value=True, kind=None))]), type_comment=None), Assign(targets=[Name(id='update_ops', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='get_collection', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='GraphKeys', ctx=Load()), attr='UPDATE_OPS', ctx=Load())], keywords=[]), type_comment=None), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='control_dependencies', ctx=Load()), args=[Name(id='update_ops', ctx=Load())], keywords=[]), optional_vars=None)], body=[Assign(targets=[Name(id='optimizer', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='train', ctx=Load()), attr='AdadeltaOptimizer', ctx=Load()), args=[], keywords=[keyword(arg='learning_rate', value=Name(id='learning_rate', ctx=Load()))]), attr='minimize', ctx=Load()), args=[], keywords=[keyword(arg='loss', value=Name(id='cost', ctx=Load())), keyword(arg='global_step', value=Name(id='global_step', ctx=Load()))]), type_comment=None)], type_comment=None), Assign(targets=[Name(id='tboard_save_path', ctx=Store())], value=Constant(value='tboard/shadownet', kind=None), type_comment=None), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='ops', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='tboard_save_path', ctx=Load())], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='makedirs', ctx=Load()), args=[Name(id='tboard_save_path', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='summary', ctx=Load()), attr='scalar', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='Cost', kind=None)), keyword(arg='tensor', value=Name(id='cost', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='summary', ctx=Load()), attr='scalar', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='Learning_Rate', kind=None)), keyword(arg='tensor', value=Name(id='learning_rate', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='summary', ctx=Load()), attr='scalar', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='Seq_Dist', kind=None)), keyword(arg='tensor', value=Name(id='sequence_dist', ctx=Load()))])), Assign(targets=[Name(id='merge_summary_op', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='summary', ctx=Load()), attr='merge_all', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='saver', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='train', ctx=Load()), attr='Saver', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='model_save_dir', ctx=Store())], value=Constant(value='model/shadownet', kind=None), type_comment=None), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='ops', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='model_save_dir', ctx=Load())], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='makedirs', ctx=Load()), args=[Name(id='model_save_dir', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='train_start_time', ctx=Store())], value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='strftime', ctx=Load()), args=[Constant(value='%Y-%m-%d-%H-%M-%S', kind=None), Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='localtime', ctx=Load()), args=[Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='model_name', ctx=Store())], value=Call(func=Attribute(value=Constant(value='shadownet_{:s}.ckpt', kind=None), attr='format', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='train_start_time', ctx=Load())], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='model_save_path', ctx=Store())], value=Call(func=Attribute(value=Name(id='ops', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='model_save_dir', ctx=Load()), Name(id='model_name', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='sess_config', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='ConfigProto', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Attribute(value=Name(id='sess_config', ctx=Load()), attr='gpu_options', ctx=Load()), attr='per_process_gpu_memory_fraction', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='cfg', ctx=Load()), attr='TRAIN', ctx=Load()), attr='GPU_MEMORY_FRACTION', ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Attribute(value=Name(id='sess_config', ctx=Load()), attr='gpu_options', ctx=Load()), attr='allow_growth', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='cfg', ctx=Load()), attr='TRAIN', ctx=Load()), attr='TF_ALLOW_GROWTH', ctx=Load()), type_comment=None), Assign(targets=[Name(id='sess', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='Session', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Name(id='sess_config', ctx=Load()))]), type_comment=None), Assign(targets=[Name(id='summary_writer', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='summary', ctx=Load()), attr='FileWriter', ctx=Load()), args=[Name(id='tboard_save_path', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='summary_writer', ctx=Load()), attr='add_graph', ctx=Load()), args=[Attribute(value=Name(id='sess', ctx=Load()), attr='graph', ctx=Load())], keywords=[])), Assign(targets=[Name(id='train_epochs', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='cfg', ctx=Load()), attr='TRAIN', ctx=Load()), attr='EPOCHS', ctx=Load()), type_comment=None), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='sess', ctx=Load()), attr='as_default', ctx=Load()), args=[], keywords=[]), optional_vars=None)], body=[If(test=Compare(left=Name(id='weights_path', ctx=Load()), ops=[Is()], comparators=[Constant(value=None, kind=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Training from scratch', kind=None)], keywords=[])), Assign(targets=[Name(id='init', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='global_variables_initializer', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='sess', ctx=Load()), attr='run', ctx=Load()), args=[Name(id='init', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Restore model from {:s}', kind=None), attr='format', ctx=Load()), args=[Name(id='weights_path', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='saver', ctx=Load()), attr='restore', ctx=Load()), args=[], keywords=[keyword(arg='sess', value=Name(id='sess', ctx=Load())), keyword(arg='save_path', value=Name(id='weights_path', ctx=Load()))]))]), Assign(targets=[Name(id='coord', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='train', ctx=Load()), attr='Coordinator', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='threads', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='train', ctx=Load()), attr='start_queue_runners', ctx=Load()), args=[], keywords=[keyword(arg='sess', value=Name(id='sess', ctx=Load())), keyword(arg='coord', value=Name(id='coord', ctx=Load()))]), type_comment=None), For(target=Name(id='epoch', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='train_epochs', ctx=Load())], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='_', ctx=Store()), Name(id='c', ctx=Store()), Name(id='seq_distance', ctx=Store()), Name(id='preds', ctx=Store()), Name(id='gt_labels', ctx=Store()), Name(id='summary', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='sess', ctx=Load()), attr='run', ctx=Load()), args=[List(elts=[Name(id='optimizer', ctx=Load()), Name(id='cost', ctx=Load()), Name(id='sequence_dist', ctx=Load()), Name(id='decoded', ctx=Load()), Name(id='input_labels', ctx=Load()), Name(id='merge_summary_op', ctx=Load())], ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='preds', ctx=Store())], value=Call(func=Attribute(value=Name(id='decoder', ctx=Load()), attr='sparse_tensor_to_str', ctx=Load()), args=[Subscript(value=Name(id='preds', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='gt_labels', ctx=Store())], value=Call(func=Attribute(value=Name(id='decoder', ctx=Load()), attr='sparse_tensor_to_str', ctx=Load()), args=[Name(id='gt_labels', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='accuracy', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), For(target=Tuple(elts=[Name(id='index', ctx=Store()), Name(id='gt_label', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='gt_labels', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='pred', ctx=Store())], value=Subscript(value=Name(id='preds', ctx=Load()), slice=Index(value=Name(id='index', ctx=Load())), ctx=Load()), type_comment=None), Assign(targets=[Name(id='totol_count', ctx=Store())], value=Call(func=Name(id='len', ctx=Load()), args=[Name(id='gt_label', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='correct_count', ctx=Store())], value=Constant(value=0, kind=None), type_comment=None), Try(body=[For(target=Tuple(elts=[Name(id='i', ctx=Store()), Name(id='tmp', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='gt_label', ctx=Load())], keywords=[]), body=[If(test=Compare(left=Name(id='tmp', ctx=Load()), ops=[Eq()], comparators=[Subscript(value=Name(id='pred', ctx=Load()), slice=Index(value=Name(id='i', ctx=Load())), ctx=Load())]), body=[AugAssign(target=Name(id='correct_count', ctx=Store()), op=Add(), value=Constant(value=1, kind=None))], orelse=[])], orelse=[], type_comment=None)], handlers=[ExceptHandler(type=Name(id='IndexError', ctx=Load()), name=None, body=[Continue()])], orelse=[], finalbody=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='accuracy', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=Name(id='correct_count', ctx=Load()), op=Div(), right=Name(id='totol_count', ctx=Load()))], keywords=[]))], handlers=[ExceptHandler(type=Name(id='ZeroDivisionError', ctx=Load()), name=None, body=[If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='pred', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=0, kind=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='accuracy', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value=1, kind=None)], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='accuracy', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value=0, kind=None)], keywords=[]))])])], orelse=[], finalbody=[])])], orelse=[], type_comment=None), Assign(targets=[Name(id='accuracy', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[Name(id='accuracy', ctx=Load())], keywords=[]), attr='astype', ctx=Load()), args=[Attribute(value=Name(id='np', ctx=Load()), attr='float32', ctx=Load())], keywords=[])], keywords=[keyword(arg='axis', value=Constant(value=0, kind=None))]), type_comment=None), If(test=Compare(left=BinOp(left=Name(id='epoch', ctx=Load()), op=Mod(), right=Attribute(value=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='cfg', ctx=Load()), attr='TRAIN', ctx=Load()), attr='DISPLAY_STEP', ctx=Load())), ops=[Eq()], comparators=[Constant(value=0, kind=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Epoch: {:d} cost= {:9f} seq distance= {:9f} train accuracy= {:9f}', kind=None), attr='format', ctx=Load()), args=[BinOp(left=Name(id='epoch', ctx=Load()), op=Add(), right=Constant(value=1, kind=None)), Name(id='c', ctx=Load()), Name(id='seq_distance', ctx=Load()), Name(id='accuracy', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='summary_writer', ctx=Load()), attr='add_summary', ctx=Load()), args=[], keywords=[keyword(arg='summary', value=Name(id='summary', ctx=Load())), keyword(arg='global_step', value=Name(id='epoch', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='saver', ctx=Load()), attr='save', ctx=Load()), args=[], keywords=[keyword(arg='sess', value=Name(id='sess', ctx=Load())), keyword(arg='save_path', value=Name(id='model_save_path', ctx=Load())), keyword(arg='global_step', value=Name(id='epoch', ctx=Load()))]))], orelse=[], type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='coord', ctx=Load()), attr='request_stop', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='coord', ctx=Load()), attr='join', ctx=Load()), args=[], keywords=[keyword(arg='threads', value=Name(id='threads', ctx=Load()))]))], type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='sess', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Return(value=None)], decorator_list=[], returns=None, type_comment=None), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__', kind=None)]), body=[Assign(targets=[Name(id='args', ctx=Store())], value=Call(func=Name(id='init_args', ctx=Load()), args=[], keywords=[]), type_comment=None), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='ops', ctx=Load()), attr='exists', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='dataset_dir', ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=""{:s} doesn't exist"", kind=None), attr='format', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='dataset_dir', ctx=Load())], keywords=[])], keywords=[]), cause=None)], orelse=[]), Expr(value=Call(func=Name(id='train_shadownet', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='dataset_dir', ctx=Load()), Attribute(value=Name(id='args', ctx=Load()), attr='weights_path', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Done', kind=None)], keywords=[]))], orelse=[])], type_ignores=[])","Module(body=[Expr(value=Constant(value='\nTrain shadow net script\n', kind=None)), Import(names=[alias(name='os', asname=None)]), Import(names=[alias(name='tensorflow', asname='tf')]), Import(names=[alias(name='os.path', asname='ops')]), Import(names=[alias(name='time', asname=None)]), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='argparse', asname=None)]), ImportFrom(module='crnn_model', names=[alias(name='crnn_model', asname=None)], level=0), ImportFrom(module='local_utils', names=[alias(name='data_utils', asname=None), alias(name='log_utils', asname=None)], level=0), ImportFrom(module='global_configuration', names=[alias(name='config', asname=None)], level=0), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Attribute(value=Name(id='log_utils', ctx=Load()), attr='init_logger', ctx=Load()), args=[], keywords=[]), type_comment=None), FunctionDef(name='init_args', args=arguments(posonlyargs=[], args=[], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n\n    :return:\n    ', kind=None)), Assign(targets=[Name(id='parser', ctx=Store())], value=Call(func=Attribute(value=Name(id='argparse', ctx=Load()), attr='ArgumentParser', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--dataset_dir', kind=None)], keywords=[keyword(arg='type', value=Name(id='str', ctx=Load())), keyword(arg='help', value=Constant(value='Where you store the dataset', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--weights_path', kind=None)], keywords=[keyword(arg='type', value=Name(id='str', ctx=Load())), keyword(arg='help', value=Constant(value='Where you store the pretrained weights', kind=None))])), Return(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='parse_args', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='train_shadownet', args=arguments(posonlyargs=[], args=[arg(arg='dataset_dir', annotation=None, type_comment=None), arg(arg='weights_path', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[Constant(value=None, kind=None)]), body=[Expr(value=Constant(value='\n\n    :param dataset_dir:\n    :param weights_path:\n    :return:\n    ', kind=None)), Assign(targets=[Name(id='decoder', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Name(id='data_utils', ctx=Load()), attr='TextFeatureIO', ctx=Load()), args=[], keywords=[]), attr='reader', ctx=Load()), type_comment=None), Assign(targets=[Tuple(elts=[Name(id='images', ctx=Store()), Name(id='labels', ctx=Store()), Name(id='imagenames', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='decoder', ctx=Load()), attr='read_features', ctx=Load()), args=[Call(func=Attribute(value=Name(id='ops', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='dataset_dir', ctx=Load()), Constant(value='train_feature.tfrecords', kind=None)], keywords=[])], keywords=[keyword(arg='num_epochs', value=Constant(value=None, kind=None))]), type_comment=None), Assign(targets=[Tuple(elts=[Name(id='inputdata', ctx=Store()), Name(id='input_labels', ctx=Store()), Name(id='input_imagenames', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='train', ctx=Load()), attr='shuffle_batch', ctx=Load()), args=[], keywords=[keyword(arg='tensors', value=List(elts=[Name(id='images', ctx=Load()), Name(id='labels', ctx=Load()), Name(id='imagenames', ctx=Load())], ctx=Load())), keyword(arg='batch_size', value=Constant(value=32, kind=None)), keyword(arg='capacity', value=BinOp(left=Constant(value=1000, kind=None), op=Add(), right=BinOp(left=Constant(value=2, kind=None), op=Mult(), right=Constant(value=32, kind=None)))), keyword(arg='min_after_dequeue', value=Constant(value=100, kind=None)), keyword(arg='num_threads', value=Constant(value=1, kind=None))]), type_comment=None), Assign(targets=[Name(id='inputdata', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='cast', ctx=Load()), args=[], keywords=[keyword(arg='x', value=Name(id='inputdata', ctx=Load())), keyword(arg='dtype', value=Attribute(value=Name(id='tf', ctx=Load()), attr='float32', ctx=Load()))]), type_comment=None), Assign(targets=[Name(id='shadownet', ctx=Store())], value=Call(func=Attribute(value=Name(id='crnn_model', ctx=Load()), attr='ShadowNet', ctx=Load()), args=[], keywords=[keyword(arg='phase', value=Constant(value='Train', kind=None)), keyword(arg='hidden_nums', value=Constant(value=256, kind=None)), keyword(arg='layers_nums', value=Constant(value=2, kind=None)), keyword(arg='seq_length', value=Constant(value=25, kind=None)), keyword(arg='num_classes', value=Constant(value=47, kind=None))]), type_comment=None), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='variable_scope', ctx=Load()), args=[Constant(value='shadow', kind=None)], keywords=[keyword(arg='reuse', value=Constant(value=False, kind=None))]), optional_vars=None)], body=[Assign(targets=[Name(id='net_out', ctx=Store())], value=Call(func=Attribute(value=Name(id='shadownet', ctx=Load()), attr='build_shadownet', ctx=Load()), args=[], keywords=[keyword(arg='inputdata', value=Name(id='inputdata', ctx=Load()))]), type_comment=None)], type_comment=None), Assign(targets=[Name(id='cost', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='reduce_mean', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='nn', ctx=Load()), attr='ctc_loss', ctx=Load()), args=[], keywords=[keyword(arg='labels', value=Name(id='input_labels', ctx=Load())), keyword(arg='inputs', value=Name(id='net_out', ctx=Load())), keyword(arg='sequence_length', value=BinOp(left=Constant(value=25, kind=None), op=Mult(), right=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ones', ctx=Load()), args=[Constant(value=32, kind=None)], keywords=[])))])], keywords=[]), type_comment=None), Assign(targets=[Tuple(elts=[Name(id='decoded', ctx=Store()), Name(id='log_prob', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='nn', ctx=Load()), attr='ctc_beam_search_decoder', ctx=Load()), args=[Name(id='net_out', ctx=Load()), BinOp(left=Constant(value=25, kind=None), op=Mult(), right=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ones', ctx=Load()), args=[Constant(value=32, kind=None)], keywords=[]))], keywords=[keyword(arg='merge_repeated', value=Constant(value=False, kind=None))]), type_comment=None), Assign(targets=[Name(id='sequence_dist', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='reduce_mean', ctx=Load()), args=[Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='edit_distance', ctx=Load()), args=[Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='cast', ctx=Load()), args=[Subscript(value=Name(id='decoded', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), Attribute(value=Name(id='tf', ctx=Load()), attr='int32', ctx=Load())], keywords=[]), Name(id='input_labels', ctx=Load())], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='global_step', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='Variable', ctx=Load()), args=[Constant(value=0, kind=None)], keywords=[keyword(arg='name', value=Constant(value='global_step', kind=None)), keyword(arg='trainable', value=Constant(value=False, kind=None))]), type_comment=None), Assign(targets=[Name(id='starter_learning_rate', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='cfg', ctx=Load()), attr='TRAIN', ctx=Load()), attr='LEARNING_RATE', ctx=Load()), type_comment=None), Assign(targets=[Name(id='learning_rate', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='train', ctx=Load()), attr='exponential_decay', ctx=Load()), args=[Name(id='starter_learning_rate', ctx=Load()), Name(id='global_step', ctx=Load()), Attribute(value=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='cfg', ctx=Load()), attr='TRAIN', ctx=Load()), attr='LR_DECAY_STEPS', ctx=Load()), Attribute(value=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='cfg', ctx=Load()), attr='TRAIN', ctx=Load()), attr='LR_DECAY_RATE', ctx=Load())], keywords=[keyword(arg='staircase', value=Constant(value=True, kind=None))]), type_comment=None), Assign(targets=[Name(id='update_ops', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='get_collection', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='GraphKeys', ctx=Load()), attr='UPDATE_OPS', ctx=Load())], keywords=[]), type_comment=None), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='control_dependencies', ctx=Load()), args=[Name(id='update_ops', ctx=Load())], keywords=[]), optional_vars=None)], body=[Assign(targets=[Name(id='optimizer', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='train', ctx=Load()), attr='AdadeltaOptimizer', ctx=Load()), args=[], keywords=[keyword(arg='learning_rate', value=Name(id='learning_rate', ctx=Load()))]), attr='minimize', ctx=Load()), args=[], keywords=[keyword(arg='loss', value=Name(id='cost', ctx=Load())), keyword(arg='global_step', value=Name(id='global_step', ctx=Load()))]), type_comment=None)], type_comment=None), Assign(targets=[Name(id='tboard_save_path', ctx=Store())], value=Constant(value='tboard/shadownet', kind=None), type_comment=None), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='ops', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='tboard_save_path', ctx=Load())], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='makedirs', ctx=Load()), args=[Name(id='tboard_save_path', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='summary', ctx=Load()), attr='scalar', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='Cost', kind=None)), keyword(arg='tensor', value=Name(id='cost', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='summary', ctx=Load()), attr='scalar', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='Learning_Rate', kind=None)), keyword(arg='tensor', value=Name(id='learning_rate', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='summary', ctx=Load()), attr='scalar', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='Seq_Dist', kind=None)), keyword(arg='tensor', value=Name(id='sequence_dist', ctx=Load()))])), Assign(targets=[Name(id='merge_summary_op', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='summary', ctx=Load()), attr='merge_all', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='saver', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='train', ctx=Load()), attr='Saver', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='model_save_dir', ctx=Store())], value=Constant(value='model/shadownet', kind=None), type_comment=None), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='ops', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='model_save_dir', ctx=Load())], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='makedirs', ctx=Load()), args=[Name(id='model_save_dir', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='train_start_time', ctx=Store())], value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='strftime', ctx=Load()), args=[Constant(value='%Y-%m-%d-%H-%M-%S', kind=None), Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='localtime', ctx=Load()), args=[Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='model_name', ctx=Store())], value=Call(func=Attribute(value=Constant(value='shadownet_{:s}.ckpt', kind=None), attr='format', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='train_start_time', ctx=Load())], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='model_save_path', ctx=Store())], value=Call(func=Attribute(value=Name(id='ops', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='model_save_dir', ctx=Load()), Name(id='model_name', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='sess_config', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='ConfigProto', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Attribute(value=Name(id='sess_config', ctx=Load()), attr='gpu_options', ctx=Load()), attr='per_process_gpu_memory_fraction', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='cfg', ctx=Load()), attr='TRAIN', ctx=Load()), attr='GPU_MEMORY_FRACTION', ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Attribute(value=Name(id='sess_config', ctx=Load()), attr='gpu_options', ctx=Load()), attr='allow_growth', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='cfg', ctx=Load()), attr='TRAIN', ctx=Load()), attr='TF_ALLOW_GROWTH', ctx=Load()), type_comment=None), Assign(targets=[Name(id='sess', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='Session', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Name(id='sess_config', ctx=Load()))]), type_comment=None), Assign(targets=[Name(id='summary_writer', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='summary', ctx=Load()), attr='FileWriter', ctx=Load()), args=[Name(id='tboard_save_path', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='summary_writer', ctx=Load()), attr='add_graph', ctx=Load()), args=[Attribute(value=Name(id='sess', ctx=Load()), attr='graph', ctx=Load())], keywords=[])), Assign(targets=[Name(id='train_epochs', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='cfg', ctx=Load()), attr='TRAIN', ctx=Load()), attr='EPOCHS', ctx=Load()), type_comment=None), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='sess', ctx=Load()), attr='as_default', ctx=Load()), args=[], keywords=[]), optional_vars=None)], body=[If(test=Compare(left=Name(id='weights_path', ctx=Load()), ops=[Is()], comparators=[Constant(value=None, kind=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Training from scratch', kind=None)], keywords=[])), Assign(targets=[Name(id='init', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='global_variables_initializer', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='sess', ctx=Load()), attr='run', ctx=Load()), args=[Name(id='init', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Restore model from {:s}', kind=None), attr='format', ctx=Load()), args=[Name(id='weights_path', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='saver', ctx=Load()), attr='restore', ctx=Load()), args=[], keywords=[keyword(arg='sess', value=Name(id='sess', ctx=Load())), keyword(arg='save_path', value=Name(id='weights_path', ctx=Load()))]))]), Assign(targets=[Name(id='coord', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='train', ctx=Load()), attr='Coordinator', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='threads', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='train', ctx=Load()), attr='start_queue_runners', ctx=Load()), args=[], keywords=[keyword(arg='sess', value=Name(id='sess', ctx=Load())), keyword(arg='coord', value=Name(id='coord', ctx=Load()))]), type_comment=None), For(target=Name(id='epoch', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='train_epochs', ctx=Load())], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='_', ctx=Store()), Name(id='c', ctx=Store()), Name(id='seq_distance', ctx=Store()), Name(id='preds', ctx=Store()), Name(id='gt_labels', ctx=Store()), Name(id='summary', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='sess', ctx=Load()), attr='run', ctx=Load()), args=[List(elts=[Name(id='optimizer', ctx=Load()), Name(id='cost', ctx=Load()), Name(id='sequence_dist', ctx=Load()), Name(id='decoded', ctx=Load()), Name(id='input_labels', ctx=Load()), Name(id='merge_summary_op', ctx=Load())], ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='preds', ctx=Store())], value=Call(func=Attribute(value=Name(id='decoder', ctx=Load()), attr='sparse_tensor_to_str', ctx=Load()), args=[Subscript(value=Name(id='preds', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='gt_labels', ctx=Store())], value=Call(func=Attribute(value=Name(id='decoder', ctx=Load()), attr='sparse_tensor_to_str', ctx=Load()), args=[Name(id='gt_labels', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='accuracy', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), For(target=Tuple(elts=[Name(id='index', ctx=Store()), Name(id='gt_label', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='gt_labels', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='pred', ctx=Store())], value=Subscript(value=Name(id='preds', ctx=Load()), slice=Index(value=Name(id='index', ctx=Load())), ctx=Load()), type_comment=None), Assign(targets=[Name(id='totol_count', ctx=Store())], value=Call(func=Name(id='len', ctx=Load()), args=[Name(id='gt_label', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='correct_count', ctx=Store())], value=Constant(value=0, kind=None), type_comment=None), Try(body=[For(target=Tuple(elts=[Name(id='i', ctx=Store()), Name(id='tmp', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='gt_label', ctx=Load())], keywords=[]), body=[If(test=Compare(left=Name(id='tmp', ctx=Load()), ops=[Eq()], comparators=[Subscript(value=Name(id='pred', ctx=Load()), slice=Index(value=Name(id='i', ctx=Load())), ctx=Load())]), body=[AugAssign(target=Name(id='correct_count', ctx=Store()), op=Add(), value=Constant(value=1, kind=None))], orelse=[])], orelse=[], type_comment=None)], handlers=[ExceptHandler(type=Name(id='IndexError', ctx=Load()), name=None, body=[Continue()])], orelse=[], finalbody=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='accuracy', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=Name(id='correct_count', ctx=Load()), op=Div(), right=Name(id='totol_count', ctx=Load()))], keywords=[]))], handlers=[ExceptHandler(type=Name(id='ZeroDivisionError', ctx=Load()), name=None, body=[If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='pred', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=0, kind=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='accuracy', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value=1, kind=None)], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='accuracy', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value=0, kind=None)], keywords=[]))])])], orelse=[], finalbody=[])])], orelse=[], type_comment=None), Assign(targets=[Name(id='accuracy', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[Name(id='accuracy', ctx=Load())], keywords=[]), attr='astype', ctx=Load()), args=[Attribute(value=Name(id='np', ctx=Load()), attr='float32', ctx=Load())], keywords=[])], keywords=[keyword(arg='axis', value=Constant(value=0, kind=None))]), type_comment=None), If(test=Compare(left=BinOp(left=Name(id='epoch', ctx=Load()), op=Mod(), right=Attribute(value=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='cfg', ctx=Load()), attr='TRAIN', ctx=Load()), attr='DISPLAY_STEP', ctx=Load())), ops=[Eq()], comparators=[Constant(value=0, kind=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Epoch: {:d} cost= {:9f} seq distance= {:9f} train accuracy= {:9f}', kind=None), attr='format', ctx=Load()), args=[BinOp(left=Name(id='epoch', ctx=Load()), op=Add(), right=Constant(value=1, kind=None)), Name(id='c', ctx=Load()), Name(id='seq_distance', ctx=Load()), Name(id='accuracy', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='summary_writer', ctx=Load()), attr='add_summary', ctx=Load()), args=[], keywords=[keyword(arg='summary', value=Name(id='summary', ctx=Load())), keyword(arg='global_step', value=Name(id='epoch', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='saver', ctx=Load()), attr='save', ctx=Load()), args=[], keywords=[keyword(arg='sess', value=Name(id='sess', ctx=Load())), keyword(arg='save_path', value=Name(id='model_save_path', ctx=Load())), keyword(arg='global_step', value=Name(id='epoch', ctx=Load()))]))], orelse=[], type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='coord', ctx=Load()), attr='request_stop', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='coord', ctx=Load()), attr='join', ctx=Load()), args=[], keywords=[keyword(arg='threads', value=Name(id='threads', ctx=Load()))]))], type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='sess', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Return(value=None)], decorator_list=[], returns=None, type_comment=None), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__', kind=None)]), body=[Assign(targets=[Name(id='args', ctx=Store())], value=Call(func=Name(id='init_args', ctx=Load()), args=[], keywords=[]), type_comment=None), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='ops', ctx=Load()), attr='exists', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='dataset_dir', ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=""{:s} doesn't exist"", kind=None), attr='format', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='dataset_dir', ctx=Load())], keywords=[])], keywords=[]), cause=None)], orelse=[]), Expr(value=Call(func=Name(id='train_shadownet', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='dataset_dir', ctx=Load()), Attribute(value=Name(id='args', ctx=Load()), attr='weights_path', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Done', kind=None)], keywords=[]))], orelse=[])], type_ignores=[])"
