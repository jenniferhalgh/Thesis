Path,oldFileContent,currentFileContent
deeplabcut/generate_training_dataset/frame_extraction.py,"Module(body=[Expr(value=Constant(value='\nDeepLabCut2.0 Toolbox\nhttps://github.com/AlexEMG/DeepLabCut\nA Mathis, alexander.mathis@bethgelab.org\nT Nath, nath@rowland.harvard.edu\nM Mathis, mackenzie@post.harvard.edu\n', kind=None)), FunctionDef(name='extract_frames', args=arguments(posonlyargs=[], args=[arg(arg='config', annotation=None, type_comment=None), arg(arg='mode', annotation=None, type_comment=None), arg(arg='algo', annotation=None, type_comment=None), arg(arg='crop', annotation=None, type_comment=None), arg(arg='userfeedback', annotation=None, type_comment=None), arg(arg='cluster_step', annotation=None, type_comment=None), arg(arg='cluster_resizewidth', annotation=None, type_comment=None), arg(arg='cluster_color', annotation=None, type_comment=None), arg(arg='opencv', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[Constant(value='automatic', kind=None), Constant(value='kmeans', kind=None), Constant(value=False, kind=None), Constant(value=True, kind=None), Constant(value=1, kind=None), Constant(value=30, kind=None), Constant(value=False, kind=None), Constant(value=True, kind=None)]), body=[Expr(value=Constant(value=""\n    Extracts frames from the videos in the config.yaml file. Only the videos in the config.yaml will be used to select the frames.\n\n    Use the function ``add_new_video`` at any stage of the project to add new videos to the config file and extract their frames.\n    \n    The provided function either selects frames from the videos in a randomly and temporally uniformly distributed way (uniform), \n \n    by clustering based on visual appearance (k-means), or by manual selection. \n    \n    Three important parameters for automatic extraction: numframes2pick, start and stop are set in the config file. \n    \n    Please refer to the user guide for more details on methods and parameters https://www.biorxiv.org/content/biorxiv/early/2018/11/24/476531.full.pdf\n    \n    Parameters\n    ----------\n    config : string\n        Full path of the config.yaml file as a string.\n        \n    mode : string\n        String containing the mode of extraction. It must be either ``automatic`` or ``manual``.\n        \n    algo : string \n        String specifying the algorithm to use for selecting the frames. Currently, deeplabcut supports either ``kmeans`` or ``uniform`` based selection. This flag is\n        only required for ``automatic`` mode and the default is ``uniform``. For uniform, frames are picked in temporally uniform way, kmeans performs clustering on downsampled frames (see user guide for details).\n        Note: color information is discarded for kmeans, thus e.g. for camouflaged octopus clustering one might want to change this. \n        \n    crop : bool, optional\n        If this is set to True, a user interface pops up with a frame to select the cropping parameters. Use the left click to draw a cropping area and hit the button set cropping parameters to save the cropping parameters for a video.\n        The default is ``False``; if provided it must be either ``True`` or ``False``.\n            \n    userfeedback: bool, optional\n        If this is set to false during automatic mode then frames for all videos are extracted. The user can set this to true, which will result in a dialog,\n        where the user is asked for each video if (additional/any) frames from this video should be extracted. Use this, e.g. if you have already labeled\n        some folders and want to extract data for new videos. \n    \n    cluster_resizewidth: number, default: 30\n        For k-means one can change the width to which the images are downsampled (aspect ratio is fixed).\n    \n    cluster_step: number, default: 1\n        By default each frame is used for clustering, but for long videos one could only use every nth frame (set by: cluster_step). This saves memory before clustering can start, however, \n        reading the individual frames takes longer due to the skipping.\n    \n    cluster_color: bool, default: False\n        If false then each downsampled image is treated as a grayscale vector (discarding color information). If true, then the color channels are considered. This increases \n        the computational complexity. \n    \n    opencv: bool, default: True\n        Uses openCV for loading & extractiong (otherwise moviepy (legacy))\n        \n        \n    Examples\n    --------\n    for selecting frames automatically with 'kmeans' and want to crop the frames.\n    >>> deeplabcut.extract_frames('/analysis/project/reaching-task/config.yaml','automatic','kmeans',True)\n    --------\n    for selecting frames automatically with 'kmeans' and considering the color information.\n    >>> deeplabcut.extract_frames('/analysis/project/reaching-task/config.yaml','automatic','kmeans',cluster_color=True)\n    --------\n    for selecting frames automatically with 'uniform' and want to crop the frames.\n    >>> deeplabcut.extract_frames('/analysis/project/reaching-task/config.yaml','automatic',crop=True)\n    --------\n    for selecting frames manually,\n    >>> deeplabcut.extract_frames('/analysis/project/reaching-task/config.yaml','manual')\n    \n    While selecting the frames manually, you do not need to specify the ``crop`` parameter in the command. Rather, you will get a prompt in the graphic user interface to choose \n    if you need to crop or not.\n    --------\n    \n    "", kind=None)), Import(names=[alias(name='os', asname=None)]), Import(names=[alias(name='sys', asname=None)]), Import(names=[alias(name='yaml', asname=None)]), Import(names=[alias(name='numpy', asname='np')]), ImportFrom(module='pathlib', names=[alias(name='Path', asname=None)], level=0), ImportFrom(module='skimage', names=[alias(name='io', asname=None)], level=0), ImportFrom(module='skimage.util', names=[alias(name='img_as_ubyte', asname=None)], level=0), Import(names=[alias(name='matplotlib.pyplot', asname='plt')]), Import(names=[alias(name='matplotlib.patches', asname='patches')]), ImportFrom(module='deeplabcut.utils', names=[alias(name='frameselectiontools', asname=None)], level=0), ImportFrom(module='deeplabcut.utils', names=[alias(name='auxiliaryfunctions', asname=None)], level=0), ImportFrom(module='deeplabcut.utils', names=[alias(name='select_crop_parameters', asname=None)], level=0), ImportFrom(module='matplotlib.widgets', names=[alias(name='RectangleSelector', asname=None)], level=0), If(test=Compare(left=Name(id='mode', ctx=Load()), ops=[Eq()], comparators=[Constant(value='manual', kind=None)]), body=[Assign(targets=[Name(id='wd', ctx=Store())], value=Subscript(value=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='Path', ctx=Load()), args=[Name(id='config', ctx=Load())], keywords=[]), attr='resolve', ctx=Load()), args=[], keywords=[]), attr='parents', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='chdir', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='wd', ctx=Load())], keywords=[])], keywords=[])), ImportFrom(module='deeplabcut.generate_training_dataset', names=[alias(name='frame_extraction_toolbox', asname=None)], level=0), Expr(value=Call(func=Attribute(value=Name(id='frame_extraction_toolbox', ctx=Load()), attr='show', ctx=Load()), args=[Name(id='config', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='mode', ctx=Load()), ops=[Eq()], comparators=[Constant(value='automatic', kind=None)]), body=[Assign(targets=[Name(id='config_file', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Path', ctx=Load()), args=[Name(id='config', ctx=Load())], keywords=[]), attr='resolve', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='cfg', ctx=Store())], value=Call(func=Attribute(value=Name(id='auxiliaryfunctions', ctx=Load()), attr='read_config', ctx=Load()), args=[Name(id='config_file', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Config file read successfully.', kind=None)], keywords=[])), Assign(targets=[Name(id='numframes2pick', ctx=Store())], value=Subscript(value=Name(id='cfg', ctx=Load()), slice=Index(value=Constant(value='numframes2pick', kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Name(id='start', ctx=Store())], value=Subscript(value=Name(id='cfg', ctx=Load()), slice=Index(value=Constant(value='start', kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Name(id='stop', ctx=Store())], value=Subscript(value=Name(id='cfg', ctx=Load()), slice=Index(value=Constant(value='stop', kind=None)), ctx=Load()), type_comment=None), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='start', ctx=Load()), ops=[Gt()], comparators=[Constant(value=1, kind=None)]), Compare(left=Name(id='stop', ctx=Load()), ops=[Gt()], comparators=[Constant(value=1, kind=None)]), Compare(left=Name(id='start', ctx=Load()), ops=[Lt()], comparators=[Constant(value=0, kind=None)]), Compare(left=Name(id='stop', ctx=Load()), ops=[Lt()], comparators=[Constant(value=0, kind=None)]), Compare(left=Name(id='start', ctx=Load()), ops=[GtE()], comparators=[Name(id='stop', ctx=Load())])]), body=[Raise(exc=Call(func=Name(id='Exception', ctx=Load()), args=[Constant(value='Erroneous start or stop values. Please correct it in the config file.', kind=None)], keywords=[]), cause=None)], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='numframes2pick', ctx=Load()), ops=[Lt()], comparators=[Constant(value=1, kind=None)]), UnaryOp(op=Not(), operand=Call(func=Name(id='int', ctx=Load()), args=[Name(id='numframes2pick', ctx=Load())], keywords=[]))]), body=[Raise(exc=Call(func=Name(id='Exception', ctx=Load()), args=[Constant(value='Perhaps consider extracting more, or a natural number of frames.', kind=None)], keywords=[]), cause=None)], orelse=[]), Assign(targets=[Name(id='videos', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='cfg', ctx=Load()), slice=Index(value=Constant(value='video_sets', kind=None)), ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[]), type_comment=None), If(test=Name(id='opencv', ctx=Load()), body=[Import(names=[alias(name='cv2', asname=None)])], orelse=[ImportFrom(module='moviepy.editor', names=[alias(name='VideoFileClip', asname=None)], level=0)]), For(target=Tuple(elts=[Name(id='vindex', ctx=Store()), Name(id='video', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='videos', ctx=Load())], keywords=[]), body=[Global(names=['coords']), Assign(targets=[Name(id='coords', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Subscript(value=Subscript(value=Name(id='cfg', ctx=Load()), slice=Index(value=Constant(value='video_sets', kind=None)), ctx=Load()), slice=Index(value=Name(id='video', ctx=Load())), ctx=Load()), slice=Index(value=Constant(value='crop', kind=None)), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=',', kind=None)], keywords=[]), type_comment=None), If(test=Name(id='userfeedback', ctx=Load()), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Do you want to extract (perhaps additional) frames for video:', kind=None), Name(id='video', ctx=Load()), Constant(value='?', kind=None)], keywords=[])), Assign(targets=[Name(id='askuser', ctx=Store())], value=Call(func=Name(id='input', ctx=Load()), args=[Constant(value='yes/no', kind=None)], keywords=[]), type_comment=None)], orelse=[Assign(targets=[Name(id='askuser', ctx=Store())], value=Constant(value='yes', kind=None), type_comment=None)]), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='askuser', ctx=Load()), ops=[Eq()], comparators=[Constant(value='y', kind=None)]), Compare(left=Name(id='askuser', ctx=Load()), ops=[Eq()], comparators=[Constant(value='yes', kind=None)]), Compare(left=Name(id='askuser', ctx=Load()), ops=[Eq()], comparators=[Constant(value='Ja', kind=None)]), Compare(left=Name(id='askuser', ctx=Load()), ops=[Eq()], comparators=[Constant(value='ha', kind=None)])]), body=[If(test=Name(id='opencv', ctx=Load()), body=[Assign(targets=[Name(id='cap', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='VideoCapture', ctx=Load()), args=[Name(id='video', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='fps', ctx=Store())], value=Call(func=Attribute(value=Name(id='cap', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value=5, kind=None)], keywords=[]), type_comment=None), Assign(targets=[Name(id='nframes', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Call(func=Attribute(value=Name(id='cap', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value=7, kind=None)], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='duration', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='nframes', ctx=Load()), op=Mult(), right=Constant(value=1.0, kind=None)), op=Div(), right=Name(id='fps', ctx=Load())), type_comment=None)], orelse=[Assign(targets=[Name(id='clip', ctx=Store())], value=Call(func=Name(id='VideoFileClip', ctx=Load()), args=[Name(id='video', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='fps', ctx=Store())], value=Attribute(value=Name(id='clip', ctx=Load()), attr='fps', ctx=Load()), type_comment=None), Assign(targets=[Name(id='duration', ctx=Store())], value=Attribute(value=Name(id='clip', ctx=Load()), attr='duration', ctx=Load()), type_comment=None), Assign(targets=[Name(id='nframes', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ceil', ctx=Load()), args=[BinOp(left=BinOp(left=Attribute(value=Name(id='clip', ctx=Load()), attr='duration', ctx=Load()), op=Mult(), right=Constant(value=1.0, kind=None)), op=Div(), right=Name(id='fps', ctx=Load()))], keywords=[])], keywords=[]), type_comment=None)]), Assign(targets=[Name(id='indexlength', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ceil', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='log10', ctx=Load()), args=[Name(id='nframes', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), type_comment=None), If(test=Compare(left=Name(id='crop', ctx=Load()), ops=[Eq()], comparators=[Constant(value=True, kind=None)]), body=[If(test=Name(id='opencv', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='cap', ctx=Load()), attr='set', ctx=Load()), args=[Constant(value=2, kind=None), BinOp(left=Name(id='start', ctx=Load()), op=Mult(), right=Name(id='duration', ctx=Load()))], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='ret', ctx=Store()), Name(id='frame', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='cap', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]), type_comment=None), If(test=Name(id='ret', ctx=Load()), body=[Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='cvtColor', ctx=Load()), args=[Name(id='frame', ctx=Load()), Attribute(value=Name(id='cv2', ctx=Load()), attr='COLOR_BGR2RGB', ctx=Load())], keywords=[]), type_comment=None)], orelse=[])], orelse=[Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Attribute(value=Name(id='clip', ctx=Load()), attr='get_frame', ctx=Load()), args=[BinOp(left=Name(id='start', ctx=Load()), op=Mult(), right=Attribute(value=Name(id='clip', ctx=Load()), attr='duration', ctx=Load()))], keywords=[]), type_comment=None)]), Assign(targets=[Name(id='fname', ctx=Store())], value=Call(func=Name(id='Path', ctx=Load()), args=[Name(id='video', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_path', ctx=Store())], value=BinOp(left=BinOp(left=Subscript(value=Attribute(value=Call(func=Name(id='Path', ctx=Load()), args=[Name(id='config', ctx=Load())], keywords=[]), attr='parents', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), op=Div(), right=Constant(value='labeled-data', kind=None)), op=Div(), right=Attribute(value=Name(id='fname', ctx=Load()), attr='stem', ctx=Load())), type_comment=None), If(test=Call(func=Attribute(value=Name(id='output_path', ctx=Load()), attr='exists', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='fig', ctx=Store()), Name(id='ax', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='subplots', ctx=Load()), args=[Constant(value=1, kind=None)], keywords=[]), type_comment=None), Assign(targets=[Name(id='coords', ctx=Store())], value=Call(func=Attribute(value=Name(id='select_crop_parameters', ctx=Load()), attr='show', ctx=Load()), args=[Name(id='config', ctx=Load()), Name(id='image', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Subscript(value=Subscript(value=Name(id='cfg', ctx=Load()), slice=Index(value=Constant(value='video_sets', kind=None)), ctx=Load()), slice=Index(value=Name(id='video', ctx=Load())), ctx=Store())], value=Dict(keys=[Constant(value='crop', kind=None)], values=[Call(func=Attribute(value=Constant(value=', ', kind=None), attr='join', ctx=Load()), args=[Call(func=Name(id='map', ctx=Load()), args=[Name(id='str', ctx=Load()), List(elts=[Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], keywords=[]), Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load())], keywords=[]), Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=2, kind=None)), ctx=Load())], keywords=[]), Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=3, kind=None)), ctx=Load())], keywords=[])], ctx=Load())], keywords=[])], keywords=[])]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='auxiliaryfunctions', ctx=Load()), attr='write_config', ctx=Load()), args=[Name(id='config_file', ctx=Load()), Name(id='cfg', ctx=Load())], keywords=[])), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='output_path', ctx=Load())], keywords=[])], keywords=[]), ops=[Eq()], comparators=[Constant(value=0, kind=None)]), body=[Assign(targets=[Name(id='index', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='start', ctx=Load()), op=Mult(), right=Name(id='duration', ctx=Load())), op=Add(), right=BinOp(left=BinOp(left=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='rand', ctx=Load()), args=[], keywords=[]), op=Mult(), right=Name(id='duration', ctx=Load())), op=Mult(), right=BinOp(left=Name(id='stop', ctx=Load()), op=Sub(), right=Name(id='start', ctx=Load()))))], keywords=[]), type_comment=None), If(test=Name(id='opencv', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='cap', ctx=Load()), attr='set', ctx=Load()), args=[Constant(value=1, kind=None), Name(id='index', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='ret', ctx=Store()), Name(id='frame', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='cap', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]), type_comment=None), If(test=Name(id='ret', ctx=Load()), body=[Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Name(id='img_as_ubyte', ctx=Load()), args=[Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='cvtColor', ctx=Load()), args=[Name(id='frame', ctx=Load()), Attribute(value=Name(id='cv2', ctx=Load()), attr='COLOR_BGR2RGB', ctx=Load())], keywords=[])], keywords=[]), type_comment=None)], orelse=[])], orelse=[Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Name(id='img_as_ubyte', ctx=Load()), args=[Call(func=Attribute(value=Name(id='clip', ctx=Load()), attr='get_frame', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='index', ctx=Load()), op=Mult(), right=Constant(value=1.0, kind=None)), op=Div(), right=Attribute(value=Name(id='clip', ctx=Load()), attr='fps', ctx=Load()))], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='clip', ctx=Store())], value=Call(func=Attribute(value=Name(id='clip', ctx=Load()), attr='crop', ctx=Load()), args=[], keywords=[keyword(arg='y1', value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=2, kind=None)), ctx=Load())], keywords=[])), keyword(arg='y2', value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=3, kind=None)), ctx=Load())], keywords=[])), keyword(arg='x1', value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], keywords=[])), keyword(arg='x2', value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load())], keywords=[]))]), type_comment=None)]), Assign(targets=[Name(id='saveimg', ctx=Store())], value=BinOp(left=BinOp(left=BinOp(left=Call(func=Name(id='str', ctx=Load()), args=[Name(id='output_path', ctx=Load())], keywords=[]), op=Add(), right=Constant(value='/img', kind=None)), op=Add(), right=Call(func=Attribute(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='index', ctx=Load())], keywords=[]), attr='zfill', ctx=Load()), args=[Name(id='indexlength', ctx=Load())], keywords=[])), op=Add(), right=Constant(value='.png', kind=None)), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='io', ctx=Load()), attr='imsave', ctx=Load()), args=[Name(id='saveimg', ctx=Load()), Name(id='image', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='askuser', ctx=Store())], value=Call(func=Name(id='input', ctx=Load()), args=[Constant(value='The directory already contains some frames. Do you want to add to it?(yes/no): ', kind=None)], keywords=[]), type_comment=None), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='askuser', ctx=Load()), ops=[Eq()], comparators=[Constant(value='y', kind=None)]), Compare(left=Name(id='askuser', ctx=Load()), ops=[Eq()], comparators=[Constant(value='yes', kind=None)]), Compare(left=Name(id='askuser', ctx=Load()), ops=[Eq()], comparators=[Constant(value='Y', kind=None)]), Compare(left=Name(id='askuser', ctx=Load()), ops=[Eq()], comparators=[Constant(value='Yes', kind=None)])]), body=[Assign(targets=[Name(id='index', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='start', ctx=Load()), op=Mult(), right=Name(id='duration', ctx=Load())), op=Add(), right=BinOp(left=BinOp(left=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='rand', ctx=Load()), args=[], keywords=[]), op=Mult(), right=Name(id='duration', ctx=Load())), op=Mult(), right=BinOp(left=Name(id='stop', ctx=Load()), op=Sub(), right=Name(id='start', ctx=Load()))))], keywords=[]), type_comment=None), If(test=Name(id='opencv', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='cap', ctx=Load()), attr='set', ctx=Load()), args=[Constant(value=1, kind=None), Name(id='index', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='ret', ctx=Store()), Name(id='frame', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='cap', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]), type_comment=None), If(test=Name(id='ret', ctx=Load()), body=[Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Name(id='img_as_ubyte', ctx=Load()), args=[Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='cvtColor', ctx=Load()), args=[Name(id='frame', ctx=Load()), Attribute(value=Name(id='cv2', ctx=Load()), attr='COLOR_BGR2RGB', ctx=Load())], keywords=[])], keywords=[]), type_comment=None)], orelse=[])], orelse=[Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Name(id='img_as_ubyte', ctx=Load()), args=[Call(func=Attribute(value=Name(id='clip', ctx=Load()), attr='get_frame', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='index', ctx=Load()), op=Mult(), right=Constant(value=1.0, kind=None)), op=Div(), right=Attribute(value=Name(id='clip', ctx=Load()), attr='fps', ctx=Load()))], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='clip', ctx=Store())], value=Call(func=Attribute(value=Name(id='clip', ctx=Load()), attr='crop', ctx=Load()), args=[], keywords=[keyword(arg='y1', value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=2, kind=None)), ctx=Load())], keywords=[])), keyword(arg='y2', value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=3, kind=None)), ctx=Load())], keywords=[])), keyword(arg='x1', value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], keywords=[])), keyword(arg='x2', value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load())], keywords=[]))]), type_comment=None)]), Assign(targets=[Name(id='saveimg', ctx=Store())], value=BinOp(left=BinOp(left=BinOp(left=Call(func=Name(id='str', ctx=Load()), args=[Name(id='output_path', ctx=Load())], keywords=[]), op=Add(), right=Constant(value='/img', kind=None)), op=Add(), right=Call(func=Attribute(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='index', ctx=Load())], keywords=[]), attr='zfill', ctx=Load()), args=[Name(id='indexlength', ctx=Load())], keywords=[])), op=Add(), right=Constant(value='.png', kind=None)), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='io', ctx=Load()), attr='imsave', ctx=Load()), args=[Name(id='saveimg', ctx=Load()), Name(id='image', ctx=Load())], keywords=[])), Pass()], orelse=[Expr(value=Call(func=Attribute(value=Name(id='sys', ctx=Load()), attr='exit', ctx=Load()), args=[Constant(value='Delete the frames and try again later!', kind=None)], keywords=[]))])])], orelse=[])], orelse=[Assign(targets=[Name(id='numframes2pick', ctx=Store())], value=BinOp(left=Subscript(value=Name(id='cfg', ctx=Load()), slice=Index(value=Constant(value='numframes2pick', kind=None)), ctx=Load()), op=Add(), right=Constant(value=1, kind=None)), type_comment=None)]), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[BinOp(left=Constant(value='Extracting frames based on %s ...', kind=None), op=Mod(), right=Name(id='algo', ctx=Load()))], keywords=[])), If(test=Compare(left=Name(id='algo', ctx=Load()), ops=[Eq()], comparators=[Constant(value='uniform', kind=None)]), body=[If(test=Name(id='opencv', ctx=Load()), body=[Assign(targets=[Name(id='frames2pick', ctx=Store())], value=Call(func=Attribute(value=Name(id='frameselectiontools', ctx=Load()), attr='UniformFramescv2', ctx=Load()), args=[Name(id='cap', ctx=Load()), BinOp(left=Name(id='numframes2pick', ctx=Load()), op=Sub(), right=Constant(value=1, kind=None)), Name(id='start', ctx=Load()), Name(id='stop', ctx=Load())], keywords=[]), type_comment=None)], orelse=[Assign(targets=[Name(id='frames2pick', ctx=Store())], value=Call(func=Attribute(value=Name(id='frameselectiontools', ctx=Load()), attr='UniformFrames', ctx=Load()), args=[Name(id='clip', ctx=Load()), BinOp(left=Name(id='numframes2pick', ctx=Load()), op=Sub(), right=Constant(value=1, kind=None)), Name(id='start', ctx=Load()), Name(id='stop', ctx=Load())], keywords=[]), type_comment=None)])], orelse=[If(test=Compare(left=Name(id='algo', ctx=Load()), ops=[Eq()], comparators=[Constant(value='kmeans', kind=None)]), body=[If(test=Name(id='opencv', ctx=Load()), body=[Assign(targets=[Name(id='frames2pick', ctx=Store())], value=Call(func=Attribute(value=Name(id='frameselectiontools', ctx=Load()), attr='KmeansbasedFrameselectioncv2', ctx=Load()), args=[Name(id='cap', ctx=Load()), BinOp(left=Name(id='numframes2pick', ctx=Load()), op=Sub(), right=Constant(value=1, kind=None)), Name(id='start', ctx=Load()), Name(id='stop', ctx=Load()), Name(id='crop', ctx=Load()), Name(id='coords', ctx=Load())], keywords=[keyword(arg='step', value=Name(id='cluster_step', ctx=Load())), keyword(arg='resizewidth', value=Name(id='cluster_resizewidth', ctx=Load())), keyword(arg='color', value=Name(id='cluster_color', ctx=Load()))]), type_comment=None)], orelse=[Assign(targets=[Name(id='frames2pick', ctx=Store())], value=Call(func=Attribute(value=Name(id='frameselectiontools', ctx=Load()), attr='KmeansbasedFrameselection', ctx=Load()), args=[Name(id='clip', ctx=Load()), BinOp(left=Name(id='numframes2pick', ctx=Load()), op=Sub(), right=Constant(value=1, kind=None)), Name(id='start', ctx=Load()), Name(id='stop', ctx=Load())], keywords=[keyword(arg='step', value=Name(id='cluster_step', ctx=Load())), keyword(arg='resizewidth', value=Name(id='cluster_resizewidth', ctx=Load())), keyword(arg='color', value=Name(id='cluster_color', ctx=Load()))]), type_comment=None)])], orelse=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value=""Please implement this method yourself and send us a pull request! Otherwise, choose 'uniform' or 'kmeans'."", kind=None)], keywords=[])), Assign(targets=[Name(id='frames2pick', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None)])]), Assign(targets=[Name(id='output_path', ctx=Store())], value=BinOp(left=BinOp(left=Subscript(value=Attribute(value=Call(func=Name(id='Path', ctx=Load()), args=[Name(id='config', ctx=Load())], keywords=[]), attr='parents', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), op=Div(), right=Constant(value='labeled-data', kind=None)), op=Div(), right=Attribute(value=Call(func=Name(id='Path', ctx=Load()), args=[Name(id='video', ctx=Load())], keywords=[]), attr='stem', ctx=Load())), type_comment=None), If(test=Name(id='opencv', ctx=Load()), body=[For(target=Name(id='index', ctx=Store()), iter=Name(id='frames2pick', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='cap', ctx=Load()), attr='set', ctx=Load()), args=[Constant(value=1, kind=None), Name(id='index', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='ret', ctx=Store()), Name(id='frame', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='cap', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]), type_comment=None), If(test=Name(id='ret', ctx=Load()), body=[Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Name(id='img_as_ubyte', ctx=Load()), args=[Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='cvtColor', ctx=Load()), args=[Name(id='frame', ctx=Load()), Attribute(value=Name(id='cv2', ctx=Load()), attr='COLOR_BGR2RGB', ctx=Load())], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='img_name', ctx=Store())], value=BinOp(left=BinOp(left=BinOp(left=Call(func=Name(id='str', ctx=Load()), args=[Name(id='output_path', ctx=Load())], keywords=[]), op=Add(), right=Constant(value='/img', kind=None)), op=Add(), right=Call(func=Attribute(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='index', ctx=Load())], keywords=[]), attr='zfill', ctx=Load()), args=[Name(id='indexlength', ctx=Load())], keywords=[])), op=Add(), right=Constant(value='.png', kind=None)), type_comment=None), If(test=Name(id='crop', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='io', ctx=Load()), attr='imsave', ctx=Load()), args=[Name(id='img_name', ctx=Load()), Subscript(value=Name(id='image', ctx=Load()), slice=ExtSlice(dims=[Slice(lower=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=2, kind=None)), ctx=Load())], keywords=[]), upper=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=3, kind=None)), ctx=Load())], keywords=[]), step=None), Slice(lower=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], keywords=[]), upper=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load())], keywords=[]), step=None), Slice(lower=None, upper=None, step=None)]), ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='io', ctx=Load()), attr='imsave', ctx=Load()), args=[Name(id='img_name', ctx=Load()), Name(id='image', ctx=Load())], keywords=[]))])], orelse=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Frame', kind=None), Name(id='index', ctx=Load()), Constant(value=' not found!', kind=None)], keywords=[]))])], orelse=[], type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='cap', ctx=Load()), attr='release', ctx=Load()), args=[], keywords=[]))], orelse=[For(target=Name(id='index', ctx=Store()), iter=Name(id='frames2pick', ctx=Load()), body=[Try(body=[Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Name(id='img_as_ubyte', ctx=Load()), args=[Call(func=Attribute(value=Name(id='clip', ctx=Load()), attr='get_frame', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='index', ctx=Load()), op=Mult(), right=Constant(value=1.0, kind=None)), op=Div(), right=Attribute(value=Name(id='clip', ctx=Load()), attr='fps', ctx=Load()))], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='img_name', ctx=Store())], value=BinOp(left=BinOp(left=BinOp(left=Call(func=Name(id='str', ctx=Load()), args=[Name(id='output_path', ctx=Load())], keywords=[]), op=Add(), right=Constant(value='/img', kind=None)), op=Add(), right=Call(func=Attribute(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='index', ctx=Load())], keywords=[]), attr='zfill', ctx=Load()), args=[Name(id='indexlength', ctx=Load())], keywords=[])), op=Add(), right=Constant(value='.png', kind=None)), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='io', ctx=Load()), attr='imsave', ctx=Load()), args=[Name(id='img_name', ctx=Load()), Name(id='image', ctx=Load())], keywords=[])), If(test=Compare(left=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='var', ctx=Load()), args=[Name(id='image', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=0, kind=None)]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Seems like black/constant images are extracted from your video. Perhaps consider using opencv under the hood, by setting: opencv=True', kind=None)], keywords=[]))], orelse=[])], handlers=[ExceptHandler(type=Name(id='FileNotFoundError', ctx=Load()), name=None, body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Frame # ', kind=None), Name(id='index', ctx=Load()), Constant(value=' does not exist.', kind=None)], keywords=[]))])], orelse=[], finalbody=[])], orelse=[], type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='clip', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Delete(targets=[Name(id='clip', ctx=Del())])])], orelse=[])], orelse=[], type_comment=None)], orelse=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value=""Invalid MODE. Choose either 'manual' or 'automatic'. Check ``help(deeplabcut.extract_frames)`` on python and ``deeplabcut.extract_frames?``               for ipython/jupyter notebook for more details."", kind=None)], keywords=[]))])]), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value=""\nFrames were selected.\nYou can now label the frames using the function 'label_frames' (if you extracted enough frames for all videos)."", kind=None)], keywords=[]))], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='line_select_callback', args=arguments(posonlyargs=[], args=[arg(arg='eclick', annotation=None, type_comment=None), arg(arg='erelease', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='eclick and erelease are the press and release events', kind=None)), Global(names=['coords']), Assign(targets=[Tuple(elts=[Name(id='new_x1', ctx=Store()), Name(id='new_y1', ctx=Store())], ctx=Store())], value=Tuple(elts=[Attribute(value=Name(id='eclick', ctx=Load()), attr='xdata', ctx=Load()), Attribute(value=Name(id='eclick', ctx=Load()), attr='ydata', ctx=Load())], ctx=Load()), type_comment=None), Assign(targets=[Tuple(elts=[Name(id='new_x2', ctx=Store()), Name(id='new_y2', ctx=Store())], ctx=Store())], value=Tuple(elts=[Attribute(value=Name(id='erelease', ctx=Load()), attr='xdata', ctx=Load()), Attribute(value=Name(id='erelease', ctx=Load()), attr='ydata', ctx=Load())], ctx=Load()), type_comment=None), Assign(targets=[Name(id='coords', ctx=Store())], value=List(elts=[Call(func=Name(id='str', ctx=Load()), args=[Call(func=Name(id='int', ctx=Load()), args=[Name(id='new_x1', ctx=Load())], keywords=[])], keywords=[]), Call(func=Name(id='str', ctx=Load()), args=[Call(func=Name(id='int', ctx=Load()), args=[Name(id='new_x2', ctx=Load())], keywords=[])], keywords=[]), Call(func=Name(id='str', ctx=Load()), args=[Call(func=Name(id='int', ctx=Load()), args=[Name(id='new_y1', ctx=Load())], keywords=[])], keywords=[]), Call(func=Name(id='str', ctx=Load()), args=[Call(func=Name(id='int', ctx=Load()), args=[Name(id='new_y2', ctx=Load())], keywords=[])], keywords=[])], ctx=Load()), type_comment=None)], decorator_list=[], returns=None, type_comment=None)], type_ignores=[])","Module(body=[Expr(value=Constant(value='\nDeepLabCut2.0 Toolbox\nhttps://github.com/AlexEMG/DeepLabCut\nA Mathis, alexander.mathis@bethgelab.org\nT Nath, nath@rowland.harvard.edu\nM Mathis, mackenzie@post.harvard.edu\n', kind=None)), FunctionDef(name='extract_frames', args=arguments(posonlyargs=[], args=[arg(arg='config', annotation=None, type_comment=None), arg(arg='mode', annotation=None, type_comment=None), arg(arg='algo', annotation=None, type_comment=None), arg(arg='crop', annotation=None, type_comment=None), arg(arg='userfeedback', annotation=None, type_comment=None), arg(arg='cluster_step', annotation=None, type_comment=None), arg(arg='cluster_resizewidth', annotation=None, type_comment=None), arg(arg='cluster_color', annotation=None, type_comment=None), arg(arg='opencv', annotation=None, type_comment=None), arg(arg='slider_width', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[Constant(value='automatic', kind=None), Constant(value='kmeans', kind=None), Constant(value=False, kind=None), Constant(value=True, kind=None), Constant(value=1, kind=None), Constant(value=30, kind=None), Constant(value=False, kind=None), Constant(value=True, kind=None), Constant(value=25, kind=None)]), body=[Expr(value=Constant(value=""\n    Extracts frames from the videos in the config.yaml file. Only the videos in the config.yaml will be used to select the frames.\n\n    Use the function ``add_new_video`` at any stage of the project to add new videos to the config file and extract their frames.\n    \n    The provided function either selects frames from the videos in a randomly and temporally uniformly distributed way (uniform), \n \n    by clustering based on visual appearance (k-means), or by manual selection. \n    \n    Three important parameters for automatic extraction: numframes2pick, start and stop are set in the config file. \n    \n    Please refer to the user guide for more details on methods and parameters https://www.biorxiv.org/content/biorxiv/early/2018/11/24/476531.full.pdf\n    \n    Parameters\n    ----------\n    config : string\n        Full path of the config.yaml file as a string.\n        \n    mode : string\n        String containing the mode of extraction. It must be either ``automatic`` or ``manual``.\n        \n    algo : string \n        String specifying the algorithm to use for selecting the frames. Currently, deeplabcut supports either ``kmeans`` or ``uniform`` based selection. This flag is\n        only required for ``automatic`` mode and the default is ``uniform``. For uniform, frames are picked in temporally uniform way, kmeans performs clustering on downsampled frames (see user guide for details).\n        Note: color information is discarded for kmeans, thus e.g. for camouflaged octopus clustering one might want to change this. \n        \n    crop : bool, optional\n        If this is set to True, a user interface pops up with a frame to select the cropping parameters. Use the left click to draw a cropping area and hit the button set cropping parameters to save the cropping parameters for a video.\n        The default is ``False``; if provided it must be either ``True`` or ``False``.\n            \n    userfeedback: bool, optional\n        If this is set to false during automatic mode then frames for all videos are extracted. The user can set this to true, which will result in a dialog,\n        where the user is asked for each video if (additional/any) frames from this video should be extracted. Use this, e.g. if you have already labeled\n        some folders and want to extract data for new videos. \n    \n    cluster_resizewidth: number, default: 30\n        For k-means one can change the width to which the images are downsampled (aspect ratio is fixed).\n    \n    cluster_step: number, default: 1\n        By default each frame is used for clustering, but for long videos one could only use every nth frame (set by: cluster_step). This saves memory before clustering can start, however, \n        reading the individual frames takes longer due to the skipping.\n    \n    cluster_color: bool, default: False\n        If false then each downsampled image is treated as a grayscale vector (discarding color information). If true, then the color channels are considered. This increases \n        the computational complexity. \n    \n    opencv: bool, default: True\n        Uses openCV for loading & extractiong (otherwise moviepy (legacy))\n        \n    slider_width: number, default: 25\n        Width of the video frames slider, in percent of window\n        \n    Examples\n    --------\n    for selecting frames automatically with 'kmeans' and want to crop the frames.\n    >>> deeplabcut.extract_frames('/analysis/project/reaching-task/config.yaml','automatic','kmeans',True)\n    --------\n    for selecting frames automatically with 'kmeans' and considering the color information.\n    >>> deeplabcut.extract_frames('/analysis/project/reaching-task/config.yaml','automatic','kmeans',cluster_color=True)\n    --------\n    for selecting frames automatically with 'uniform' and want to crop the frames.\n    >>> deeplabcut.extract_frames('/analysis/project/reaching-task/config.yaml','automatic',crop=True)\n    --------\n    for selecting frames manually,\n    >>> deeplabcut.extract_frames('/analysis/project/reaching-task/config.yaml','manual')\n    --------\n    for selecting frames manually, with a 60% wide frames slider\n    >>> deeplabcut.extract_frames('/analysis/project/reaching-task/config.yaml','manual', slider_width=60)\n    \n    While selecting the frames manually, you do not need to specify the ``crop`` parameter in the command. Rather, you will get a prompt in the graphic user interface to choose \n    if you need to crop or not.\n    --------\n    \n    "", kind=None)), Import(names=[alias(name='os', asname=None)]), Import(names=[alias(name='sys', asname=None)]), Import(names=[alias(name='yaml', asname=None)]), Import(names=[alias(name='numpy', asname='np')]), ImportFrom(module='pathlib', names=[alias(name='Path', asname=None)], level=0), ImportFrom(module='skimage', names=[alias(name='io', asname=None)], level=0), ImportFrom(module='skimage.util', names=[alias(name='img_as_ubyte', asname=None)], level=0), Import(names=[alias(name='matplotlib.pyplot', asname='plt')]), Import(names=[alias(name='matplotlib.patches', asname='patches')]), ImportFrom(module='deeplabcut.utils', names=[alias(name='frameselectiontools', asname=None)], level=0), ImportFrom(module='deeplabcut.utils', names=[alias(name='auxiliaryfunctions', asname=None)], level=0), ImportFrom(module='deeplabcut.utils', names=[alias(name='select_crop_parameters', asname=None)], level=0), ImportFrom(module='matplotlib.widgets', names=[alias(name='RectangleSelector', asname=None)], level=0), If(test=Compare(left=Name(id='mode', ctx=Load()), ops=[Eq()], comparators=[Constant(value='manual', kind=None)]), body=[Assign(targets=[Name(id='wd', ctx=Store())], value=Subscript(value=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='Path', ctx=Load()), args=[Name(id='config', ctx=Load())], keywords=[]), attr='resolve', ctx=Load()), args=[], keywords=[]), attr='parents', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='chdir', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='wd', ctx=Load())], keywords=[])], keywords=[])), ImportFrom(module='deeplabcut.generate_training_dataset', names=[alias(name='frame_extraction_toolbox', asname=None)], level=0), Expr(value=Call(func=Attribute(value=Name(id='frame_extraction_toolbox', ctx=Load()), attr='show', ctx=Load()), args=[Name(id='config', ctx=Load()), Name(id='slider_width', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='mode', ctx=Load()), ops=[Eq()], comparators=[Constant(value='automatic', kind=None)]), body=[Assign(targets=[Name(id='config_file', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Path', ctx=Load()), args=[Name(id='config', ctx=Load())], keywords=[]), attr='resolve', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='cfg', ctx=Store())], value=Call(func=Attribute(value=Name(id='auxiliaryfunctions', ctx=Load()), attr='read_config', ctx=Load()), args=[Name(id='config_file', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Config file read successfully.', kind=None)], keywords=[])), Assign(targets=[Name(id='numframes2pick', ctx=Store())], value=Subscript(value=Name(id='cfg', ctx=Load()), slice=Index(value=Constant(value='numframes2pick', kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Name(id='start', ctx=Store())], value=Subscript(value=Name(id='cfg', ctx=Load()), slice=Index(value=Constant(value='start', kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Name(id='stop', ctx=Store())], value=Subscript(value=Name(id='cfg', ctx=Load()), slice=Index(value=Constant(value='stop', kind=None)), ctx=Load()), type_comment=None), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='start', ctx=Load()), ops=[Gt()], comparators=[Constant(value=1, kind=None)]), Compare(left=Name(id='stop', ctx=Load()), ops=[Gt()], comparators=[Constant(value=1, kind=None)]), Compare(left=Name(id='start', ctx=Load()), ops=[Lt()], comparators=[Constant(value=0, kind=None)]), Compare(left=Name(id='stop', ctx=Load()), ops=[Lt()], comparators=[Constant(value=0, kind=None)]), Compare(left=Name(id='start', ctx=Load()), ops=[GtE()], comparators=[Name(id='stop', ctx=Load())])]), body=[Raise(exc=Call(func=Name(id='Exception', ctx=Load()), args=[Constant(value='Erroneous start or stop values. Please correct it in the config file.', kind=None)], keywords=[]), cause=None)], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='numframes2pick', ctx=Load()), ops=[Lt()], comparators=[Constant(value=1, kind=None)]), UnaryOp(op=Not(), operand=Call(func=Name(id='int', ctx=Load()), args=[Name(id='numframes2pick', ctx=Load())], keywords=[]))]), body=[Raise(exc=Call(func=Name(id='Exception', ctx=Load()), args=[Constant(value='Perhaps consider extracting more, or a natural number of frames.', kind=None)], keywords=[]), cause=None)], orelse=[]), Assign(targets=[Name(id='videos', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='cfg', ctx=Load()), slice=Index(value=Constant(value='video_sets', kind=None)), ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[]), type_comment=None), If(test=Name(id='opencv', ctx=Load()), body=[Import(names=[alias(name='cv2', asname=None)])], orelse=[ImportFrom(module='moviepy.editor', names=[alias(name='VideoFileClip', asname=None)], level=0)]), For(target=Tuple(elts=[Name(id='vindex', ctx=Store()), Name(id='video', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='videos', ctx=Load())], keywords=[]), body=[Global(names=['coords']), Assign(targets=[Name(id='coords', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Subscript(value=Subscript(value=Name(id='cfg', ctx=Load()), slice=Index(value=Constant(value='video_sets', kind=None)), ctx=Load()), slice=Index(value=Name(id='video', ctx=Load())), ctx=Load()), slice=Index(value=Constant(value='crop', kind=None)), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=',', kind=None)], keywords=[]), type_comment=None), If(test=Name(id='userfeedback', ctx=Load()), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Do you want to extract (perhaps additional) frames for video:', kind=None), Name(id='video', ctx=Load()), Constant(value='?', kind=None)], keywords=[])), Assign(targets=[Name(id='askuser', ctx=Store())], value=Call(func=Name(id='input', ctx=Load()), args=[Constant(value='yes/no', kind=None)], keywords=[]), type_comment=None)], orelse=[Assign(targets=[Name(id='askuser', ctx=Store())], value=Constant(value='yes', kind=None), type_comment=None)]), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='askuser', ctx=Load()), ops=[Eq()], comparators=[Constant(value='y', kind=None)]), Compare(left=Name(id='askuser', ctx=Load()), ops=[Eq()], comparators=[Constant(value='yes', kind=None)]), Compare(left=Name(id='askuser', ctx=Load()), ops=[Eq()], comparators=[Constant(value='Ja', kind=None)]), Compare(left=Name(id='askuser', ctx=Load()), ops=[Eq()], comparators=[Constant(value='ha', kind=None)])]), body=[If(test=Name(id='opencv', ctx=Load()), body=[Assign(targets=[Name(id='cap', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='VideoCapture', ctx=Load()), args=[Name(id='video', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='fps', ctx=Store())], value=Call(func=Attribute(value=Name(id='cap', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value=5, kind=None)], keywords=[]), type_comment=None), Assign(targets=[Name(id='nframes', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Call(func=Attribute(value=Name(id='cap', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value=7, kind=None)], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='duration', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='nframes', ctx=Load()), op=Mult(), right=Constant(value=1.0, kind=None)), op=Div(), right=Name(id='fps', ctx=Load())), type_comment=None)], orelse=[Assign(targets=[Name(id='clip', ctx=Store())], value=Call(func=Name(id='VideoFileClip', ctx=Load()), args=[Name(id='video', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='fps', ctx=Store())], value=Attribute(value=Name(id='clip', ctx=Load()), attr='fps', ctx=Load()), type_comment=None), Assign(targets=[Name(id='duration', ctx=Store())], value=Attribute(value=Name(id='clip', ctx=Load()), attr='duration', ctx=Load()), type_comment=None), Assign(targets=[Name(id='nframes', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ceil', ctx=Load()), args=[BinOp(left=BinOp(left=Attribute(value=Name(id='clip', ctx=Load()), attr='duration', ctx=Load()), op=Mult(), right=Constant(value=1.0, kind=None)), op=Div(), right=Name(id='fps', ctx=Load()))], keywords=[])], keywords=[]), type_comment=None)]), Assign(targets=[Name(id='indexlength', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ceil', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='log10', ctx=Load()), args=[Name(id='nframes', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), type_comment=None), If(test=Compare(left=Name(id='crop', ctx=Load()), ops=[Eq()], comparators=[Constant(value=True, kind=None)]), body=[If(test=Name(id='opencv', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='cap', ctx=Load()), attr='set', ctx=Load()), args=[Constant(value=2, kind=None), BinOp(left=Name(id='start', ctx=Load()), op=Mult(), right=Name(id='duration', ctx=Load()))], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='ret', ctx=Store()), Name(id='frame', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='cap', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]), type_comment=None), If(test=Name(id='ret', ctx=Load()), body=[Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='cvtColor', ctx=Load()), args=[Name(id='frame', ctx=Load()), Attribute(value=Name(id='cv2', ctx=Load()), attr='COLOR_BGR2RGB', ctx=Load())], keywords=[]), type_comment=None)], orelse=[])], orelse=[Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Attribute(value=Name(id='clip', ctx=Load()), attr='get_frame', ctx=Load()), args=[BinOp(left=Name(id='start', ctx=Load()), op=Mult(), right=Attribute(value=Name(id='clip', ctx=Load()), attr='duration', ctx=Load()))], keywords=[]), type_comment=None)]), Assign(targets=[Name(id='fname', ctx=Store())], value=Call(func=Name(id='Path', ctx=Load()), args=[Name(id='video', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_path', ctx=Store())], value=BinOp(left=BinOp(left=Subscript(value=Attribute(value=Call(func=Name(id='Path', ctx=Load()), args=[Name(id='config', ctx=Load())], keywords=[]), attr='parents', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), op=Div(), right=Constant(value='labeled-data', kind=None)), op=Div(), right=Attribute(value=Name(id='fname', ctx=Load()), attr='stem', ctx=Load())), type_comment=None), If(test=Call(func=Attribute(value=Name(id='output_path', ctx=Load()), attr='exists', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='fig', ctx=Store()), Name(id='ax', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='subplots', ctx=Load()), args=[Constant(value=1, kind=None)], keywords=[]), type_comment=None), Assign(targets=[Name(id='coords', ctx=Store())], value=Call(func=Attribute(value=Name(id='select_crop_parameters', ctx=Load()), attr='show', ctx=Load()), args=[Name(id='config', ctx=Load()), Name(id='image', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Subscript(value=Subscript(value=Name(id='cfg', ctx=Load()), slice=Index(value=Constant(value='video_sets', kind=None)), ctx=Load()), slice=Index(value=Name(id='video', ctx=Load())), ctx=Store())], value=Dict(keys=[Constant(value='crop', kind=None)], values=[Call(func=Attribute(value=Constant(value=', ', kind=None), attr='join', ctx=Load()), args=[Call(func=Name(id='map', ctx=Load()), args=[Name(id='str', ctx=Load()), List(elts=[Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], keywords=[]), Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load())], keywords=[]), Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=2, kind=None)), ctx=Load())], keywords=[]), Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=3, kind=None)), ctx=Load())], keywords=[])], ctx=Load())], keywords=[])], keywords=[])]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='auxiliaryfunctions', ctx=Load()), attr='write_config', ctx=Load()), args=[Name(id='config_file', ctx=Load()), Name(id='cfg', ctx=Load())], keywords=[])), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='output_path', ctx=Load())], keywords=[])], keywords=[]), ops=[Eq()], comparators=[Constant(value=0, kind=None)]), body=[Assign(targets=[Name(id='index', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='start', ctx=Load()), op=Mult(), right=Name(id='duration', ctx=Load())), op=Add(), right=BinOp(left=BinOp(left=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='rand', ctx=Load()), args=[], keywords=[]), op=Mult(), right=Name(id='duration', ctx=Load())), op=Mult(), right=BinOp(left=Name(id='stop', ctx=Load()), op=Sub(), right=Name(id='start', ctx=Load()))))], keywords=[]), type_comment=None), If(test=Name(id='opencv', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='cap', ctx=Load()), attr='set', ctx=Load()), args=[Constant(value=1, kind=None), Name(id='index', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='ret', ctx=Store()), Name(id='frame', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='cap', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]), type_comment=None), If(test=Name(id='ret', ctx=Load()), body=[Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Name(id='img_as_ubyte', ctx=Load()), args=[Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='cvtColor', ctx=Load()), args=[Name(id='frame', ctx=Load()), Attribute(value=Name(id='cv2', ctx=Load()), attr='COLOR_BGR2RGB', ctx=Load())], keywords=[])], keywords=[]), type_comment=None)], orelse=[])], orelse=[Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Name(id='img_as_ubyte', ctx=Load()), args=[Call(func=Attribute(value=Name(id='clip', ctx=Load()), attr='get_frame', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='index', ctx=Load()), op=Mult(), right=Constant(value=1.0, kind=None)), op=Div(), right=Attribute(value=Name(id='clip', ctx=Load()), attr='fps', ctx=Load()))], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='clip', ctx=Store())], value=Call(func=Attribute(value=Name(id='clip', ctx=Load()), attr='crop', ctx=Load()), args=[], keywords=[keyword(arg='y1', value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=2, kind=None)), ctx=Load())], keywords=[])), keyword(arg='y2', value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=3, kind=None)), ctx=Load())], keywords=[])), keyword(arg='x1', value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], keywords=[])), keyword(arg='x2', value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load())], keywords=[]))]), type_comment=None)]), Assign(targets=[Name(id='saveimg', ctx=Store())], value=BinOp(left=BinOp(left=BinOp(left=Call(func=Name(id='str', ctx=Load()), args=[Name(id='output_path', ctx=Load())], keywords=[]), op=Add(), right=Constant(value='/img', kind=None)), op=Add(), right=Call(func=Attribute(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='index', ctx=Load())], keywords=[]), attr='zfill', ctx=Load()), args=[Name(id='indexlength', ctx=Load())], keywords=[])), op=Add(), right=Constant(value='.png', kind=None)), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='io', ctx=Load()), attr='imsave', ctx=Load()), args=[Name(id='saveimg', ctx=Load()), Name(id='image', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='askuser', ctx=Store())], value=Call(func=Name(id='input', ctx=Load()), args=[Constant(value='The directory already contains some frames. Do you want to add to it?(yes/no): ', kind=None)], keywords=[]), type_comment=None), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='askuser', ctx=Load()), ops=[Eq()], comparators=[Constant(value='y', kind=None)]), Compare(left=Name(id='askuser', ctx=Load()), ops=[Eq()], comparators=[Constant(value='yes', kind=None)]), Compare(left=Name(id='askuser', ctx=Load()), ops=[Eq()], comparators=[Constant(value='Y', kind=None)]), Compare(left=Name(id='askuser', ctx=Load()), ops=[Eq()], comparators=[Constant(value='Yes', kind=None)])]), body=[Assign(targets=[Name(id='index', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='start', ctx=Load()), op=Mult(), right=Name(id='duration', ctx=Load())), op=Add(), right=BinOp(left=BinOp(left=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='rand', ctx=Load()), args=[], keywords=[]), op=Mult(), right=Name(id='duration', ctx=Load())), op=Mult(), right=BinOp(left=Name(id='stop', ctx=Load()), op=Sub(), right=Name(id='start', ctx=Load()))))], keywords=[]), type_comment=None), If(test=Name(id='opencv', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='cap', ctx=Load()), attr='set', ctx=Load()), args=[Constant(value=1, kind=None), Name(id='index', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='ret', ctx=Store()), Name(id='frame', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='cap', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]), type_comment=None), If(test=Name(id='ret', ctx=Load()), body=[Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Name(id='img_as_ubyte', ctx=Load()), args=[Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='cvtColor', ctx=Load()), args=[Name(id='frame', ctx=Load()), Attribute(value=Name(id='cv2', ctx=Load()), attr='COLOR_BGR2RGB', ctx=Load())], keywords=[])], keywords=[]), type_comment=None)], orelse=[])], orelse=[Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Name(id='img_as_ubyte', ctx=Load()), args=[Call(func=Attribute(value=Name(id='clip', ctx=Load()), attr='get_frame', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='index', ctx=Load()), op=Mult(), right=Constant(value=1.0, kind=None)), op=Div(), right=Attribute(value=Name(id='clip', ctx=Load()), attr='fps', ctx=Load()))], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='clip', ctx=Store())], value=Call(func=Attribute(value=Name(id='clip', ctx=Load()), attr='crop', ctx=Load()), args=[], keywords=[keyword(arg='y1', value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=2, kind=None)), ctx=Load())], keywords=[])), keyword(arg='y2', value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=3, kind=None)), ctx=Load())], keywords=[])), keyword(arg='x1', value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], keywords=[])), keyword(arg='x2', value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load())], keywords=[]))]), type_comment=None)]), Assign(targets=[Name(id='saveimg', ctx=Store())], value=BinOp(left=BinOp(left=BinOp(left=Call(func=Name(id='str', ctx=Load()), args=[Name(id='output_path', ctx=Load())], keywords=[]), op=Add(), right=Constant(value='/img', kind=None)), op=Add(), right=Call(func=Attribute(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='index', ctx=Load())], keywords=[]), attr='zfill', ctx=Load()), args=[Name(id='indexlength', ctx=Load())], keywords=[])), op=Add(), right=Constant(value='.png', kind=None)), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='io', ctx=Load()), attr='imsave', ctx=Load()), args=[Name(id='saveimg', ctx=Load()), Name(id='image', ctx=Load())], keywords=[])), Pass()], orelse=[Expr(value=Call(func=Attribute(value=Name(id='sys', ctx=Load()), attr='exit', ctx=Load()), args=[Constant(value='Delete the frames and try again later!', kind=None)], keywords=[]))])])], orelse=[])], orelse=[Assign(targets=[Name(id='numframes2pick', ctx=Store())], value=BinOp(left=Subscript(value=Name(id='cfg', ctx=Load()), slice=Index(value=Constant(value='numframes2pick', kind=None)), ctx=Load()), op=Add(), right=Constant(value=1, kind=None)), type_comment=None)]), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[BinOp(left=Constant(value='Extracting frames based on %s ...', kind=None), op=Mod(), right=Name(id='algo', ctx=Load()))], keywords=[])), If(test=Compare(left=Name(id='algo', ctx=Load()), ops=[Eq()], comparators=[Constant(value='uniform', kind=None)]), body=[If(test=Name(id='opencv', ctx=Load()), body=[Assign(targets=[Name(id='frames2pick', ctx=Store())], value=Call(func=Attribute(value=Name(id='frameselectiontools', ctx=Load()), attr='UniformFramescv2', ctx=Load()), args=[Name(id='cap', ctx=Load()), BinOp(left=Name(id='numframes2pick', ctx=Load()), op=Sub(), right=Constant(value=1, kind=None)), Name(id='start', ctx=Load()), Name(id='stop', ctx=Load())], keywords=[]), type_comment=None)], orelse=[Assign(targets=[Name(id='frames2pick', ctx=Store())], value=Call(func=Attribute(value=Name(id='frameselectiontools', ctx=Load()), attr='UniformFrames', ctx=Load()), args=[Name(id='clip', ctx=Load()), BinOp(left=Name(id='numframes2pick', ctx=Load()), op=Sub(), right=Constant(value=1, kind=None)), Name(id='start', ctx=Load()), Name(id='stop', ctx=Load())], keywords=[]), type_comment=None)])], orelse=[If(test=Compare(left=Name(id='algo', ctx=Load()), ops=[Eq()], comparators=[Constant(value='kmeans', kind=None)]), body=[If(test=Name(id='opencv', ctx=Load()), body=[Assign(targets=[Name(id='frames2pick', ctx=Store())], value=Call(func=Attribute(value=Name(id='frameselectiontools', ctx=Load()), attr='KmeansbasedFrameselectioncv2', ctx=Load()), args=[Name(id='cap', ctx=Load()), BinOp(left=Name(id='numframes2pick', ctx=Load()), op=Sub(), right=Constant(value=1, kind=None)), Name(id='start', ctx=Load()), Name(id='stop', ctx=Load()), Name(id='crop', ctx=Load()), Name(id='coords', ctx=Load())], keywords=[keyword(arg='step', value=Name(id='cluster_step', ctx=Load())), keyword(arg='resizewidth', value=Name(id='cluster_resizewidth', ctx=Load())), keyword(arg='color', value=Name(id='cluster_color', ctx=Load()))]), type_comment=None)], orelse=[Assign(targets=[Name(id='frames2pick', ctx=Store())], value=Call(func=Attribute(value=Name(id='frameselectiontools', ctx=Load()), attr='KmeansbasedFrameselection', ctx=Load()), args=[Name(id='clip', ctx=Load()), BinOp(left=Name(id='numframes2pick', ctx=Load()), op=Sub(), right=Constant(value=1, kind=None)), Name(id='start', ctx=Load()), Name(id='stop', ctx=Load())], keywords=[keyword(arg='step', value=Name(id='cluster_step', ctx=Load())), keyword(arg='resizewidth', value=Name(id='cluster_resizewidth', ctx=Load())), keyword(arg='color', value=Name(id='cluster_color', ctx=Load()))]), type_comment=None)])], orelse=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value=""Please implement this method yourself and send us a pull request! Otherwise, choose 'uniform' or 'kmeans'."", kind=None)], keywords=[])), Assign(targets=[Name(id='frames2pick', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None)])]), Assign(targets=[Name(id='output_path', ctx=Store())], value=BinOp(left=BinOp(left=Subscript(value=Attribute(value=Call(func=Name(id='Path', ctx=Load()), args=[Name(id='config', ctx=Load())], keywords=[]), attr='parents', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), op=Div(), right=Constant(value='labeled-data', kind=None)), op=Div(), right=Attribute(value=Call(func=Name(id='Path', ctx=Load()), args=[Name(id='video', ctx=Load())], keywords=[]), attr='stem', ctx=Load())), type_comment=None), If(test=Name(id='opencv', ctx=Load()), body=[For(target=Name(id='index', ctx=Store()), iter=Name(id='frames2pick', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='cap', ctx=Load()), attr='set', ctx=Load()), args=[Constant(value=1, kind=None), Name(id='index', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='ret', ctx=Store()), Name(id='frame', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='cap', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]), type_comment=None), If(test=Name(id='ret', ctx=Load()), body=[Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Name(id='img_as_ubyte', ctx=Load()), args=[Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='cvtColor', ctx=Load()), args=[Name(id='frame', ctx=Load()), Attribute(value=Name(id='cv2', ctx=Load()), attr='COLOR_BGR2RGB', ctx=Load())], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='img_name', ctx=Store())], value=BinOp(left=BinOp(left=BinOp(left=Call(func=Name(id='str', ctx=Load()), args=[Name(id='output_path', ctx=Load())], keywords=[]), op=Add(), right=Constant(value='/img', kind=None)), op=Add(), right=Call(func=Attribute(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='index', ctx=Load())], keywords=[]), attr='zfill', ctx=Load()), args=[Name(id='indexlength', ctx=Load())], keywords=[])), op=Add(), right=Constant(value='.png', kind=None)), type_comment=None), If(test=Name(id='crop', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='io', ctx=Load()), attr='imsave', ctx=Load()), args=[Name(id='img_name', ctx=Load()), Subscript(value=Name(id='image', ctx=Load()), slice=ExtSlice(dims=[Slice(lower=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=2, kind=None)), ctx=Load())], keywords=[]), upper=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=3, kind=None)), ctx=Load())], keywords=[]), step=None), Slice(lower=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], keywords=[]), upper=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='coords', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load())], keywords=[]), step=None), Slice(lower=None, upper=None, step=None)]), ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='io', ctx=Load()), attr='imsave', ctx=Load()), args=[Name(id='img_name', ctx=Load()), Name(id='image', ctx=Load())], keywords=[]))])], orelse=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Frame', kind=None), Name(id='index', ctx=Load()), Constant(value=' not found!', kind=None)], keywords=[]))])], orelse=[], type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='cap', ctx=Load()), attr='release', ctx=Load()), args=[], keywords=[]))], orelse=[For(target=Name(id='index', ctx=Store()), iter=Name(id='frames2pick', ctx=Load()), body=[Try(body=[Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Name(id='img_as_ubyte', ctx=Load()), args=[Call(func=Attribute(value=Name(id='clip', ctx=Load()), attr='get_frame', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='index', ctx=Load()), op=Mult(), right=Constant(value=1.0, kind=None)), op=Div(), right=Attribute(value=Name(id='clip', ctx=Load()), attr='fps', ctx=Load()))], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='img_name', ctx=Store())], value=BinOp(left=BinOp(left=BinOp(left=Call(func=Name(id='str', ctx=Load()), args=[Name(id='output_path', ctx=Load())], keywords=[]), op=Add(), right=Constant(value='/img', kind=None)), op=Add(), right=Call(func=Attribute(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='index', ctx=Load())], keywords=[]), attr='zfill', ctx=Load()), args=[Name(id='indexlength', ctx=Load())], keywords=[])), op=Add(), right=Constant(value='.png', kind=None)), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='io', ctx=Load()), attr='imsave', ctx=Load()), args=[Name(id='img_name', ctx=Load()), Name(id='image', ctx=Load())], keywords=[])), If(test=Compare(left=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='var', ctx=Load()), args=[Name(id='image', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=0, kind=None)]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Seems like black/constant images are extracted from your video. Perhaps consider using opencv under the hood, by setting: opencv=True', kind=None)], keywords=[]))], orelse=[])], handlers=[ExceptHandler(type=Name(id='FileNotFoundError', ctx=Load()), name=None, body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Frame # ', kind=None), Name(id='index', ctx=Load()), Constant(value=' does not exist.', kind=None)], keywords=[]))])], orelse=[], finalbody=[])], orelse=[], type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='clip', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Delete(targets=[Name(id='clip', ctx=Del())])])], orelse=[])], orelse=[], type_comment=None)], orelse=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value=""Invalid MODE. Choose either 'manual' or 'automatic'. Check ``help(deeplabcut.extract_frames)`` on python and ``deeplabcut.extract_frames?``               for ipython/jupyter notebook for more details."", kind=None)], keywords=[]))])]), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value=""\nFrames were selected.\nYou can now label the frames using the function 'label_frames' (if you extracted enough frames for all videos)."", kind=None)], keywords=[]))], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='line_select_callback', args=arguments(posonlyargs=[], args=[arg(arg='eclick', annotation=None, type_comment=None), arg(arg='erelease', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='eclick and erelease are the press and release events', kind=None)), Global(names=['coords']), Assign(targets=[Tuple(elts=[Name(id='new_x1', ctx=Store()), Name(id='new_y1', ctx=Store())], ctx=Store())], value=Tuple(elts=[Attribute(value=Name(id='eclick', ctx=Load()), attr='xdata', ctx=Load()), Attribute(value=Name(id='eclick', ctx=Load()), attr='ydata', ctx=Load())], ctx=Load()), type_comment=None), Assign(targets=[Tuple(elts=[Name(id='new_x2', ctx=Store()), Name(id='new_y2', ctx=Store())], ctx=Store())], value=Tuple(elts=[Attribute(value=Name(id='erelease', ctx=Load()), attr='xdata', ctx=Load()), Attribute(value=Name(id='erelease', ctx=Load()), attr='ydata', ctx=Load())], ctx=Load()), type_comment=None), Assign(targets=[Name(id='coords', ctx=Store())], value=List(elts=[Call(func=Name(id='str', ctx=Load()), args=[Call(func=Name(id='int', ctx=Load()), args=[Name(id='new_x1', ctx=Load())], keywords=[])], keywords=[]), Call(func=Name(id='str', ctx=Load()), args=[Call(func=Name(id='int', ctx=Load()), args=[Name(id='new_x2', ctx=Load())], keywords=[])], keywords=[]), Call(func=Name(id='str', ctx=Load()), args=[Call(func=Name(id='int', ctx=Load()), args=[Name(id='new_y1', ctx=Load())], keywords=[])], keywords=[]), Call(func=Name(id='str', ctx=Load()), args=[Call(func=Name(id='int', ctx=Load()), args=[Name(id='new_y2', ctx=Load())], keywords=[])], keywords=[])], ctx=Load()), type_comment=None)], decorator_list=[], returns=None, type_comment=None)], type_ignores=[])"
deeplabcut/generate_training_dataset/frame_extraction_toolbox.py,"Module(body=[Expr(value=Constant(value='\nDeepLabCut2.0 Toolbox\nhttps://github.com/AlexEMG/DeepLabCut\nA Mathis, alexander.mathis@bethgelab.org\nT Nath, nath@rowland.harvard.edu\nM Mathis, mackenzie@post.harvard.edu\n\n', kind=None)), ImportFrom(module='__future__', names=[alias(name='print_function', asname=None)], level=0), Import(names=[alias(name='wx', asname=None)]), Import(names=[alias(name='cv2', asname=None)]), Import(names=[alias(name='os', asname=None)]), Import(names=[alias(name='matplotlib', asname=None)]), Import(names=[alias(name='numpy', asname='np')]), ImportFrom(module='pathlib', names=[alias(name='Path', asname=None)], level=0), Import(names=[alias(name='argparse', asname=None)]), ImportFrom(module='deeplabcut.utils', names=[alias(name='auxiliaryfunctions', asname=None)], level=0), ImportFrom(module='skimage', names=[alias(name='io', asname=None)], level=0), ImportFrom(module='skimage.util', names=[alias(name='img_as_ubyte', asname=None)], level=0), Import(names=[alias(name='matplotlib.pyplot', asname='plt')]), ImportFrom(module='matplotlib.figure', names=[alias(name='Figure', asname=None)], level=0), ImportFrom(module='mpl_toolkits.axes_grid1', names=[alias(name='make_axes_locatable', asname=None)], level=0), Import(names=[alias(name='matplotlib.colors', asname='mcolors')]), Import(names=[alias(name='matplotlib.patches', asname='patches')]), ImportFrom(module='matplotlib.backends.backend_wxagg', names=[alias(name='FigureCanvasWxAgg', asname='FigureCanvas')], level=0), ImportFrom(module='matplotlib.widgets', names=[alias(name='RectangleSelector', asname=None)], level=0), ClassDef(name='ImagePanel', bases=[Attribute(value=Name(id='wx', ctx=Load()), attr='Panel', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='parent', annotation=None, type_comment=None), arg(arg='config', annotation=None, type_comment=None), arg(arg='gui_size', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs', annotation=None, type_comment=None), defaults=[]), body=[Assign(targets=[Name(id='h', ctx=Store())], value=BinOp(left=Subscript(value=Name(id='gui_size', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), op=Div(), right=Constant(value=2, kind=None)), type_comment=None), Assign(targets=[Name(id='w', ctx=Store())], value=BinOp(left=Subscript(value=Name(id='gui_size', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load()), op=Div(), right=Constant(value=3, kind=None)), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='wx', ctx=Load()), attr='Panel', ctx=Load()), attr='__init__', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='parent', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=1, kind=None))], keywords=[keyword(arg='style', value=Attribute(value=Name(id='wx', ctx=Load()), attr='SUNKEN_BORDER', ctx=Load())), keyword(arg='size', value=Tuple(elts=[Name(id='h', ctx=Load()), Name(id='w', ctx=Load())], ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='matplotlib', ctx=Load()), attr='figure', ctx=Load()), attr='Figure', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='axes', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Load()), attr='add_subplot', ctx=Load()), args=[Constant(value=1, kind=None), Constant(value=1, kind=None), Constant(value=1, kind=None)], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='canvas', ctx=Store())], value=Call(func=Name(id='FigureCanvas', ctx=Load()), args=[Name(id='self', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=1, kind=None)), Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='sizer', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='BoxSizer', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='VERTICAL', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='sizer', ctx=Load()), attr='Add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='canvas', ctx=Load()), Constant(value=1, kind=None), BinOp(left=BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='LEFT', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='TOP', ctx=Load())), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='GROW', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='SetSizer', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='sizer', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='Fit', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='getfigure', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n        Returns the figure, axes and canvas\n        ', kind=None)), Return(value=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='axes', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='canvas', ctx=Load())], ctx=Load()))], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='getColorIndices', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='img', annotation=None, type_comment=None), arg(arg='bodyparts', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n        Returns the colormaps ticks and . The order of ticks labels is reversed.\n        ', kind=None)), Assign(targets=[Name(id='im', ctx=Store())], value=Call(func=Attribute(value=Name(id='io', ctx=Load()), attr='imread', ctx=Load()), args=[Name(id='img', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='norm', ctx=Store())], value=Call(func=Attribute(value=Name(id='mcolors', ctx=Load()), attr='Normalize', ctx=Load()), args=[], keywords=[keyword(arg='vmin', value=Constant(value=0, kind=None)), keyword(arg='vmax', value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='max', ctx=Load()), args=[Name(id='im', ctx=Load())], keywords=[]))]), type_comment=None), Assign(targets=[Name(id='ticks', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='linspace', ctx=Load()), args=[Constant(value=0, kind=None), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='max', ctx=Load()), args=[Name(id='im', ctx=Load())], keywords=[]), Call(func=Name(id='len', ctx=Load()), args=[Name(id='bodyparts', ctx=Load())], keywords=[])], keywords=[]), slice=Slice(lower=None, upper=None, step=UnaryOp(op=USub(), operand=Constant(value=1, kind=None))), ctx=Load()), type_comment=None), Return(value=Tuple(elts=[Name(id='norm', ctx=Load()), Name(id='ticks', ctx=Load())], ctx=Load()))], decorator_list=[], returns=None, type_comment=None)], decorator_list=[]), ClassDef(name='WidgetPanel', bases=[Attribute(value=Name(id='wx', ctx=Load()), attr='Panel', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='parent', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='wx', ctx=Load()), attr='Panel', ctx=Load()), attr='__init__', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='parent', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=1, kind=None))], keywords=[keyword(arg='style', value=Attribute(value=Name(id='wx', ctx=Load()), attr='SUNKEN_BORDER', ctx=Load()))]))], decorator_list=[], returns=None, type_comment=None)], decorator_list=[]), ClassDef(name='MainFrame', bases=[Attribute(value=Name(id='wx', ctx=Load()), attr='Frame', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Contains the main GUI and button boxes', kind=None)), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='parent', annotation=None, type_comment=None), arg(arg='config', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Store())], value=Call(func=Attribute(value=Name(id='auxiliaryfunctions', ctx=Load()), attr='read_config', ctx=Load()), args=[Name(id='config', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='displays', ctx=Store())], value=GeneratorExp(elt=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='Display', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='wx', ctx=Load()), attr='Display', ctx=Load()), attr='GetCount', ctx=Load()), args=[], keywords=[])], keywords=[]), ifs=[], is_async=0)]), type_comment=None), Assign(targets=[Name(id='screenSizes', ctx=Store())], value=ListComp(elt=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='display', ctx=Load()), attr='GetGeometry', ctx=Load()), args=[], keywords=[]), attr='GetSize', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='display', ctx=Store()), iter=Name(id='displays', ctx=Load()), ifs=[], is_async=0)]), type_comment=None), Assign(targets=[Name(id='index', ctx=Store())], value=Constant(value=0, kind=None), type_comment=None), Assign(targets=[Name(id='screenWidth', ctx=Store())], value=Subscript(value=Subscript(value=Name(id='screenSizes', ctx=Load()), slice=Index(value=Name(id='index', ctx=Load())), ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Name(id='screenHeight', ctx=Store())], value=Subscript(value=Subscript(value=Name(id='screenSizes', ctx=Load()), slice=Index(value=Name(id='index', ctx=Load())), ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='gui_size', ctx=Store())], value=Tuple(elts=[BinOp(left=Name(id='screenWidth', ctx=Load()), op=Mult(), right=Constant(value=0.7, kind=None)), BinOp(left=Name(id='screenHeight', ctx=Load()), op=Mult(), right=Constant(value=0.85, kind=None))], ctx=Load()), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='wx', ctx=Load()), attr='Frame', ctx=Load()), attr='__init__', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='parent', ctx=Load())], keywords=[keyword(arg='id', value=Attribute(value=Name(id='wx', ctx=Load()), attr='ID_ANY', ctx=Load())), keyword(arg='title', value=Constant(value='DeepLabCut2.0 - Manual Frame Extraction', kind=None)), keyword(arg='size', value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='Size', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='gui_size', ctx=Load())], keywords=[])), keyword(arg='pos', value=Attribute(value=Name(id='wx', ctx=Load()), attr='DefaultPosition', ctx=Load())), keyword(arg='style', value=BinOp(left=BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='RESIZE_BORDER', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='DEFAULT_FRAME_STYLE', ctx=Load())), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='TAB_TRAVERSAL', ctx=Load())))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='statusbar', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='CreateStatusBar', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='statusbar', ctx=Load()), attr='SetStatusText', ctx=Load()), args=[Constant(value='', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='SetSizeHints', ctx=Load()), args=[Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='Size', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='gui_size', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='topSplitter', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='SplitterWindow', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='image_panel', ctx=Store())], value=Call(func=Name(id='ImagePanel', ctx=Load()), args=[Name(id='topSplitter', ctx=Load()), Name(id='config', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='gui_size', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Store())], value=Call(func=Name(id='WidgetPanel', ctx=Load()), args=[Name(id='topSplitter', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='topSplitter', ctx=Load()), attr='SplitHorizontally', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='image_panel', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load())], keywords=[keyword(arg='sashPosition', value=BinOp(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='gui_size', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load()), op=Mult(), right=Constant(value=0.83, kind=None)))])), Expr(value=Call(func=Attribute(value=Name(id='topSplitter', ctx=Load()), attr='SetSashGravity', ctx=Load()), args=[Constant(value=1, kind=None)], keywords=[])), Assign(targets=[Name(id='sizer', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='BoxSizer', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='VERTICAL', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='sizer', ctx=Load()), attr='Add', ctx=Load()), args=[Name(id='topSplitter', ctx=Load()), Constant(value=1, kind=None), Attribute(value=Name(id='wx', ctx=Load()), attr='EXPAND', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='SetSizer', ctx=Load()), args=[Name(id='sizer', ctx=Load())], keywords=[])), Assign(targets=[Name(id='widgetsizer', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='WrapSizer', ctx=Load()), args=[], keywords=[keyword(arg='orient', value=Attribute(value=Name(id='wx', ctx=Load()), attr='HORIZONTAL', ctx=Load()))]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='load', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='Button', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load())], keywords=[keyword(arg='id', value=Attribute(value=Name(id='wx', ctx=Load()), attr='ID_ANY', ctx=Load())), keyword(arg='label', value=Constant(value='Load Video', kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='widgetsizer', ctx=Load()), attr='Add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='load', ctx=Load()), Constant(value=1, kind=None), Attribute(value=Name(id='wx', ctx=Load()), attr='ALL', ctx=Load()), Constant(value=15, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='load', ctx=Load()), attr='Bind', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='EVT_BUTTON', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='browseDir', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='help', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='Button', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load())], keywords=[keyword(arg='id', value=Attribute(value=Name(id='wx', ctx=Load()), attr='ID_ANY', ctx=Load())), keyword(arg='label', value=Constant(value='Help', kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='widgetsizer', ctx=Load()), attr='Add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='help', ctx=Load()), Constant(value=1, kind=None), Attribute(value=Name(id='wx', ctx=Load()), attr='ALL', ctx=Load()), Constant(value=15, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='help', ctx=Load()), attr='Bind', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='EVT_BUTTON', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='helpButton', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='Button', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load())], keywords=[keyword(arg='id', value=Attribute(value=Name(id='wx', ctx=Load()), attr='ID_ANY', ctx=Load())), keyword(arg='label', value=Constant(value='Grab Frames', kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='widgetsizer', ctx=Load()), attr='Add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), Constant(value=1, kind=None), Attribute(value=Name(id='wx', ctx=Load()), attr='ALL', ctx=Load()), Constant(value=15, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), attr='Bind', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='EVT_BUTTON', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='grabFrame', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=False, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='widgetsizer', ctx=Load()), attr='AddStretchSpacer', ctx=Load()), args=[Constant(value=5, kind=None)], keywords=[])), Try(body=[Assign(targets=[Name(id='slider_width', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='slider_width', kind=None)), ctx=Load()), type_comment=None)], handlers=[ExceptHandler(type=None, name=None, body=[Assign(targets=[Name(id='slider_width', ctx=Store())], value=Constant(value=25, kind=None), type_comment=None)])], orelse=[], finalbody=[]), Assign(targets=[Name(id='size_x', ctx=Store())], value=Call(func=Name(id='round', ctx=Load()), args=[BinOp(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='gui_size', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), op=Mult(), right=BinOp(left=Name(id='slider_width', ctx=Load()), op=Div(), right=Constant(value=100, kind=None))), Constant(value=0, kind=None)], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='Slider', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load())], keywords=[keyword(arg='id', value=Attribute(value=Name(id='wx', ctx=Load()), attr='ID_ANY', ctx=Load())), keyword(arg='value', value=Constant(value=0, kind=None)), keyword(arg='minValue', value=Constant(value=0, kind=None)), keyword(arg='maxValue', value=Constant(value=1, kind=None)), keyword(arg='size', value=Tuple(elts=[Name(id='size_x', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=1, kind=None))], ctx=Load())), keyword(arg='style', value=BinOp(left=BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='SL_HORIZONTAL', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='SL_AUTOTICKS', ctx=Load())), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='SL_LABELS', ctx=Load())))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='widgetsizer', ctx=Load()), attr='Add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Load()), Constant(value=1, kind=None), Attribute(value=Name(id='wx', ctx=Load()), attr='ALL', ctx=Load()), Constant(value=5, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Load()), attr='Hide', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='widgetsizer', ctx=Load()), attr='AddStretchSpacer', ctx=Load()), args=[Constant(value=5, kind=None)], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='start_frames_sizer', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='BoxSizer', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='VERTICAL', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='end_frames_sizer', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='BoxSizer', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='VERTICAL', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='start_frames_sizer', ctx=Load()), attr='AddSpacer', ctx=Load()), args=[Constant(value=15, kind=None)], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='startFrame', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='SpinCtrl', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load())], keywords=[keyword(arg='value', value=Constant(value='0', kind=None)), keyword(arg='size', value=Tuple(elts=[Constant(value=100, kind=None), UnaryOp(op=USub(), operand=Constant(value=1, kind=None))], ctx=Load())), keyword(arg='min', value=Constant(value=0, kind=None)), keyword(arg='max', value=Constant(value=120, kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='startFrame', ctx=Load()), attr='Bind', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='EVT_SPINCTRL', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='updateSlider', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='startFrame', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=False, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='start_frames_sizer', ctx=Load()), attr='Add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='startFrame', ctx=Load()), Constant(value=1, kind=None), BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='EXPAND', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='ALIGN_LEFT', ctx=Load())), Constant(value=15, kind=None)], keywords=[])), Assign(targets=[Name(id='start_text', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='StaticText', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load())], keywords=[keyword(arg='label', value=Constant(value='Start Frame Index', kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='start_frames_sizer', ctx=Load()), attr='Add', ctx=Load()), args=[Name(id='start_text', ctx=Load()), Constant(value=1, kind=None), BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='EXPAND', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='ALIGN_LEFT', ctx=Load())), Constant(value=15, kind=None)], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='checkBox', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='CheckBox', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load())], keywords=[keyword(arg='id', value=Attribute(value=Name(id='wx', ctx=Load()), attr='ID_ANY', ctx=Load())), keyword(arg='label', value=Constant(value='Range of frames', kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='checkBox', ctx=Load()), attr='Bind', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='EVT_CHECKBOX', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='activate_frame_range', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='start_frames_sizer', ctx=Load()), attr='Add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='checkBox', ctx=Load()), Constant(value=1, kind=None), BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='EXPAND', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='ALIGN_LEFT', ctx=Load())), Constant(value=15, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='end_frames_sizer', ctx=Load()), attr='AddSpacer', ctx=Load()), args=[Constant(value=15, kind=None)], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='endFrame', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='SpinCtrl', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load())], keywords=[keyword(arg='value', value=Constant(value='1', kind=None)), keyword(arg='size', value=Tuple(elts=[Constant(value=160, kind=None), UnaryOp(op=USub(), operand=Constant(value=1, kind=None))], ctx=Load())), keyword(arg='min', value=Constant(value=1, kind=None)), keyword(arg='max', value=Constant(value=120, kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='endFrame', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=False, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='end_frames_sizer', ctx=Load()), attr='Add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='endFrame', ctx=Load()), Constant(value=1, kind=None), BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='EXPAND', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='ALIGN_LEFT', ctx=Load())), Constant(value=15, kind=None)], keywords=[])), Assign(targets=[Name(id='end_text', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='StaticText', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load())], keywords=[keyword(arg='label', value=Constant(value='Number of Frames', kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='end_frames_sizer', ctx=Load()), attr='Add', ctx=Load()), args=[Name(id='end_text', ctx=Load()), Constant(value=1, kind=None), BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='EXPAND', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='ALIGN_LEFT', ctx=Load())), Constant(value=15, kind=None)], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='updateFrame', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='Button', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load())], keywords=[keyword(arg='id', value=Attribute(value=Name(id='wx', ctx=Load()), attr='ID_ANY', ctx=Load())), keyword(arg='label', value=Constant(value='Update', kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='end_frames_sizer', ctx=Load()), attr='Add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='updateFrame', ctx=Load()), Constant(value=1, kind=None), BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='EXPAND', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='ALIGN_LEFT', ctx=Load())), Constant(value=15, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='updateFrame', ctx=Load()), attr='Bind', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='EVT_BUTTON', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='updateSlider', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='updateFrame', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=False, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='widgetsizer', ctx=Load()), attr='Add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='start_frames_sizer', ctx=Load()), Constant(value=1, kind=None), Attribute(value=Name(id='wx', ctx=Load()), attr='ALL', ctx=Load()), Constant(value=0, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='widgetsizer', ctx=Load()), attr='AddStretchSpacer', ctx=Load()), args=[Constant(value=5, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='widgetsizer', ctx=Load()), attr='Add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='end_frames_sizer', ctx=Load()), Constant(value=1, kind=None), Attribute(value=Name(id='wx', ctx=Load()), attr='ALL', ctx=Load()), Constant(value=0, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='widgetsizer', ctx=Load()), attr='AddStretchSpacer', ctx=Load()), args=[Constant(value=15, kind=None)], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='quit', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='Button', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load())], keywords=[keyword(arg='id', value=Attribute(value=Name(id='wx', ctx=Load()), attr='ID_ANY', ctx=Load())), keyword(arg='label', value=Constant(value='Quit', kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='widgetsizer', ctx=Load()), attr='Add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='quit', ctx=Load()), Constant(value=1, kind=None), Attribute(value=Name(id='wx', ctx=Load()), attr='ALL', ctx=Load()), Constant(value=15, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='quit', ctx=Load()), attr='Bind', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='EVT_BUTTON', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='quitButton', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='quit', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=True, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='start_frames_sizer', ctx=Load()), attr='ShowItems', ctx=Load()), args=[], keywords=[keyword(arg='show', value=Constant(value=False, kind=None))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='end_frames_sizer', ctx=Load()), attr='ShowItems', ctx=Load()), args=[], keywords=[keyword(arg='show', value=Constant(value=False, kind=None))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load()), attr='SetSizer', ctx=Load()), args=[Name(id='widgetsizer', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load()), attr='SetSizerAndFit', ctx=Load()), args=[Name(id='widgetsizer', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load()), attr='Layout', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='numberFrames', ctx=Store())], value=Constant(value=0, kind=None), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Store())], value=Constant(value=0, kind=None), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Store())], value=Call(func=Name(id='Figure', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='axes', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Load()), attr='add_subplot', ctx=Load()), args=[Constant(value=111, kind=None)], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='drs', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='Task', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='Task', kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='start', kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='stop', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='stop', kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='date', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='date', kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='trainFraction', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='TrainingFraction', kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='trainFraction', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='trainFraction', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='videos', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='video_sets', kind=None)), ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='bodyparts', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='bodyparts', kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='colormap', ctx=Store())], value=Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='get_cmap', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='colormap', kind=None)), ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='colormap', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='colormap', ctx=Load()), attr='reversed', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='markerSize', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='dotsize', kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='alpha', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='alphavalue', kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='video_names', ctx=Store())], value=ListComp(elt=Attribute(value=Call(func=Name(id='Path', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[]), attr='stem', ctx=Load()), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='videos', ctx=Load()), ifs=[], is_async=0)]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='config_path', ctx=Store())], value=Call(func=Name(id='Path', ctx=Load()), args=[Name(id='config', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='extract_range_frame', ctx=Store())], value=Constant(value=False, kind=None), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='extract_from_analyse_video', ctx=Store())], value=Constant(value=False, kind=None), type_comment=None)], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='quitButton', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='event', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n        Quits the GUI\n        ', kind=None)), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='statusbar', ctx=Load()), attr='SetStatusText', ctx=Load()), args=[Constant(value='', kind=None)], keywords=[])), Assign(targets=[Name(id='dlg', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='MessageDialog', ctx=Load()), args=[Constant(value=None, kind=None), Constant(value='Are you sure?', kind=None), Constant(value='Quit!', kind=None), BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='YES_NO', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='ICON_WARNING', ctx=Load()))], keywords=[]), type_comment=None), Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Attribute(value=Name(id='dlg', ctx=Load()), attr='ShowModal', ctx=Load()), args=[], keywords=[]), type_comment=None), If(test=Compare(left=Name(id='result', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='wx', ctx=Load()), attr='ID_YES', ctx=Load())]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Quitting for now!', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='Destroy', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='updateSlider', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='event', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Load()), attr='SetValue', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='startFrame', ctx=Load()), attr='GetValue', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Load()), attr='GetValue', ctx=Load()), args=[], keywords=[]), type_comment=None), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='extract_from_analyse_video', ctx=Load()), ops=[Eq()], comparators=[Constant(value=True, kind=None)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Load()), attr='delaxes', ctx=Load()), args=[Subscript(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Load()), attr='axes', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='plot_labels', ctx=Load()), args=[], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='update', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='activate_frame_range', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='event', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n        Activates the frame range boxes\n        ', kind=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='checkSlider', ctx=Store())], value=Call(func=Attribute(value=Name(id='event', ctx=Load()), attr='GetEventObject', ctx=Load()), args=[], keywords=[]), type_comment=None), If(test=Compare(left=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='checkSlider', ctx=Load()), attr='GetValue', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value=True, kind=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='extract_range_frame', ctx=Store())], value=Constant(value=True, kind=None), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='startFrame', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=True, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='startFrame', ctx=Load()), attr='SetValue', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Load()), attr='GetValue', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='endFrame', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=True, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='updateFrame', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=True, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=False, kind=None)], keywords=[]))], orelse=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='extract_range_frame', ctx=Store())], value=Constant(value=False, kind=None), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='startFrame', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=False, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='endFrame', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=False, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='updateFrame', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=False, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=True, kind=None)], keywords=[]))])], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='line_select_callback', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='eclick', annotation=None, type_comment=None), arg(arg='erelease', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='eclick and erelease are the press and release events', kind=None)), Assign(targets=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='new_x1', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='new_y1', ctx=Store())], ctx=Store())], value=Tuple(elts=[Attribute(value=Name(id='eclick', ctx=Load()), attr='xdata', ctx=Load()), Attribute(value=Name(id='eclick', ctx=Load()), attr='ydata', ctx=Load())], ctx=Load()), type_comment=None), Assign(targets=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='new_x2', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='new_y2', ctx=Store())], ctx=Store())], value=Tuple(elts=[Attribute(value=Name(id='erelease', ctx=Load()), attr='xdata', ctx=Load()), Attribute(value=Name(id='erelease', ctx=Load()), attr='ydata', ctx=Load())], ctx=Load()), type_comment=None)], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='CheckCropping', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value=' Display frame at time ""time"" for video to check if cropping is fine.\n        Select ROI of interest by adjusting values in myconfig.py\n\n        USAGE for cropping:\n        clip.crop(x1=None, y1=None, x2=None, y2=None, width=None, height=None, x_center=None, y_center=None)\n\n        Returns a new clip in which just a rectangular subregion of the\n        original clip is conserved. x1,y1 indicates the top left corner and\n        x2,y2 is the lower right corner of the cropped region.\n\n        All coordinates are in pixels. Float numbers are accepted.\n        ', kind=None)), Assign(targets=[Name(id='videosource', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='video_source', ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='x1', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Subscript(value=Subscript(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='video_sets', kind=None)), ctx=Load()), slice=Index(value=Name(id='videosource', ctx=Load())), ctx=Load()), slice=Index(value=Constant(value='crop', kind=None)), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=',', kind=None)], keywords=[]), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='x2', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Subscript(value=Subscript(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='video_sets', kind=None)), ctx=Load()), slice=Index(value=Name(id='videosource', ctx=Load())), ctx=Load()), slice=Index(value=Constant(value='crop', kind=None)), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=',', kind=None)], keywords=[]), slice=Index(value=Constant(value=1, kind=None)), ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='y1', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Subscript(value=Subscript(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='video_sets', kind=None)), ctx=Load()), slice=Index(value=Name(id='videosource', ctx=Load())), ctx=Load()), slice=Index(value=Constant(value='crop', kind=None)), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=',', kind=None)], keywords=[]), slice=Index(value=Constant(value=2, kind=None)), ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='y2', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Subscript(value=Subscript(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='video_sets', kind=None)), ctx=Load()), slice=Index(value=Name(id='videosource', ctx=Load())), ctx=Load()), slice=Index(value=Constant(value='crop', kind=None)), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=',', kind=None)], keywords=[]), slice=Index(value=Constant(value=3, kind=None)), ctx=Load())], keywords=[]), type_comment=None), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='cropping', ctx=Load()), ops=[Eq()], comparators=[Constant(value=True, kind=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='cid', ctx=Store())], value=Call(func=Name(id='RectangleSelector', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='axes', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='line_select_callback', ctx=Load())], keywords=[keyword(arg='drawtype', value=Constant(value='box', kind=None)), keyword(arg='useblit', value=Constant(value=False, kind=None)), keyword(arg='button', value=List(elts=[Constant(value=1, kind=None)], ctx=Load())), keyword(arg='minspanx', value=Constant(value=5, kind=None)), keyword(arg='minspany', value=Constant(value=5, kind=None)), keyword(arg='spancoords', value=Constant(value='pixels', kind=None)), keyword(arg='interactive', value=Constant(value=True, kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='canvas', ctx=Load()), attr='mpl_connect', ctx=Load()), args=[Constant(value='key_press_event', kind=None), Attribute(value=Name(id='self', ctx=Load()), attr='cid', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='OnSliderScroll', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='event', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n        Slider to scroll through the video\n        ', kind=None)), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='axes', ctx=Load()), attr='clear', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), attr='Bind', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='EVT_BUTTON', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='grabFrame', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Load()), attr='GetValue', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='startFrame', ctx=Load()), attr='SetValue', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='update', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='is_crop_ok', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='event', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n        Checks if the cropping is ok\n        ', kind=None)), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), attr='SetLabel', ctx=Load()), args=[Constant(value='Grab Frames', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), attr='Bind', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='EVT_BUTTON', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='grabFrame', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Load()), attr='Show', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='start_frames_sizer', ctx=Load()), attr='ShowItems', ctx=Load()), args=[], keywords=[keyword(arg='show', value=Constant(value=True, kind=None))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='end_frames_sizer', ctx=Load()), attr='ShowItems', ctx=Load()), args=[], keywords=[keyword(arg='show', value=Constant(value=True, kind=None))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load()), attr='Layout', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Load()), attr='SetMax', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='numberFrames', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='startFrame', ctx=Load()), attr='SetMax', ctx=Load()), args=[BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='numberFrames', ctx=Load()), op=Sub(), right=Constant(value=1, kind=None))], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='endFrame', ctx=Load()), attr='SetMax', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='numberFrames', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='x1', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='new_x1', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='x2', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='new_x2', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='y1', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='new_y1', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='y2', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='new_y2', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='canvas', ctx=Load()), attr='mpl_disconnect', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='cid', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='axes', ctx=Load()), attr='clear', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Load()), attr='GetValue', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='update', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='video_sets', kind=None)), ctx=Load()), slice=Index(value=Attribute(value=Name(id='self', ctx=Load()), attr='video_source', ctx=Load())), ctx=Store())], value=Dict(keys=[Constant(value='crop', kind=None)], values=[Call(func=Attribute(value=Constant(value=', ', kind=None), attr='join', ctx=Load()), args=[Call(func=Name(id='map', ctx=Load()), args=[Name(id='str', ctx=Load()), List(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='x1', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='x2', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='y1', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='y2', ctx=Load())], ctx=Load())], keywords=[])], keywords=[])]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='auxiliaryfunctions', ctx=Load()), attr='write_config', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='config_path', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load())], keywords=[]))], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='browseDir', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='event', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n        Show the File Dialog and ask the user to select the video file\n        ', kind=None)), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='statusbar', ctx=Load()), attr='SetStatusText', ctx=Load()), args=[Constant(value='Looking for a video to start extraction..', kind=None)], keywords=[])), Assign(targets=[Name(id='dlg', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='FileDialog', ctx=Load()), args=[Name(id='self', ctx=Load()), Constant(value='SELECT A VIDEO', kind=None), Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getcwd', ctx=Load()), args=[], keywords=[]), Constant(value='', kind=None), Constant(value='*.*', kind=None), Attribute(value=Name(id='wx', ctx=Load()), attr='FD_OPEN', ctx=Load())], keywords=[]), type_comment=None), If(test=Compare(left=Call(func=Attribute(value=Name(id='dlg', ctx=Load()), attr='ShowModal', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Attribute(value=Name(id='wx', ctx=Load()), attr='ID_OK', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='video_source_original', ctx=Store())], value=Call(func=Attribute(value=Name(id='dlg', ctx=Load()), attr='GetPath', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='video_source', ctx=Store())], value=Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='video_source_original', ctx=Load())], keywords=[]), attr='resolve', ctx=Load()), args=[], keywords=[])], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='load', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=False, kind=None)], keywords=[]))], orelse=[Pass(), Expr(value=Call(func=Attribute(value=Name(id='dlg', ctx=Load()), attr='Destroy', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='Close', ctx=Load()), args=[Constant(value=True, kind=None)], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='dlg', ctx=Load()), attr='Destroy', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='selectedvideo', ctx=Store())], value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='video_source', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='statusbar', ctx=Load()), attr='SetStatusText', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Working on video: {}', kind=None), attr='format', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='split', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='selectedvideo', ctx=Load())], keywords=[])], keywords=[]), slice=Index(value=UnaryOp(op=USub(), operand=Constant(value=1, kind=None))), ctx=Load())], keywords=[])], keywords=[])), If(test=Compare(left=Call(func=Name(id='str', ctx=Load()), args=[Attribute(value=Name(id='selectedvideo', ctx=Load()), attr='stem', ctx=Load())], keywords=[]), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='video_names', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=True, kind=None)], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='vid', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='VideoCapture', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='video_source', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='videoPath', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='dirname', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='video_source', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Store())], value=Attribute(value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='video_source', ctx=Load())], keywords=[]), attr='name', ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='numberFrames', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='vid', ctx=Load()), attr='get', ctx=Load()), args=[Attribute(value=Name(id='cv2', ctx=Load()), attr='CAP_PROP_FRAME_COUNT', ctx=Load())], keywords=[])], keywords=[]), type_comment=None), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='vid', ctx=Load()), attr='isOpened', ctx=Load()), args=[], keywords=[])), body=[Assign(targets=[Name(id='msg', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='MessageBox', ctx=Load()), args=[Constant(value='Invalid Video file!Do you want to retry?', kind=None), Constant(value='Error!', kind=None), BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='YES_NO', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='ICON_WARNING', ctx=Load()))], keywords=[]), type_comment=None), If(test=Compare(left=Name(id='msg', ctx=Load()), ops=[Eq()], comparators=[Constant(value=2, kind=None)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='load', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=True, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='MainFrame', ctx=Load()), attr='browseDir', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='event', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='Destroy', ctx=Load()), args=[], keywords=[]))])], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Load()), attr='Bind', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='EVT_SLIDER', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='OnSliderScroll', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='update', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='cropMsg', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='MessageBox', ctx=Load()), args=[Constant(value='Do you want to crop the frames?', kind=None), Constant(value='Want to crop?', kind=None), BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='YES_NO', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='ICON_INFORMATION', ctx=Load()))], keywords=[]), type_comment=None), If(test=Compare(left=Name(id='cropMsg', ctx=Load()), ops=[Eq()], comparators=[Constant(value=2, kind=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='cropping', ctx=Store())], value=Constant(value=True, kind=None), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), attr='SetLabel', ctx=Load()), args=[Constant(value='Set cropping parameters', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), attr='Bind', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='EVT_BUTTON', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='is_crop_ok', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load()), attr='Layout', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='basefolder', ctx=Store())], value=BinOp(left=BinOp(left=Constant(value='data-', kind=None), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='Task', ctx=Load())), op=Add(), right=Constant(value='/', kind=None)), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='MainFrame', ctx=Load()), attr='CheckCropping', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='cropping', ctx=Store())], value=Constant(value=False, kind=None), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Load()), attr='Show', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='start_frames_sizer', ctx=Load()), attr='ShowItems', ctx=Load()), args=[], keywords=[keyword(arg='show', value=Constant(value=True, kind=None))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='end_frames_sizer', ctx=Load()), attr='ShowItems', ctx=Load()), args=[], keywords=[keyword(arg='show', value=Constant(value=True, kind=None))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load()), attr='Layout', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Load()), attr='SetMax', ctx=Load()), args=[BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='numberFrames', ctx=Load()), op=Sub(), right=Constant(value=1, kind=None))], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='startFrame', ctx=Load()), attr='SetMax', ctx=Load()), args=[BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='numberFrames', ctx=Load()), op=Sub(), right=Constant(value=1, kind=None))], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='endFrame', ctx=Load()), attr='SetMax', ctx=Load()), args=[BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='numberFrames', ctx=Load()), op=Sub(), right=Constant(value=1, kind=None))], keywords=[]))])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='MessageBox', ctx=Load()), args=[Constant(value='Video file is not in config file. Use add function to add this video in the config file and retry!', kind=None), Constant(value='Error!', kind=None), BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='OK', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='ICON_WARNING', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='Close', ctx=Load()), args=[Constant(value=True, kind=None)], keywords=[]))])], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='update', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n        Updates the image with the current slider index\n        ', kind=None)), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=True, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), attr='Bind', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='EVT_BUTTON', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='grabFrame', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='axes', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='canvas', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='image_panel', ctx=Load()), attr='getfigure', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='vid', ctx=Load()), attr='set', ctx=Load()), args=[Constant(value=1, kind=None), Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='ret', ctx=Store()), Name(id='frame', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='vid', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]), type_comment=None), If(test=Name(id='ret', ctx=Load()), body=[Assign(targets=[Name(id='frame', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='cvtColor', ctx=Load()), args=[Name(id='frame', ctx=Load()), Attribute(value=Name(id='cv2', ctx=Load()), attr='COLOR_BGR2RGB', ctx=Load())], keywords=[]), type_comment=None)], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='ax', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='axes', ctx=Load()), attr='imshow', ctx=Load()), args=[Name(id='frame', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='axes', ctx=Load()), attr='set_title', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=BinOp(left=Call(func=Name(id='str', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Load())], keywords=[]), op=Add(), right=Constant(value='/', kind=None)), op=Add(), right=Call(func=Name(id='str', ctx=Load()), args=[BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='numberFrames', ctx=Load()), op=Sub(), right=Constant(value=1, kind=None))], keywords=[])), op=Add(), right=Constant(value=' ', kind=None)), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Load()))], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Load()), attr='canvas', ctx=Load()), attr='draw', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='chooseFrame', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='ret', ctx=Store()), Name(id='frame', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='vid', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='fname', ctx=Store())], value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_path', ctx=Store())], value=BinOp(left=BinOp(left=Subscript(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='config_path', ctx=Load()), attr='parents', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), op=Div(), right=Constant(value='labeled-data', kind=None)), op=Div(), right=Attribute(value=Name(id='fname', ctx=Load()), attr='stem', ctx=Load())), type_comment=None), If(test=Call(func=Attribute(value=Name(id='output_path', ctx=Load()), attr='exists', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='frame', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='cvtColor', ctx=Load()), args=[Name(id='frame', ctx=Load()), Attribute(value=Name(id='cv2', ctx=Load()), attr='COLOR_BGR2RGB', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='frame', ctx=Store())], value=Call(func=Name(id='img_as_ubyte', ctx=Load()), args=[Name(id='frame', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='img_name', ctx=Store())], value=BinOp(left=BinOp(left=BinOp(left=Call(func=Name(id='str', ctx=Load()), args=[Name(id='output_path', ctx=Load())], keywords=[]), op=Add(), right=Constant(value='/img', kind=None)), op=Add(), right=Call(func=Attribute(value=Call(func=Name(id='str', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Load())], keywords=[]), attr='zfill', ctx=Load()), args=[Call(func=Name(id='int', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ceil', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='log10', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='numberFrames', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), op=Add(), right=Constant(value='.png', kind=None)), type_comment=None), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='cropping', ctx=Load()), body=[Assign(targets=[Name(id='crop_img', ctx=Store())], value=Subscript(value=Name(id='frame', ctx=Load()), slice=ExtSlice(dims=[Slice(lower=Attribute(value=Name(id='self', ctx=Load()), attr='y1', ctx=Load()), upper=Attribute(value=Name(id='self', ctx=Load()), attr='y2', ctx=Load()), step=None), Slice(lower=Attribute(value=Name(id='self', ctx=Load()), attr='x1', ctx=Load()), upper=Attribute(value=Name(id='self', ctx=Load()), attr='x2', ctx=Load()), step=None)]), ctx=Load()), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='imwrite', ctx=Load()), args=[Name(id='img_name', ctx=Load()), Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='cvtColor', ctx=Load()), args=[Name(id='crop_img', ctx=Load()), Attribute(value=Name(id='cv2', ctx=Load()), attr='COLOR_RGB2BGR', ctx=Load())], keywords=[])], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='imwrite', ctx=Load()), args=[Name(id='img_name', ctx=Load()), Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='cvtColor', ctx=Load()), args=[Name(id='frame', ctx=Load()), Attribute(value=Name(id='cv2', ctx=Load()), attr='COLOR_RGB2BGR', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[BinOp(left=Constant(value=""%s path not found. Please make sure that the video was added to the config file using the function 'deeplabcut.add_new_videos'."", kind=None), op=Mod(), right=Name(id='output_path', ctx=Load()))], keywords=[]))])], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='grabFrame', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='event', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n        Extracts the frame and saves in the current directory\n        ', kind=None)), Assign(targets=[Name(id='num_frames_extract', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='endFrame', ctx=Load()), attr='GetValue', ctx=Load()), args=[], keywords=[]), type_comment=None), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Load()), BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Load()), op=Add(), right=Name(id='num_frames_extract', ctx=Load()))], keywords=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Store())], value=Name(id='i', ctx=Load()), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='vid', ctx=Load()), attr='set', ctx=Load()), args=[Constant(value=1, kind=None), Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='chooseFrame', ctx=Load()), args=[], keywords=[]))], orelse=[], type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='vid', ctx=Load()), attr='set', ctx=Load()), args=[Constant(value=1, kind=None), Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='chooseFrame', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='plot_labels', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n        Plots the labels of the analyzed video\n        ', kind=None)), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='vid', ctx=Load()), attr='set', ctx=Load()), args=[Constant(value=1, kind=None), Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='ret', ctx=Store()), Name(id='frame', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='vid', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]), type_comment=None), If(test=Name(id='ret', ctx=Load()), body=[Assign(targets=[Name(id='frame', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='cvtColor', ctx=Load()), args=[Name(id='frame', ctx=Load()), Attribute(value=Name(id='cv2', ctx=Load()), attr='COLOR_BGR2RGB', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='norm', ctx=Store())], value=Call(func=Attribute(value=Name(id='mcolors', ctx=Load()), attr='Normalize', ctx=Load()), args=[], keywords=[keyword(arg='vmin', value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='min', ctx=Load()), args=[Name(id='frame', ctx=Load())], keywords=[])), keyword(arg='vmax', value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='max', ctx=Load()), args=[Name(id='frame', ctx=Load())], keywords=[]))]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='colorIndex', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='linspace', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='min', ctx=Load()), args=[Name(id='frame', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='max', ctx=Load()), args=[Name(id='frame', ctx=Load())], keywords=[]), Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='bodyparts', ctx=Load())], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='divider', ctx=Store())], value=Call(func=Name(id='make_axes_locatable', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='axes', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='cax', ctx=Store())], value=Call(func=Attribute(value=Name(id='divider', ctx=Load()), attr='append_axes', ctx=Load()), args=[Constant(value='right', kind=None)], keywords=[keyword(arg='size', value=Constant(value='5%', kind=None)), keyword(arg='pad', value=Constant(value=0.05, kind=None))]), type_comment=None), Assign(targets=[Name(id='cbar', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Load()), attr='colorbar', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='ax', ctx=Load())], keywords=[keyword(arg='cax', value=Name(id='cax', ctx=Load())), keyword(arg='spacing', value=Constant(value='proportional', kind=None)), keyword(arg='ticks', value=Attribute(value=Name(id='self', ctx=Load()), attr='colorIndex', ctx=Load()))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='cbar', ctx=Load()), attr='set_ticklabels', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='bodyparts', ctx=Load())], keywords=[])), For(target=Tuple(elts=[Name(id='bpindex', ctx=Store()), Name(id='bp', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='bodyparts', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='color', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='colormap', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='norm', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='colorIndex', ctx=Load()), slice=Index(value=Name(id='bpindex', ctx=Load())), ctx=Load())], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='points', ctx=Store())], value=List(elts=[Subscript(value=Attribute(value=Subscript(value=Subscript(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='Dataframe', ctx=Load()), slice=Index(value=Attribute(value=Name(id='self', ctx=Load()), attr='scorer', ctx=Load())), ctx=Load()), slice=Index(value=Name(id='bp', ctx=Load())), ctx=Load()), slice=Index(value=Constant(value='x', kind=None)), ctx=Load()), attr='values', ctx=Load()), slice=Index(value=Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Load())), ctx=Load()), Subscript(value=Attribute(value=Subscript(value=Subscript(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='Dataframe', ctx=Load()), slice=Index(value=Attribute(value=Name(id='self', ctx=Load()), attr='scorer', ctx=Load())), ctx=Load()), slice=Index(value=Name(id='bp', ctx=Load())), ctx=Load()), slice=Index(value=Constant(value='y', kind=None)), ctx=Load()), attr='values', ctx=Load()), slice=Index(value=Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Load())), ctx=Load()), Constant(value=1.0, kind=None)], ctx=Load()), type_comment=None), Assign(targets=[Name(id='circle', ctx=Store())], value=List(elts=[Call(func=Attribute(value=Name(id='patches', ctx=Load()), attr='Circle', ctx=Load()), args=[Tuple(elts=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='points', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='points', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load())], ctx=Load())], keywords=[keyword(arg='radius', value=Attribute(value=Name(id='self', ctx=Load()), attr='markerSize', ctx=Load())), keyword(arg='fc', value=Name(id='color', ctx=Load())), keyword(arg='alpha', value=Attribute(value=Name(id='self', ctx=Load()), attr='alpha', ctx=Load()))])], ctx=Load()), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='axes', ctx=Load()), attr='add_patch', ctx=Load()), args=[Subscript(value=Name(id='circle', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], keywords=[]))], orelse=[], type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Load()), attr='canvas', ctx=Load()), attr='draw', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='helpButton', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='event', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n        Opens Instructions\n        ', kind=None)), Expr(value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='MessageBox', ctx=Load()), args=[Constant(value='1. Use the Load Video button to load a video. Use the slider to select a frame in the entire video. The number mentioned on the top of the slider represents the frame index. \n\n2. Click Grab Frames button to save the specific frame.\n\n3. In events where you need to extract a range of frames, then use the checkbox Range of frames to select the start frame index and number of frames to extract. Click the update button to see the start frame index. Click Grab Frames to select the range of frames. \n\n Click OK to continue', kind=None), Constant(value='Instructions to use!', kind=None), BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='OK', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='ICON_INFORMATION', ctx=Load()))], keywords=[]))], decorator_list=[], returns=None, type_comment=None)], decorator_list=[]), ClassDef(name='MatplotPanel', bases=[Attribute(value=Name(id='wx', ctx=Load()), attr='Panel', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='parent', annotation=None, type_comment=None), arg(arg='config', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='wx', ctx=Load()), attr='Panel', ctx=Load()), attr='__init__', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='parent', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=1, kind=None))], keywords=[keyword(arg='size', value=Tuple(elts=[Constant(value=100, kind=None), Constant(value=100, kind=None)], ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Store())], value=Call(func=Name(id='Figure', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='axes', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Load()), attr='add_subplot', ctx=Load()), args=[Constant(value=111, kind=None)], keywords=[]), type_comment=None)], decorator_list=[], returns=None, type_comment=None)], decorator_list=[]), FunctionDef(name='show', args=arguments(posonlyargs=[], args=[arg(arg='config', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Import(names=[alias(name='imageio', asname=None)]), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='imageio', ctx=Load()), attr='plugins', ctx=Load()), attr='ffmpeg', ctx=Load()), attr='download', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='app', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='App', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='frame', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='MainFrame', ctx=Load()), args=[Constant(value=None, kind=None), Name(id='config', ctx=Load())], keywords=[]), attr='Show', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='app', ctx=Load()), attr='MainLoop', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=None, type_comment=None), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__', kind=None)]), body=[Assign(targets=[Name(id='parser', ctx=Store())], value=Call(func=Attribute(value=Name(id='argparse', ctx=Load()), attr='ArgumentParser', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='config', kind=None)], keywords=[])), Assign(targets=[Name(id='cli_args', ctx=Store())], value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='parse_args', ctx=Load()), args=[], keywords=[]), type_comment=None)], orelse=[])], type_ignores=[])","Module(body=[Expr(value=Constant(value='\nDeepLabCut2.0 Toolbox\nhttps://github.com/AlexEMG/DeepLabCut\nA Mathis, alexander.mathis@bethgelab.org\nT Nath, nath@rowland.harvard.edu\nM Mathis, mackenzie@post.harvard.edu\n\n', kind=None)), ImportFrom(module='__future__', names=[alias(name='print_function', asname=None)], level=0), Import(names=[alias(name='wx', asname=None)]), Import(names=[alias(name='cv2', asname=None)]), Import(names=[alias(name='os', asname=None)]), Import(names=[alias(name='matplotlib', asname=None)]), Import(names=[alias(name='numpy', asname='np')]), ImportFrom(module='pathlib', names=[alias(name='Path', asname=None)], level=0), Import(names=[alias(name='argparse', asname=None)]), ImportFrom(module='deeplabcut.utils', names=[alias(name='auxiliaryfunctions', asname=None)], level=0), ImportFrom(module='skimage', names=[alias(name='io', asname=None)], level=0), ImportFrom(module='skimage.util', names=[alias(name='img_as_ubyte', asname=None)], level=0), Import(names=[alias(name='matplotlib.pyplot', asname='plt')]), ImportFrom(module='matplotlib.figure', names=[alias(name='Figure', asname=None)], level=0), ImportFrom(module='mpl_toolkits.axes_grid1', names=[alias(name='make_axes_locatable', asname=None)], level=0), Import(names=[alias(name='matplotlib.colors', asname='mcolors')]), Import(names=[alias(name='matplotlib.patches', asname='patches')]), ImportFrom(module='matplotlib.backends.backend_wxagg', names=[alias(name='FigureCanvasWxAgg', asname='FigureCanvas')], level=0), ImportFrom(module='matplotlib.widgets', names=[alias(name='RectangleSelector', asname=None)], level=0), ClassDef(name='ImagePanel', bases=[Attribute(value=Name(id='wx', ctx=Load()), attr='Panel', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='parent', annotation=None, type_comment=None), arg(arg='config', annotation=None, type_comment=None), arg(arg='gui_size', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs', annotation=None, type_comment=None), defaults=[]), body=[Assign(targets=[Name(id='h', ctx=Store())], value=BinOp(left=Subscript(value=Name(id='gui_size', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), op=Div(), right=Constant(value=2, kind=None)), type_comment=None), Assign(targets=[Name(id='w', ctx=Store())], value=BinOp(left=Subscript(value=Name(id='gui_size', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load()), op=Div(), right=Constant(value=3, kind=None)), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='wx', ctx=Load()), attr='Panel', ctx=Load()), attr='__init__', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='parent', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=1, kind=None))], keywords=[keyword(arg='style', value=Attribute(value=Name(id='wx', ctx=Load()), attr='SUNKEN_BORDER', ctx=Load())), keyword(arg='size', value=Tuple(elts=[Name(id='h', ctx=Load()), Name(id='w', ctx=Load())], ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='matplotlib', ctx=Load()), attr='figure', ctx=Load()), attr='Figure', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='axes', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Load()), attr='add_subplot', ctx=Load()), args=[Constant(value=1, kind=None), Constant(value=1, kind=None), Constant(value=1, kind=None)], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='canvas', ctx=Store())], value=Call(func=Name(id='FigureCanvas', ctx=Load()), args=[Name(id='self', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=1, kind=None)), Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='sizer', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='BoxSizer', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='VERTICAL', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='sizer', ctx=Load()), attr='Add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='canvas', ctx=Load()), Constant(value=1, kind=None), BinOp(left=BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='LEFT', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='TOP', ctx=Load())), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='GROW', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='SetSizer', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='sizer', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='Fit', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='getfigure', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n        Returns the figure, axes and canvas\n        ', kind=None)), Return(value=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='axes', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='canvas', ctx=Load())], ctx=Load()))], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='getColorIndices', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='img', annotation=None, type_comment=None), arg(arg='bodyparts', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n        Returns the colormaps ticks and . The order of ticks labels is reversed.\n        ', kind=None)), Assign(targets=[Name(id='im', ctx=Store())], value=Call(func=Attribute(value=Name(id='io', ctx=Load()), attr='imread', ctx=Load()), args=[Name(id='img', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='norm', ctx=Store())], value=Call(func=Attribute(value=Name(id='mcolors', ctx=Load()), attr='Normalize', ctx=Load()), args=[], keywords=[keyword(arg='vmin', value=Constant(value=0, kind=None)), keyword(arg='vmax', value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='max', ctx=Load()), args=[Name(id='im', ctx=Load())], keywords=[]))]), type_comment=None), Assign(targets=[Name(id='ticks', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='linspace', ctx=Load()), args=[Constant(value=0, kind=None), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='max', ctx=Load()), args=[Name(id='im', ctx=Load())], keywords=[]), Call(func=Name(id='len', ctx=Load()), args=[Name(id='bodyparts', ctx=Load())], keywords=[])], keywords=[]), slice=Slice(lower=None, upper=None, step=UnaryOp(op=USub(), operand=Constant(value=1, kind=None))), ctx=Load()), type_comment=None), Return(value=Tuple(elts=[Name(id='norm', ctx=Load()), Name(id='ticks', ctx=Load())], ctx=Load()))], decorator_list=[], returns=None, type_comment=None)], decorator_list=[]), ClassDef(name='WidgetPanel', bases=[Attribute(value=Name(id='wx', ctx=Load()), attr='Panel', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='parent', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='wx', ctx=Load()), attr='Panel', ctx=Load()), attr='__init__', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='parent', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=1, kind=None))], keywords=[keyword(arg='style', value=Attribute(value=Name(id='wx', ctx=Load()), attr='SUNKEN_BORDER', ctx=Load()))]))], decorator_list=[], returns=None, type_comment=None)], decorator_list=[]), ClassDef(name='MainFrame', bases=[Attribute(value=Name(id='wx', ctx=Load()), attr='Frame', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Contains the main GUI and button boxes', kind=None)), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='parent', annotation=None, type_comment=None), arg(arg='config', annotation=None, type_comment=None), arg(arg='slider_width', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[Constant(value=25, kind=None)]), body=[Assign(targets=[Name(id='displays', ctx=Store())], value=GeneratorExp(elt=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='Display', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='wx', ctx=Load()), attr='Display', ctx=Load()), attr='GetCount', ctx=Load()), args=[], keywords=[])], keywords=[]), ifs=[], is_async=0)]), type_comment=None), Assign(targets=[Name(id='screenSizes', ctx=Store())], value=ListComp(elt=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='display', ctx=Load()), attr='GetGeometry', ctx=Load()), args=[], keywords=[]), attr='GetSize', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='display', ctx=Store()), iter=Name(id='displays', ctx=Load()), ifs=[], is_async=0)]), type_comment=None), Assign(targets=[Name(id='index', ctx=Store())], value=Constant(value=0, kind=None), type_comment=None), Assign(targets=[Name(id='screenWidth', ctx=Store())], value=Subscript(value=Subscript(value=Name(id='screenSizes', ctx=Load()), slice=Index(value=Name(id='index', ctx=Load())), ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Name(id='screenHeight', ctx=Store())], value=Subscript(value=Subscript(value=Name(id='screenSizes', ctx=Load()), slice=Index(value=Name(id='index', ctx=Load())), ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='gui_size', ctx=Store())], value=Tuple(elts=[BinOp(left=Name(id='screenWidth', ctx=Load()), op=Mult(), right=Constant(value=0.7, kind=None)), BinOp(left=Name(id='screenHeight', ctx=Load()), op=Mult(), right=Constant(value=0.85, kind=None))], ctx=Load()), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='wx', ctx=Load()), attr='Frame', ctx=Load()), attr='__init__', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='parent', ctx=Load())], keywords=[keyword(arg='id', value=Attribute(value=Name(id='wx', ctx=Load()), attr='ID_ANY', ctx=Load())), keyword(arg='title', value=Constant(value='DeepLabCut2.0 - Manual Frame Extraction', kind=None)), keyword(arg='size', value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='Size', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='gui_size', ctx=Load())], keywords=[])), keyword(arg='pos', value=Attribute(value=Name(id='wx', ctx=Load()), attr='DefaultPosition', ctx=Load())), keyword(arg='style', value=BinOp(left=BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='RESIZE_BORDER', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='DEFAULT_FRAME_STYLE', ctx=Load())), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='TAB_TRAVERSAL', ctx=Load())))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='statusbar', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='CreateStatusBar', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='statusbar', ctx=Load()), attr='SetStatusText', ctx=Load()), args=[Constant(value='', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='SetSizeHints', ctx=Load()), args=[Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='Size', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='gui_size', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='topSplitter', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='SplitterWindow', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='image_panel', ctx=Store())], value=Call(func=Name(id='ImagePanel', ctx=Load()), args=[Name(id='topSplitter', ctx=Load()), Name(id='config', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='gui_size', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Store())], value=Call(func=Name(id='WidgetPanel', ctx=Load()), args=[Name(id='topSplitter', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='topSplitter', ctx=Load()), attr='SplitHorizontally', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='image_panel', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load())], keywords=[keyword(arg='sashPosition', value=BinOp(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='gui_size', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load()), op=Mult(), right=Constant(value=0.83, kind=None)))])), Expr(value=Call(func=Attribute(value=Name(id='topSplitter', ctx=Load()), attr='SetSashGravity', ctx=Load()), args=[Constant(value=1, kind=None)], keywords=[])), Assign(targets=[Name(id='sizer', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='BoxSizer', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='VERTICAL', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='sizer', ctx=Load()), attr='Add', ctx=Load()), args=[Name(id='topSplitter', ctx=Load()), Constant(value=1, kind=None), Attribute(value=Name(id='wx', ctx=Load()), attr='EXPAND', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='SetSizer', ctx=Load()), args=[Name(id='sizer', ctx=Load())], keywords=[])), Assign(targets=[Name(id='widgetsizer', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='WrapSizer', ctx=Load()), args=[], keywords=[keyword(arg='orient', value=Attribute(value=Name(id='wx', ctx=Load()), attr='HORIZONTAL', ctx=Load()))]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='load', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='Button', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load())], keywords=[keyword(arg='id', value=Attribute(value=Name(id='wx', ctx=Load()), attr='ID_ANY', ctx=Load())), keyword(arg='label', value=Constant(value='Load Video', kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='widgetsizer', ctx=Load()), attr='Add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='load', ctx=Load()), Constant(value=1, kind=None), Attribute(value=Name(id='wx', ctx=Load()), attr='ALL', ctx=Load()), Constant(value=15, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='load', ctx=Load()), attr='Bind', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='EVT_BUTTON', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='browseDir', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='help', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='Button', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load())], keywords=[keyword(arg='id', value=Attribute(value=Name(id='wx', ctx=Load()), attr='ID_ANY', ctx=Load())), keyword(arg='label', value=Constant(value='Help', kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='widgetsizer', ctx=Load()), attr='Add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='help', ctx=Load()), Constant(value=1, kind=None), Attribute(value=Name(id='wx', ctx=Load()), attr='ALL', ctx=Load()), Constant(value=15, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='help', ctx=Load()), attr='Bind', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='EVT_BUTTON', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='helpButton', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='Button', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load())], keywords=[keyword(arg='id', value=Attribute(value=Name(id='wx', ctx=Load()), attr='ID_ANY', ctx=Load())), keyword(arg='label', value=Constant(value='Grab Frames', kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='widgetsizer', ctx=Load()), attr='Add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), Constant(value=1, kind=None), Attribute(value=Name(id='wx', ctx=Load()), attr='ALL', ctx=Load()), Constant(value=15, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), attr='Bind', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='EVT_BUTTON', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='grabFrame', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=False, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='widgetsizer', ctx=Load()), attr='AddStretchSpacer', ctx=Load()), args=[Constant(value=5, kind=None)], keywords=[])), Assign(targets=[Name(id='size_x', ctx=Store())], value=Call(func=Name(id='round', ctx=Load()), args=[BinOp(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='gui_size', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), op=Mult(), right=BinOp(left=Name(id='slider_width', ctx=Load()), op=Div(), right=Constant(value=100, kind=None))), Constant(value=0, kind=None)], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='Slider', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load())], keywords=[keyword(arg='id', value=Attribute(value=Name(id='wx', ctx=Load()), attr='ID_ANY', ctx=Load())), keyword(arg='value', value=Constant(value=0, kind=None)), keyword(arg='minValue', value=Constant(value=0, kind=None)), keyword(arg='maxValue', value=Constant(value=1, kind=None)), keyword(arg='size', value=Tuple(elts=[Name(id='size_x', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=1, kind=None))], ctx=Load())), keyword(arg='style', value=BinOp(left=BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='SL_HORIZONTAL', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='SL_AUTOTICKS', ctx=Load())), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='SL_LABELS', ctx=Load())))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='widgetsizer', ctx=Load()), attr='Add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Load()), Constant(value=1, kind=None), Attribute(value=Name(id='wx', ctx=Load()), attr='ALL', ctx=Load()), Constant(value=5, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Load()), attr='Hide', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='widgetsizer', ctx=Load()), attr='AddStretchSpacer', ctx=Load()), args=[Constant(value=5, kind=None)], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='start_frames_sizer', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='BoxSizer', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='VERTICAL', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='end_frames_sizer', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='BoxSizer', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='VERTICAL', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='start_frames_sizer', ctx=Load()), attr='AddSpacer', ctx=Load()), args=[Constant(value=15, kind=None)], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='startFrame', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='SpinCtrl', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load())], keywords=[keyword(arg='value', value=Constant(value='0', kind=None)), keyword(arg='size', value=Tuple(elts=[Constant(value=100, kind=None), UnaryOp(op=USub(), operand=Constant(value=1, kind=None))], ctx=Load())), keyword(arg='min', value=Constant(value=0, kind=None)), keyword(arg='max', value=Constant(value=120, kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='startFrame', ctx=Load()), attr='Bind', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='EVT_SPINCTRL', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='updateSlider', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='startFrame', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=False, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='start_frames_sizer', ctx=Load()), attr='Add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='startFrame', ctx=Load()), Constant(value=1, kind=None), BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='EXPAND', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='ALIGN_LEFT', ctx=Load())), Constant(value=15, kind=None)], keywords=[])), Assign(targets=[Name(id='start_text', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='StaticText', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load())], keywords=[keyword(arg='label', value=Constant(value='Start Frame Index', kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='start_frames_sizer', ctx=Load()), attr='Add', ctx=Load()), args=[Name(id='start_text', ctx=Load()), Constant(value=1, kind=None), BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='EXPAND', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='ALIGN_LEFT', ctx=Load())), Constant(value=15, kind=None)], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='checkBox', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='CheckBox', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load())], keywords=[keyword(arg='id', value=Attribute(value=Name(id='wx', ctx=Load()), attr='ID_ANY', ctx=Load())), keyword(arg='label', value=Constant(value='Range of frames', kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='checkBox', ctx=Load()), attr='Bind', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='EVT_CHECKBOX', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='activate_frame_range', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='start_frames_sizer', ctx=Load()), attr='Add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='checkBox', ctx=Load()), Constant(value=1, kind=None), BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='EXPAND', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='ALIGN_LEFT', ctx=Load())), Constant(value=15, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='end_frames_sizer', ctx=Load()), attr='AddSpacer', ctx=Load()), args=[Constant(value=15, kind=None)], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='endFrame', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='SpinCtrl', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load())], keywords=[keyword(arg='value', value=Constant(value='1', kind=None)), keyword(arg='size', value=Tuple(elts=[Constant(value=160, kind=None), UnaryOp(op=USub(), operand=Constant(value=1, kind=None))], ctx=Load())), keyword(arg='min', value=Constant(value=1, kind=None)), keyword(arg='max', value=Constant(value=120, kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='endFrame', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=False, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='end_frames_sizer', ctx=Load()), attr='Add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='endFrame', ctx=Load()), Constant(value=1, kind=None), BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='EXPAND', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='ALIGN_LEFT', ctx=Load())), Constant(value=15, kind=None)], keywords=[])), Assign(targets=[Name(id='end_text', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='StaticText', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load())], keywords=[keyword(arg='label', value=Constant(value='Number of Frames', kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='end_frames_sizer', ctx=Load()), attr='Add', ctx=Load()), args=[Name(id='end_text', ctx=Load()), Constant(value=1, kind=None), BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='EXPAND', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='ALIGN_LEFT', ctx=Load())), Constant(value=15, kind=None)], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='updateFrame', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='Button', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load())], keywords=[keyword(arg='id', value=Attribute(value=Name(id='wx', ctx=Load()), attr='ID_ANY', ctx=Load())), keyword(arg='label', value=Constant(value='Update', kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='end_frames_sizer', ctx=Load()), attr='Add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='updateFrame', ctx=Load()), Constant(value=1, kind=None), BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='EXPAND', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='ALIGN_LEFT', ctx=Load())), Constant(value=15, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='updateFrame', ctx=Load()), attr='Bind', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='EVT_BUTTON', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='updateSlider', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='updateFrame', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=False, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='widgetsizer', ctx=Load()), attr='Add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='start_frames_sizer', ctx=Load()), Constant(value=1, kind=None), Attribute(value=Name(id='wx', ctx=Load()), attr='ALL', ctx=Load()), Constant(value=0, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='widgetsizer', ctx=Load()), attr='AddStretchSpacer', ctx=Load()), args=[Constant(value=5, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='widgetsizer', ctx=Load()), attr='Add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='end_frames_sizer', ctx=Load()), Constant(value=1, kind=None), Attribute(value=Name(id='wx', ctx=Load()), attr='ALL', ctx=Load()), Constant(value=0, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='widgetsizer', ctx=Load()), attr='AddStretchSpacer', ctx=Load()), args=[Constant(value=15, kind=None)], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='quit', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='Button', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load())], keywords=[keyword(arg='id', value=Attribute(value=Name(id='wx', ctx=Load()), attr='ID_ANY', ctx=Load())), keyword(arg='label', value=Constant(value='Quit', kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='widgetsizer', ctx=Load()), attr='Add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='quit', ctx=Load()), Constant(value=1, kind=None), Attribute(value=Name(id='wx', ctx=Load()), attr='ALL', ctx=Load()), Constant(value=15, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='quit', ctx=Load()), attr='Bind', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='EVT_BUTTON', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='quitButton', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='quit', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=True, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='start_frames_sizer', ctx=Load()), attr='ShowItems', ctx=Load()), args=[], keywords=[keyword(arg='show', value=Constant(value=False, kind=None))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='end_frames_sizer', ctx=Load()), attr='ShowItems', ctx=Load()), args=[], keywords=[keyword(arg='show', value=Constant(value=False, kind=None))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load()), attr='SetSizer', ctx=Load()), args=[Name(id='widgetsizer', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load()), attr='SetSizerAndFit', ctx=Load()), args=[Name(id='widgetsizer', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load()), attr='Layout', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='numberFrames', ctx=Store())], value=Constant(value=0, kind=None), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Store())], value=Constant(value=0, kind=None), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Store())], value=Call(func=Name(id='Figure', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='axes', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Load()), attr='add_subplot', ctx=Load()), args=[Constant(value=111, kind=None)], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='drs', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Store())], value=Call(func=Attribute(value=Name(id='auxiliaryfunctions', ctx=Load()), attr='read_config', ctx=Load()), args=[Name(id='config', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='Task', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='Task', kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='start', kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='stop', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='stop', kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='date', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='date', kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='trainFraction', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='TrainingFraction', kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='trainFraction', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='trainFraction', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='videos', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='video_sets', kind=None)), ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='bodyparts', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='bodyparts', kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='colormap', ctx=Store())], value=Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='get_cmap', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='colormap', kind=None)), ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='colormap', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='colormap', ctx=Load()), attr='reversed', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='markerSize', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='dotsize', kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='alpha', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='alphavalue', kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='video_names', ctx=Store())], value=ListComp(elt=Attribute(value=Call(func=Name(id='Path', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[]), attr='stem', ctx=Load()), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='videos', ctx=Load()), ifs=[], is_async=0)]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='config_path', ctx=Store())], value=Call(func=Name(id='Path', ctx=Load()), args=[Name(id='config', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='extract_range_frame', ctx=Store())], value=Constant(value=False, kind=None), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='extract_from_analyse_video', ctx=Store())], value=Constant(value=False, kind=None), type_comment=None)], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='quitButton', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='event', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n        Quits the GUI\n        ', kind=None)), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='statusbar', ctx=Load()), attr='SetStatusText', ctx=Load()), args=[Constant(value='', kind=None)], keywords=[])), Assign(targets=[Name(id='dlg', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='MessageDialog', ctx=Load()), args=[Constant(value=None, kind=None), Constant(value='Are you sure?', kind=None), Constant(value='Quit!', kind=None), BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='YES_NO', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='ICON_WARNING', ctx=Load()))], keywords=[]), type_comment=None), Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Attribute(value=Name(id='dlg', ctx=Load()), attr='ShowModal', ctx=Load()), args=[], keywords=[]), type_comment=None), If(test=Compare(left=Name(id='result', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='wx', ctx=Load()), attr='ID_YES', ctx=Load())]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Quitting for now!', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='Destroy', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='updateSlider', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='event', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Load()), attr='SetValue', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='startFrame', ctx=Load()), attr='GetValue', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Load()), attr='GetValue', ctx=Load()), args=[], keywords=[]), type_comment=None), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='extract_from_analyse_video', ctx=Load()), ops=[Eq()], comparators=[Constant(value=True, kind=None)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Load()), attr='delaxes', ctx=Load()), args=[Subscript(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Load()), attr='axes', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='plot_labels', ctx=Load()), args=[], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='update', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='activate_frame_range', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='event', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n        Activates the frame range boxes\n        ', kind=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='checkSlider', ctx=Store())], value=Call(func=Attribute(value=Name(id='event', ctx=Load()), attr='GetEventObject', ctx=Load()), args=[], keywords=[]), type_comment=None), If(test=Compare(left=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='checkSlider', ctx=Load()), attr='GetValue', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value=True, kind=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='extract_range_frame', ctx=Store())], value=Constant(value=True, kind=None), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='startFrame', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=True, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='startFrame', ctx=Load()), attr='SetValue', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Load()), attr='GetValue', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='endFrame', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=True, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='updateFrame', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=True, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=False, kind=None)], keywords=[]))], orelse=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='extract_range_frame', ctx=Store())], value=Constant(value=False, kind=None), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='startFrame', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=False, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='endFrame', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=False, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='updateFrame', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=False, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=True, kind=None)], keywords=[]))])], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='line_select_callback', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='eclick', annotation=None, type_comment=None), arg(arg='erelease', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='eclick and erelease are the press and release events', kind=None)), Assign(targets=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='new_x1', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='new_y1', ctx=Store())], ctx=Store())], value=Tuple(elts=[Attribute(value=Name(id='eclick', ctx=Load()), attr='xdata', ctx=Load()), Attribute(value=Name(id='eclick', ctx=Load()), attr='ydata', ctx=Load())], ctx=Load()), type_comment=None), Assign(targets=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='new_x2', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='new_y2', ctx=Store())], ctx=Store())], value=Tuple(elts=[Attribute(value=Name(id='erelease', ctx=Load()), attr='xdata', ctx=Load()), Attribute(value=Name(id='erelease', ctx=Load()), attr='ydata', ctx=Load())], ctx=Load()), type_comment=None)], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='CheckCropping', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value=' Display frame at time ""time"" for video to check if cropping is fine.\n        Select ROI of interest by adjusting values in myconfig.py\n\n        USAGE for cropping:\n        clip.crop(x1=None, y1=None, x2=None, y2=None, width=None, height=None, x_center=None, y_center=None)\n\n        Returns a new clip in which just a rectangular subregion of the\n        original clip is conserved. x1,y1 indicates the top left corner and\n        x2,y2 is the lower right corner of the cropped region.\n\n        All coordinates are in pixels. Float numbers are accepted.\n        ', kind=None)), Assign(targets=[Name(id='videosource', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='video_source', ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='x1', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Subscript(value=Subscript(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='video_sets', kind=None)), ctx=Load()), slice=Index(value=Name(id='videosource', ctx=Load())), ctx=Load()), slice=Index(value=Constant(value='crop', kind=None)), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=',', kind=None)], keywords=[]), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='x2', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Subscript(value=Subscript(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='video_sets', kind=None)), ctx=Load()), slice=Index(value=Name(id='videosource', ctx=Load())), ctx=Load()), slice=Index(value=Constant(value='crop', kind=None)), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=',', kind=None)], keywords=[]), slice=Index(value=Constant(value=1, kind=None)), ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='y1', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Subscript(value=Subscript(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='video_sets', kind=None)), ctx=Load()), slice=Index(value=Name(id='videosource', ctx=Load())), ctx=Load()), slice=Index(value=Constant(value='crop', kind=None)), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=',', kind=None)], keywords=[]), slice=Index(value=Constant(value=2, kind=None)), ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='y2', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Subscript(value=Subscript(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='video_sets', kind=None)), ctx=Load()), slice=Index(value=Name(id='videosource', ctx=Load())), ctx=Load()), slice=Index(value=Constant(value='crop', kind=None)), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=',', kind=None)], keywords=[]), slice=Index(value=Constant(value=3, kind=None)), ctx=Load())], keywords=[]), type_comment=None), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='cropping', ctx=Load()), ops=[Eq()], comparators=[Constant(value=True, kind=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='cid', ctx=Store())], value=Call(func=Name(id='RectangleSelector', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='axes', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='line_select_callback', ctx=Load())], keywords=[keyword(arg='drawtype', value=Constant(value='box', kind=None)), keyword(arg='useblit', value=Constant(value=False, kind=None)), keyword(arg='button', value=List(elts=[Constant(value=1, kind=None)], ctx=Load())), keyword(arg='minspanx', value=Constant(value=5, kind=None)), keyword(arg='minspany', value=Constant(value=5, kind=None)), keyword(arg='spancoords', value=Constant(value='pixels', kind=None)), keyword(arg='interactive', value=Constant(value=True, kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='canvas', ctx=Load()), attr='mpl_connect', ctx=Load()), args=[Constant(value='key_press_event', kind=None), Attribute(value=Name(id='self', ctx=Load()), attr='cid', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='OnSliderScroll', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='event', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n        Slider to scroll through the video\n        ', kind=None)), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='axes', ctx=Load()), attr='clear', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), attr='Bind', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='EVT_BUTTON', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='grabFrame', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Load()), attr='GetValue', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='startFrame', ctx=Load()), attr='SetValue', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='update', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='is_crop_ok', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='event', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n        Checks if the cropping is ok\n        ', kind=None)), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), attr='SetLabel', ctx=Load()), args=[Constant(value='Grab Frames', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), attr='Bind', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='EVT_BUTTON', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='grabFrame', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Load()), attr='Show', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='start_frames_sizer', ctx=Load()), attr='ShowItems', ctx=Load()), args=[], keywords=[keyword(arg='show', value=Constant(value=True, kind=None))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='end_frames_sizer', ctx=Load()), attr='ShowItems', ctx=Load()), args=[], keywords=[keyword(arg='show', value=Constant(value=True, kind=None))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load()), attr='Layout', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Load()), attr='SetMax', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='numberFrames', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='startFrame', ctx=Load()), attr='SetMax', ctx=Load()), args=[BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='numberFrames', ctx=Load()), op=Sub(), right=Constant(value=1, kind=None))], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='endFrame', ctx=Load()), attr='SetMax', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='numberFrames', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='x1', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='new_x1', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='x2', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='new_x2', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='y1', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='new_y1', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='y2', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='new_y2', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='canvas', ctx=Load()), attr='mpl_disconnect', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='cid', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='axes', ctx=Load()), attr='clear', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Load()), attr='GetValue', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='update', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load()), slice=Index(value=Constant(value='video_sets', kind=None)), ctx=Load()), slice=Index(value=Attribute(value=Name(id='self', ctx=Load()), attr='video_source', ctx=Load())), ctx=Store())], value=Dict(keys=[Constant(value='crop', kind=None)], values=[Call(func=Attribute(value=Constant(value=', ', kind=None), attr='join', ctx=Load()), args=[Call(func=Name(id='map', ctx=Load()), args=[Name(id='str', ctx=Load()), List(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='x1', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='x2', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='y1', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='y2', ctx=Load())], ctx=Load())], keywords=[])], keywords=[])]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='auxiliaryfunctions', ctx=Load()), attr='write_config', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='config_path', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='cfg', ctx=Load())], keywords=[]))], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='browseDir', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='event', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n        Show the File Dialog and ask the user to select the video file\n        ', kind=None)), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='statusbar', ctx=Load()), attr='SetStatusText', ctx=Load()), args=[Constant(value='Looking for a video to start extraction..', kind=None)], keywords=[])), Assign(targets=[Name(id='dlg', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='FileDialog', ctx=Load()), args=[Name(id='self', ctx=Load()), Constant(value='SELECT A VIDEO', kind=None), Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getcwd', ctx=Load()), args=[], keywords=[]), Constant(value='', kind=None), Constant(value='*.*', kind=None), Attribute(value=Name(id='wx', ctx=Load()), attr='FD_OPEN', ctx=Load())], keywords=[]), type_comment=None), If(test=Compare(left=Call(func=Attribute(value=Name(id='dlg', ctx=Load()), attr='ShowModal', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Attribute(value=Name(id='wx', ctx=Load()), attr='ID_OK', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='video_source_original', ctx=Store())], value=Call(func=Attribute(value=Name(id='dlg', ctx=Load()), attr='GetPath', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='video_source', ctx=Store())], value=Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='video_source_original', ctx=Load())], keywords=[]), attr='resolve', ctx=Load()), args=[], keywords=[])], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='load', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=False, kind=None)], keywords=[]))], orelse=[Pass(), Expr(value=Call(func=Attribute(value=Name(id='dlg', ctx=Load()), attr='Destroy', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='Close', ctx=Load()), args=[Constant(value=True, kind=None)], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='dlg', ctx=Load()), attr='Destroy', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='selectedvideo', ctx=Store())], value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='video_source', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='statusbar', ctx=Load()), attr='SetStatusText', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Working on video: {}', kind=None), attr='format', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='split', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='selectedvideo', ctx=Load())], keywords=[])], keywords=[]), slice=Index(value=UnaryOp(op=USub(), operand=Constant(value=1, kind=None))), ctx=Load())], keywords=[])], keywords=[])), If(test=Compare(left=Call(func=Name(id='str', ctx=Load()), args=[Attribute(value=Name(id='selectedvideo', ctx=Load()), attr='stem', ctx=Load())], keywords=[]), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='video_names', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=True, kind=None)], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='vid', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='VideoCapture', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='video_source', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='videoPath', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='dirname', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='video_source', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Store())], value=Attribute(value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='video_source', ctx=Load())], keywords=[]), attr='name', ctx=Load()), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='numberFrames', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='vid', ctx=Load()), attr='get', ctx=Load()), args=[Attribute(value=Name(id='cv2', ctx=Load()), attr='CAP_PROP_FRAME_COUNT', ctx=Load())], keywords=[])], keywords=[]), type_comment=None), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='vid', ctx=Load()), attr='isOpened', ctx=Load()), args=[], keywords=[])), body=[Assign(targets=[Name(id='msg', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='MessageBox', ctx=Load()), args=[Constant(value='Invalid Video file!Do you want to retry?', kind=None), Constant(value='Error!', kind=None), BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='YES_NO', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='ICON_WARNING', ctx=Load()))], keywords=[]), type_comment=None), If(test=Compare(left=Name(id='msg', ctx=Load()), ops=[Eq()], comparators=[Constant(value=2, kind=None)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='load', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=True, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='MainFrame', ctx=Load()), attr='browseDir', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='event', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='Destroy', ctx=Load()), args=[], keywords=[]))])], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Load()), attr='Bind', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='EVT_SLIDER', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='OnSliderScroll', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='update', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='cropMsg', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='MessageBox', ctx=Load()), args=[Constant(value='Do you want to crop the frames?', kind=None), Constant(value='Want to crop?', kind=None), BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='YES_NO', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='ICON_INFORMATION', ctx=Load()))], keywords=[]), type_comment=None), If(test=Compare(left=Name(id='cropMsg', ctx=Load()), ops=[Eq()], comparators=[Constant(value=2, kind=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='cropping', ctx=Store())], value=Constant(value=True, kind=None), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), attr='SetLabel', ctx=Load()), args=[Constant(value='Set cropping parameters', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), attr='Bind', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='EVT_BUTTON', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='is_crop_ok', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load()), attr='Layout', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='basefolder', ctx=Store())], value=BinOp(left=BinOp(left=Constant(value='data-', kind=None), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='Task', ctx=Load())), op=Add(), right=Constant(value='/', kind=None)), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='MainFrame', ctx=Load()), attr='CheckCropping', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='cropping', ctx=Store())], value=Constant(value=False, kind=None), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Load()), attr='Show', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='start_frames_sizer', ctx=Load()), attr='ShowItems', ctx=Load()), args=[], keywords=[keyword(arg='show', value=Constant(value=True, kind=None))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='end_frames_sizer', ctx=Load()), attr='ShowItems', ctx=Load()), args=[], keywords=[keyword(arg='show', value=Constant(value=True, kind=None))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='widget_panel', ctx=Load()), attr='Layout', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='slider', ctx=Load()), attr='SetMax', ctx=Load()), args=[BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='numberFrames', ctx=Load()), op=Sub(), right=Constant(value=1, kind=None))], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='startFrame', ctx=Load()), attr='SetMax', ctx=Load()), args=[BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='numberFrames', ctx=Load()), op=Sub(), right=Constant(value=1, kind=None))], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='endFrame', ctx=Load()), attr='SetMax', ctx=Load()), args=[BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='numberFrames', ctx=Load()), op=Sub(), right=Constant(value=1, kind=None))], keywords=[]))])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='MessageBox', ctx=Load()), args=[Constant(value='Video file is not in config file. Use add function to add this video in the config file and retry!', kind=None), Constant(value='Error!', kind=None), BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='OK', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='ICON_WARNING', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='Close', ctx=Load()), args=[Constant(value=True, kind=None)], keywords=[]))])], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='update', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n        Updates the image with the current slider index\n        ', kind=None)), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), attr='Enable', ctx=Load()), args=[Constant(value=True, kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='grab', ctx=Load()), attr='Bind', ctx=Load()), args=[Attribute(value=Name(id='wx', ctx=Load()), attr='EVT_BUTTON', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='grabFrame', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='axes', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='canvas', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='image_panel', ctx=Load()), attr='getfigure', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='vid', ctx=Load()), attr='set', ctx=Load()), args=[Constant(value=1, kind=None), Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='ret', ctx=Store()), Name(id='frame', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='vid', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]), type_comment=None), If(test=Name(id='ret', ctx=Load()), body=[Assign(targets=[Name(id='frame', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='cvtColor', ctx=Load()), args=[Name(id='frame', ctx=Load()), Attribute(value=Name(id='cv2', ctx=Load()), attr='COLOR_BGR2RGB', ctx=Load())], keywords=[]), type_comment=None)], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='ax', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='axes', ctx=Load()), attr='imshow', ctx=Load()), args=[Name(id='frame', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='axes', ctx=Load()), attr='set_title', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=BinOp(left=Call(func=Name(id='str', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Load())], keywords=[]), op=Add(), right=Constant(value='/', kind=None)), op=Add(), right=Call(func=Name(id='str', ctx=Load()), args=[BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='numberFrames', ctx=Load()), op=Sub(), right=Constant(value=1, kind=None))], keywords=[])), op=Add(), right=Constant(value=' ', kind=None)), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Load()))], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Load()), attr='canvas', ctx=Load()), attr='draw', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='chooseFrame', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='ret', ctx=Store()), Name(id='frame', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='vid', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='fname', ctx=Store())], value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_path', ctx=Store())], value=BinOp(left=BinOp(left=Subscript(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='config_path', ctx=Load()), attr='parents', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), op=Div(), right=Constant(value='labeled-data', kind=None)), op=Div(), right=Attribute(value=Name(id='fname', ctx=Load()), attr='stem', ctx=Load())), type_comment=None), If(test=Call(func=Attribute(value=Name(id='output_path', ctx=Load()), attr='exists', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='frame', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='cvtColor', ctx=Load()), args=[Name(id='frame', ctx=Load()), Attribute(value=Name(id='cv2', ctx=Load()), attr='COLOR_BGR2RGB', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='frame', ctx=Store())], value=Call(func=Name(id='img_as_ubyte', ctx=Load()), args=[Name(id='frame', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='img_name', ctx=Store())], value=BinOp(left=BinOp(left=BinOp(left=Call(func=Name(id='str', ctx=Load()), args=[Name(id='output_path', ctx=Load())], keywords=[]), op=Add(), right=Constant(value='/img', kind=None)), op=Add(), right=Call(func=Attribute(value=Call(func=Name(id='str', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Load())], keywords=[]), attr='zfill', ctx=Load()), args=[Call(func=Name(id='int', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ceil', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='log10', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='numberFrames', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), op=Add(), right=Constant(value='.png', kind=None)), type_comment=None), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='cropping', ctx=Load()), body=[Assign(targets=[Name(id='crop_img', ctx=Store())], value=Subscript(value=Name(id='frame', ctx=Load()), slice=ExtSlice(dims=[Slice(lower=Attribute(value=Name(id='self', ctx=Load()), attr='y1', ctx=Load()), upper=Attribute(value=Name(id='self', ctx=Load()), attr='y2', ctx=Load()), step=None), Slice(lower=Attribute(value=Name(id='self', ctx=Load()), attr='x1', ctx=Load()), upper=Attribute(value=Name(id='self', ctx=Load()), attr='x2', ctx=Load()), step=None)]), ctx=Load()), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='imwrite', ctx=Load()), args=[Name(id='img_name', ctx=Load()), Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='cvtColor', ctx=Load()), args=[Name(id='crop_img', ctx=Load()), Attribute(value=Name(id='cv2', ctx=Load()), attr='COLOR_RGB2BGR', ctx=Load())], keywords=[])], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='imwrite', ctx=Load()), args=[Name(id='img_name', ctx=Load()), Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='cvtColor', ctx=Load()), args=[Name(id='frame', ctx=Load()), Attribute(value=Name(id='cv2', ctx=Load()), attr='COLOR_RGB2BGR', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[BinOp(left=Constant(value=""%s path not found. Please make sure that the video was added to the config file using the function 'deeplabcut.add_new_videos'."", kind=None), op=Mod(), right=Name(id='output_path', ctx=Load()))], keywords=[]))])], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='grabFrame', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='event', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n        Extracts the frame and saves in the current directory\n        ', kind=None)), Assign(targets=[Name(id='num_frames_extract', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='endFrame', ctx=Load()), attr='GetValue', ctx=Load()), args=[], keywords=[]), type_comment=None), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Load()), BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Load()), op=Add(), right=Name(id='num_frames_extract', ctx=Load()))], keywords=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Store())], value=Name(id='i', ctx=Load()), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='vid', ctx=Load()), attr='set', ctx=Load()), args=[Constant(value=1, kind=None), Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='chooseFrame', ctx=Load()), args=[], keywords=[]))], orelse=[], type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='vid', ctx=Load()), attr='set', ctx=Load()), args=[Constant(value=1, kind=None), Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='chooseFrame', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='plot_labels', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n        Plots the labels of the analyzed video\n        ', kind=None)), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='vid', ctx=Load()), attr='set', ctx=Load()), args=[Constant(value=1, kind=None), Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='ret', ctx=Store()), Name(id='frame', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='vid', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]), type_comment=None), If(test=Name(id='ret', ctx=Load()), body=[Assign(targets=[Name(id='frame', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='cvtColor', ctx=Load()), args=[Name(id='frame', ctx=Load()), Attribute(value=Name(id='cv2', ctx=Load()), attr='COLOR_BGR2RGB', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='norm', ctx=Store())], value=Call(func=Attribute(value=Name(id='mcolors', ctx=Load()), attr='Normalize', ctx=Load()), args=[], keywords=[keyword(arg='vmin', value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='min', ctx=Load()), args=[Name(id='frame', ctx=Load())], keywords=[])), keyword(arg='vmax', value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='max', ctx=Load()), args=[Name(id='frame', ctx=Load())], keywords=[]))]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='colorIndex', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='linspace', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='min', ctx=Load()), args=[Name(id='frame', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='max', ctx=Load()), args=[Name(id='frame', ctx=Load())], keywords=[]), Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='bodyparts', ctx=Load())], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='divider', ctx=Store())], value=Call(func=Name(id='make_axes_locatable', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='axes', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='cax', ctx=Store())], value=Call(func=Attribute(value=Name(id='divider', ctx=Load()), attr='append_axes', ctx=Load()), args=[Constant(value='right', kind=None)], keywords=[keyword(arg='size', value=Constant(value='5%', kind=None)), keyword(arg='pad', value=Constant(value=0.05, kind=None))]), type_comment=None), Assign(targets=[Name(id='cbar', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Load()), attr='colorbar', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='ax', ctx=Load())], keywords=[keyword(arg='cax', value=Name(id='cax', ctx=Load())), keyword(arg='spacing', value=Constant(value='proportional', kind=None)), keyword(arg='ticks', value=Attribute(value=Name(id='self', ctx=Load()), attr='colorIndex', ctx=Load()))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='cbar', ctx=Load()), attr='set_ticklabels', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='bodyparts', ctx=Load())], keywords=[])), For(target=Tuple(elts=[Name(id='bpindex', ctx=Store()), Name(id='bp', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='bodyparts', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='color', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='colormap', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='norm', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='colorIndex', ctx=Load()), slice=Index(value=Name(id='bpindex', ctx=Load())), ctx=Load())], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='points', ctx=Store())], value=List(elts=[Subscript(value=Attribute(value=Subscript(value=Subscript(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='Dataframe', ctx=Load()), slice=Index(value=Attribute(value=Name(id='self', ctx=Load()), attr='scorer', ctx=Load())), ctx=Load()), slice=Index(value=Name(id='bp', ctx=Load())), ctx=Load()), slice=Index(value=Constant(value='x', kind=None)), ctx=Load()), attr='values', ctx=Load()), slice=Index(value=Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Load())), ctx=Load()), Subscript(value=Attribute(value=Subscript(value=Subscript(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='Dataframe', ctx=Load()), slice=Index(value=Attribute(value=Name(id='self', ctx=Load()), attr='scorer', ctx=Load())), ctx=Load()), slice=Index(value=Name(id='bp', ctx=Load())), ctx=Load()), slice=Index(value=Constant(value='y', kind=None)), ctx=Load()), attr='values', ctx=Load()), slice=Index(value=Attribute(value=Name(id='self', ctx=Load()), attr='currFrame', ctx=Load())), ctx=Load()), Constant(value=1.0, kind=None)], ctx=Load()), type_comment=None), Assign(targets=[Name(id='circle', ctx=Store())], value=List(elts=[Call(func=Attribute(value=Name(id='patches', ctx=Load()), attr='Circle', ctx=Load()), args=[Tuple(elts=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='points', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='points', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load())], ctx=Load())], keywords=[keyword(arg='radius', value=Attribute(value=Name(id='self', ctx=Load()), attr='markerSize', ctx=Load())), keyword(arg='fc', value=Name(id='color', ctx=Load())), keyword(arg='alpha', value=Attribute(value=Name(id='self', ctx=Load()), attr='alpha', ctx=Load()))])], ctx=Load()), type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='axes', ctx=Load()), attr='add_patch', ctx=Load()), args=[Subscript(value=Name(id='circle', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], keywords=[]))], orelse=[], type_comment=None), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Load()), attr='canvas', ctx=Load()), attr='draw', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='helpButton', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='event', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='\n        Opens Instructions\n        ', kind=None)), Expr(value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='MessageBox', ctx=Load()), args=[Constant(value='1. Use the Load Video button to load a video. Use the slider to select a frame in the entire video. The number mentioned on the top of the slider represents the frame index. \n\n2. Click Grab Frames button to save the specific frame.\n\n3. In events where you need to extract a range of frames, then use the checkbox Range of frames to select the start frame index and number of frames to extract. Click the update button to see the start frame index. Click Grab Frames to select the range of frames. \n\n Click OK to continue', kind=None), Constant(value='Instructions to use!', kind=None), BinOp(left=Attribute(value=Name(id='wx', ctx=Load()), attr='OK', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='wx', ctx=Load()), attr='ICON_INFORMATION', ctx=Load()))], keywords=[]))], decorator_list=[], returns=None, type_comment=None)], decorator_list=[]), ClassDef(name='MatplotPanel', bases=[Attribute(value=Name(id='wx', ctx=Load()), attr='Panel', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=None, type_comment=None), arg(arg='parent', annotation=None, type_comment=None), arg(arg='config', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='wx', ctx=Load()), attr='Panel', ctx=Load()), attr='__init__', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='parent', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=1, kind=None))], keywords=[keyword(arg='size', value=Tuple(elts=[Constant(value=100, kind=None), Constant(value=100, kind=None)], ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Store())], value=Call(func=Name(id='Figure', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='axes', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='figure', ctx=Load()), attr='add_subplot', ctx=Load()), args=[Constant(value=111, kind=None)], keywords=[]), type_comment=None)], decorator_list=[], returns=None, type_comment=None)], decorator_list=[]), FunctionDef(name='show', args=arguments(posonlyargs=[], args=[arg(arg='config', annotation=None, type_comment=None), arg(arg='slider_width', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[Constant(value=25, kind=None)]), body=[Import(names=[alias(name='imageio', asname=None)]), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='imageio', ctx=Load()), attr='plugins', ctx=Load()), attr='ffmpeg', ctx=Load()), attr='download', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='app', ctx=Store())], value=Call(func=Attribute(value=Name(id='wx', ctx=Load()), attr='App', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='frame', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='MainFrame', ctx=Load()), args=[Constant(value=None, kind=None), Name(id='config', ctx=Load()), Name(id='slider_width', ctx=Load())], keywords=[]), attr='Show', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='app', ctx=Load()), attr='MainLoop', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=None, type_comment=None), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__', kind=None)]), body=[Assign(targets=[Name(id='parser', ctx=Store())], value=Call(func=Attribute(value=Name(id='argparse', ctx=Load()), attr='ArgumentParser', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='config', kind=None)], keywords=[])), Assign(targets=[Name(id='cli_args', ctx=Store())], value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='parse_args', ctx=Load()), args=[], keywords=[]), type_comment=None)], orelse=[])], type_ignores=[])"
