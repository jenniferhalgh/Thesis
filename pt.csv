Path,oldFileContent,currentFileContent
tools/demo.py,"Module(body=[Expr(value=Constant(value='\nDemo script showing detections in sample images.\n\nSee README.md for installation instructions before running.\n', kind=None)), ImportFrom(module='__future__', names=[alias(name='absolute_import', asname=None)], level=0), ImportFrom(module='__future__', names=[alias(name='division', asname=None)], level=0), ImportFrom(module='__future__', names=[alias(name='print_function', asname=None)], level=0), Import(names=[alias(name='_init_paths', asname=None)]), ImportFrom(module='model.config', names=[alias(name='cfg', asname=None)], level=0), ImportFrom(module='model.test', names=[alias(name='im_detect', asname=None)], level=0), ImportFrom(module='model.nms_wrapper', names=[alias(name='nms', asname=None)], level=0), ImportFrom(module='utils.timer', names=[alias(name='Timer', asname=None)], level=0), Import(names=[alias(name='tensorflow', asname='tf')]), Import(names=[alias(name='matplotlib.pyplot', asname='plt')]), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='os', asname=None), alias(name='cv2', asname=None)]), Import(names=[alias(name='argparse', asname=None)]), ImportFrom(module='nets.vgg16', names=[alias(name='vgg16', asname=None)], level=0), ImportFrom(module='nets.resnet_v1', names=[alias(name='resnetv1', asname=None)], level=0), Assign(targets=[Name(id='CLASSES', ctx=Store())], value=Tuple(elts=[Constant(value='__background__', kind=None), Constant(value='aeroplane', kind=None), Constant(value='bicycle', kind=None), Constant(value='bird', kind=None), Constant(value='boat', kind=None), Constant(value='bottle', kind=None), Constant(value='bus', kind=None), Constant(value='car', kind=None), Constant(value='cat', kind=None), Constant(value='chair', kind=None), Constant(value='cow', kind=None), Constant(value='diningtable', kind=None), Constant(value='dog', kind=None), Constant(value='horse', kind=None), Constant(value='motorbike', kind=None), Constant(value='person', kind=None), Constant(value='pottedplant', kind=None), Constant(value='sheep', kind=None), Constant(value='sofa', kind=None), Constant(value='train', kind=None), Constant(value='tvmonitor', kind=None)], ctx=Load()), type_comment=None), Assign(targets=[Name(id='NETS', ctx=Store())], value=Dict(keys=[Constant(value='vgg16', kind=None), Constant(value='res101', kind=None)], values=[Tuple(elts=[Constant(value='vgg16_faster_rcnn_iter_70000.ckpt', kind=None)], ctx=Load()), Tuple(elts=[Constant(value='res101_faster_rcnn_iter_110000.ckpt', kind=None)], ctx=Load())]), type_comment=None), Assign(targets=[Name(id='DATASETS', ctx=Store())], value=Dict(keys=[Constant(value='pascal_voc', kind=None), Constant(value='pascal_voc_0712', kind=None)], values=[Tuple(elts=[Constant(value='voc_2007_trainval', kind=None)], ctx=Load()), Tuple(elts=[Constant(value='voc_2007_trainval+voc_2012_trainval', kind=None)], ctx=Load())]), type_comment=None), FunctionDef(name='vis_detections', args=arguments(posonlyargs=[], args=[arg(arg='im', annotation=None, type_comment=None), arg(arg='class_name', annotation=None, type_comment=None), arg(arg='dets', annotation=None, type_comment=None), arg(arg='thresh', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[Constant(value=0.5, kind=None)]), body=[Expr(value=Constant(value='Draw detected bounding boxes.', kind=None)), Assign(targets=[Name(id='inds', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='where', ctx=Load()), args=[Compare(left=Subscript(value=Name(id='dets', ctx=Load()), slice=ExtSlice(dims=[Slice(lower=None, upper=None, step=None), Index(value=UnaryOp(op=USub(), operand=Constant(value=1, kind=None)))]), ctx=Load()), ops=[GtE()], comparators=[Name(id='thresh', ctx=Load())])], keywords=[]), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), type_comment=None), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='inds', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=0, kind=None)]), body=[Return(value=None)], orelse=[]), Assign(targets=[Name(id='im', ctx=Store())], value=Subscript(value=Name(id='im', ctx=Load()), slice=ExtSlice(dims=[Slice(lower=None, upper=None, step=None), Slice(lower=None, upper=None, step=None), Index(value=Tuple(elts=[Constant(value=2, kind=None), Constant(value=1, kind=None), Constant(value=0, kind=None)], ctx=Load()))]), ctx=Load()), type_comment=None), Assign(targets=[Tuple(elts=[Name(id='fig', ctx=Store()), Name(id='ax', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='subplots', ctx=Load()), args=[], keywords=[keyword(arg='figsize', value=Tuple(elts=[Constant(value=12, kind=None), Constant(value=12, kind=None)], ctx=Load()))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='ax', ctx=Load()), attr='imshow', ctx=Load()), args=[Name(id='im', ctx=Load())], keywords=[keyword(arg='aspect', value=Constant(value='equal', kind=None))])), For(target=Name(id='i', ctx=Store()), iter=Name(id='inds', ctx=Load()), body=[Assign(targets=[Name(id='bbox', ctx=Store())], value=Subscript(value=Name(id='dets', ctx=Load()), slice=ExtSlice(dims=[Index(value=Name(id='i', ctx=Load())), Slice(lower=None, upper=Constant(value=4, kind=None), step=None)]), ctx=Load()), type_comment=None), Assign(targets=[Name(id='score', ctx=Store())], value=Subscript(value=Name(id='dets', ctx=Load()), slice=Index(value=Tuple(elts=[Name(id='i', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=1, kind=None))], ctx=Load())), ctx=Load()), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='ax', ctx=Load()), attr='add_patch', ctx=Load()), args=[Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='Rectangle', ctx=Load()), args=[Tuple(elts=[Subscript(value=Name(id='bbox', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), Subscript(value=Name(id='bbox', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load())], ctx=Load()), BinOp(left=Subscript(value=Name(id='bbox', ctx=Load()), slice=Index(value=Constant(value=2, kind=None)), ctx=Load()), op=Sub(), right=Subscript(value=Name(id='bbox', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())), BinOp(left=Subscript(value=Name(id='bbox', ctx=Load()), slice=Index(value=Constant(value=3, kind=None)), ctx=Load()), op=Sub(), right=Subscript(value=Name(id='bbox', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load()))], keywords=[keyword(arg='fill', value=Constant(value=False, kind=None)), keyword(arg='edgecolor', value=Constant(value='red', kind=None)), keyword(arg='linewidth', value=Constant(value=3.5, kind=None))])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ax', ctx=Load()), attr='text', ctx=Load()), args=[Subscript(value=Name(id='bbox', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), BinOp(left=Subscript(value=Name(id='bbox', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load()), op=Sub(), right=Constant(value=2, kind=None)), Call(func=Attribute(value=Constant(value='{:s} {:.3f}', kind=None), attr='format', ctx=Load()), args=[Name(id='class_name', ctx=Load()), Name(id='score', ctx=Load())], keywords=[])], keywords=[keyword(arg='bbox', value=Call(func=Name(id='dict', ctx=Load()), args=[], keywords=[keyword(arg='facecolor', value=Constant(value='blue', kind=None)), keyword(arg='alpha', value=Constant(value=0.5, kind=None))])), keyword(arg='fontsize', value=Constant(value=14, kind=None)), keyword(arg='color', value=Constant(value='white', kind=None))]))], orelse=[], type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='ax', ctx=Load()), attr='set_title', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='{} detections with p({} | box) >= {:.1f}', kind=None), attr='format', ctx=Load()), args=[Name(id='class_name', ctx=Load()), Name(id='class_name', ctx=Load()), Name(id='thresh', ctx=Load())], keywords=[])], keywords=[keyword(arg='fontsize', value=Constant(value=14, kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='axis', ctx=Load()), args=[Constant(value='off', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='tight_layout', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='draw', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='demo', args=arguments(posonlyargs=[], args=[arg(arg='sess', annotation=None, type_comment=None), arg(arg='net', annotation=None, type_comment=None), arg(arg='image_name', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='Detect object classes in an image using pre-computed object proposals.', kind=None)), Assign(targets=[Name(id='im_file', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='cfg', ctx=Load()), attr='DATA_DIR', ctx=Load()), Constant(value='demo', kind=None), Name(id='image_name', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='im', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='imread', ctx=Load()), args=[Name(id='im_file', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='timer', ctx=Store())], value=Call(func=Name(id='Timer', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='timer', ctx=Load()), attr='tic', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='scores', ctx=Store()), Name(id='boxes', ctx=Store())], ctx=Store())], value=Call(func=Name(id='im_detect', ctx=Load()), args=[Name(id='sess', ctx=Load()), Name(id='net', ctx=Load()), Name(id='im', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='timer', ctx=Load()), attr='toc', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Detection took {:.3f}s for {:d} object proposals', kind=None), attr='format', ctx=Load()), args=[Attribute(value=Name(id='timer', ctx=Load()), attr='total_time', ctx=Load()), Subscript(value=Attribute(value=Name(id='boxes', ctx=Load()), attr='shape', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='CONF_THRESH', ctx=Store())], value=Constant(value=0.8, kind=None), type_comment=None), Assign(targets=[Name(id='NMS_THRESH', ctx=Store())], value=Constant(value=0.3, kind=None), type_comment=None), For(target=Tuple(elts=[Name(id='cls_ind', ctx=Store()), Name(id='cls', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Subscript(value=Name(id='CLASSES', ctx=Load()), slice=Slice(lower=Constant(value=1, kind=None), upper=None, step=None), ctx=Load())], keywords=[]), body=[AugAssign(target=Name(id='cls_ind', ctx=Store()), op=Add(), value=Constant(value=1, kind=None)), Assign(targets=[Name(id='cls_boxes', ctx=Store())], value=Subscript(value=Name(id='boxes', ctx=Load()), slice=ExtSlice(dims=[Slice(lower=None, upper=None, step=None), Slice(lower=BinOp(left=Constant(value=4, kind=None), op=Mult(), right=Name(id='cls_ind', ctx=Load())), upper=BinOp(left=Constant(value=4, kind=None), op=Mult(), right=BinOp(left=Name(id='cls_ind', ctx=Load()), op=Add(), right=Constant(value=1, kind=None))), step=None)]), ctx=Load()), type_comment=None), Assign(targets=[Name(id='cls_scores', ctx=Store())], value=Subscript(value=Name(id='scores', ctx=Load()), slice=ExtSlice(dims=[Slice(lower=None, upper=None, step=None), Index(value=Name(id='cls_ind', ctx=Load()))]), ctx=Load()), type_comment=None), Assign(targets=[Name(id='dets', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='hstack', ctx=Load()), args=[Tuple(elts=[Name(id='cls_boxes', ctx=Load()), Subscript(value=Name(id='cls_scores', ctx=Load()), slice=ExtSlice(dims=[Slice(lower=None, upper=None, step=None), Index(value=Attribute(value=Name(id='np', ctx=Load()), attr='newaxis', ctx=Load()))]), ctx=Load())], ctx=Load())], keywords=[]), attr='astype', ctx=Load()), args=[Attribute(value=Name(id='np', ctx=Load()), attr='float32', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='keep', ctx=Store())], value=Call(func=Name(id='nms', ctx=Load()), args=[Name(id='dets', ctx=Load()), Name(id='NMS_THRESH', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='dets', ctx=Store())], value=Subscript(value=Name(id='dets', ctx=Load()), slice=ExtSlice(dims=[Index(value=Name(id='keep', ctx=Load())), Slice(lower=None, upper=None, step=None)]), ctx=Load()), type_comment=None), Expr(value=Call(func=Name(id='vis_detections', ctx=Load()), args=[Name(id='im', ctx=Load()), Name(id='cls', ctx=Load()), Name(id='dets', ctx=Load())], keywords=[keyword(arg='thresh', value=Name(id='CONF_THRESH', ctx=Load()))]))], orelse=[], type_comment=None)], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='parse_args', args=arguments(posonlyargs=[], args=[], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='Parse input arguments.', kind=None)), Assign(targets=[Name(id='parser', ctx=Store())], value=Call(func=Attribute(value=Name(id='argparse', ctx=Load()), attr='ArgumentParser', ctx=Load()), args=[], keywords=[keyword(arg='description', value=Constant(value='Tensorflow Faster R-CNN demo', kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--net', kind=None)], keywords=[keyword(arg='dest', value=Constant(value='demo_net', kind=None)), keyword(arg='help', value=Constant(value='Network to use [vgg16 res101]', kind=None)), keyword(arg='choices', value=Call(func=Attribute(value=Name(id='NETS', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])), keyword(arg='default', value=Constant(value='res101', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--dataset', kind=None)], keywords=[keyword(arg='dest', value=Constant(value='dataset', kind=None)), keyword(arg='help', value=Constant(value='Trained dataset [pascal_voc pascal_voc_0712]', kind=None)), keyword(arg='choices', value=Call(func=Attribute(value=Name(id='DATASETS', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])), keyword(arg='default', value=Constant(value='pascal_voc_0712', kind=None))])), Assign(targets=[Name(id='args', ctx=Store())], value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='parse_args', ctx=Load()), args=[], keywords=[]), type_comment=None), Return(value=Name(id='args', ctx=Load()))], decorator_list=[], returns=None, type_comment=None), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__', kind=None)]), body=[Assign(targets=[Attribute(value=Attribute(value=Name(id='cfg', ctx=Load()), attr='TEST', ctx=Load()), attr='HAS_RPN', ctx=Store())], value=Constant(value=True, kind=None), type_comment=None), Assign(targets=[Name(id='args', ctx=Store())], value=Call(func=Name(id='parse_args', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='demonet', ctx=Store())], value=Attribute(value=Name(id='args', ctx=Load()), attr='demo_net', ctx=Load()), type_comment=None), Assign(targets=[Name(id='dataset', ctx=Store())], value=Attribute(value=Name(id='args', ctx=Load()), attr='dataset', ctx=Load()), type_comment=None), Assign(targets=[Name(id='tfmodel', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Constant(value='output', kind=None), Name(id='demonet', ctx=Load()), Subscript(value=Subscript(value=Name(id='DATASETS', ctx=Load()), slice=Index(value=Name(id='dataset', ctx=Load())), ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), Constant(value='default', kind=None), Subscript(value=Subscript(value=Name(id='NETS', ctx=Load()), slice=Index(value=Name(id='demonet', ctx=Load())), ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], keywords=[]), type_comment=None), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isfile', ctx=Load()), args=[BinOp(left=Name(id='tfmodel', ctx=Load()), op=Add(), right=Constant(value='.meta', kind=None))], keywords=[])), body=[Raise(exc=Call(func=Name(id='IOError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='{:s} not found.\nDid you download the proper networks from our server and place them properly?', kind=None), attr='format', ctx=Load()), args=[BinOp(left=Name(id='tfmodel', ctx=Load()), op=Add(), right=Constant(value='.meta', kind=None))], keywords=[])], keywords=[]), cause=None)], orelse=[]), Assign(targets=[Name(id='tfconfig', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='ConfigProto', ctx=Load()), args=[], keywords=[keyword(arg='allow_soft_placement', value=Constant(value=True, kind=None))]), type_comment=None), Assign(targets=[Attribute(value=Attribute(value=Name(id='tfconfig', ctx=Load()), attr='gpu_options', ctx=Load()), attr='allow_growth', ctx=Store())], value=Constant(value=True, kind=None), type_comment=None), Assign(targets=[Name(id='sess', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='Session', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Name(id='tfconfig', ctx=Load()))]), type_comment=None), If(test=Compare(left=Name(id='demonet', ctx=Load()), ops=[Eq()], comparators=[Constant(value='vgg16', kind=None)]), body=[Assign(targets=[Name(id='net', ctx=Store())], value=Call(func=Name(id='vgg16', ctx=Load()), args=[], keywords=[keyword(arg='batch_size', value=Constant(value=1, kind=None))]), type_comment=None)], orelse=[If(test=Compare(left=Name(id='demonet', ctx=Load()), ops=[Eq()], comparators=[Constant(value='res101', kind=None)]), body=[Assign(targets=[Name(id='net', ctx=Store())], value=Call(func=Name(id='resnetv1', ctx=Load()), args=[], keywords=[keyword(arg='batch_size', value=Constant(value=1, kind=None)), keyword(arg='num_layers', value=Constant(value=101, kind=None))]), type_comment=None)], orelse=[Raise(exc=Name(id='NotImplementedError', ctx=Load()), cause=None)])]), Expr(value=Call(func=Attribute(value=Name(id='net', ctx=Load()), attr='create_architecture', ctx=Load()), args=[Name(id='sess', ctx=Load()), Constant(value='TEST', kind=None), Constant(value=21, kind=None)], keywords=[keyword(arg='tag', value=Constant(value='default', kind=None)), keyword(arg='anchor_scales', value=List(elts=[Constant(value=8, kind=None), Constant(value=16, kind=None), Constant(value=32, kind=None)], ctx=Load()))])), Assign(targets=[Name(id='saver', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='train', ctx=Load()), attr='Saver', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='saver', ctx=Load()), attr='restore', ctx=Load()), args=[Name(id='sess', ctx=Load()), Name(id='tfmodel', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Loaded network {:s}', kind=None), attr='format', ctx=Load()), args=[Name(id='tfmodel', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='im_names', ctx=Store())], value=List(elts=[Constant(value='000456.jpg', kind=None), Constant(value='000542.jpg', kind=None), Constant(value='001150.jpg', kind=None), Constant(value='001763.jpg', kind=None), Constant(value='004545.jpg', kind=None)], ctx=Load()), type_comment=None), For(target=Name(id='im_name', ctx=Store()), iter=Name(id='im_names', ctx=Load()), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~', kind=None)], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Demo for data/demo/{}', kind=None), attr='format', ctx=Load()), args=[Name(id='im_name', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Name(id='demo', ctx=Load()), args=[Name(id='sess', ctx=Load()), Name(id='net', ctx=Load()), Name(id='im_name', ctx=Load())], keywords=[]))], orelse=[], type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='show', ctx=Load()), args=[], keywords=[]))], orelse=[])], type_ignores=[])","Module(body=[Expr(value=Constant(value='\nDemo script showing detections in sample images.\n\nSee README.md for installation instructions before running.\n', kind=None)), ImportFrom(module='__future__', names=[alias(name='absolute_import', asname=None)], level=0), ImportFrom(module='__future__', names=[alias(name='division', asname=None)], level=0), ImportFrom(module='__future__', names=[alias(name='print_function', asname=None)], level=0), Import(names=[alias(name='_init_paths', asname=None)]), ImportFrom(module='model.config', names=[alias(name='cfg', asname=None)], level=0), ImportFrom(module='model.test', names=[alias(name='im_detect', asname=None)], level=0), ImportFrom(module='model.nms_wrapper', names=[alias(name='nms', asname=None)], level=0), ImportFrom(module='utils.timer', names=[alias(name='Timer', asname=None)], level=0), Import(names=[alias(name='tensorflow', asname='tf')]), Import(names=[alias(name='matplotlib', asname=None)]), Expr(value=Call(func=Attribute(value=Name(id='matplotlib', ctx=Load()), attr='use', ctx=Load()), args=[Constant(value='Agg', kind=None)], keywords=[])), Import(names=[alias(name='matplotlib.pyplot', asname='plt')]), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='os', asname=None), alias(name='cv2', asname=None)]), Import(names=[alias(name='argparse', asname=None)]), ImportFrom(module='nets.vgg16', names=[alias(name='vgg16', asname=None)], level=0), ImportFrom(module='nets.resnet_v1', names=[alias(name='resnetv1', asname=None)], level=0), Assign(targets=[Name(id='CLASSES', ctx=Store())], value=Tuple(elts=[Constant(value='__background__', kind=None), Constant(value='aeroplane', kind=None), Constant(value='bicycle', kind=None), Constant(value='bird', kind=None), Constant(value='boat', kind=None), Constant(value='bottle', kind=None), Constant(value='bus', kind=None), Constant(value='car', kind=None), Constant(value='cat', kind=None), Constant(value='chair', kind=None), Constant(value='cow', kind=None), Constant(value='diningtable', kind=None), Constant(value='dog', kind=None), Constant(value='horse', kind=None), Constant(value='motorbike', kind=None), Constant(value='person', kind=None), Constant(value='pottedplant', kind=None), Constant(value='sheep', kind=None), Constant(value='sofa', kind=None), Constant(value='train', kind=None), Constant(value='tvmonitor', kind=None)], ctx=Load()), type_comment=None), Assign(targets=[Name(id='NETS', ctx=Store())], value=Dict(keys=[Constant(value='vgg16', kind=None), Constant(value='res101', kind=None)], values=[Tuple(elts=[Constant(value='vgg16_faster_rcnn_iter_70000.ckpt', kind=None)], ctx=Load()), Tuple(elts=[Constant(value='res101_faster_rcnn_iter_110000.ckpt', kind=None)], ctx=Load())]), type_comment=None), Assign(targets=[Name(id='DATASETS', ctx=Store())], value=Dict(keys=[Constant(value='pascal_voc', kind=None), Constant(value='pascal_voc_0712', kind=None)], values=[Tuple(elts=[Constant(value='voc_2007_trainval', kind=None)], ctx=Load()), Tuple(elts=[Constant(value='voc_2007_trainval+voc_2012_trainval', kind=None)], ctx=Load())]), type_comment=None), FunctionDef(name='vis_detections', args=arguments(posonlyargs=[], args=[arg(arg='im', annotation=None, type_comment=None), arg(arg='class_name', annotation=None, type_comment=None), arg(arg='dets', annotation=None, type_comment=None), arg(arg='thresh', annotation=None, type_comment=None), arg(arg='image_name', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[Constant(value=0.5, kind=None), Constant(value='image', kind=None)]), body=[Expr(value=Constant(value='Draw detected bounding boxes.', kind=None)), Assign(targets=[Name(id='inds', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='where', ctx=Load()), args=[Compare(left=Subscript(value=Name(id='dets', ctx=Load()), slice=ExtSlice(dims=[Slice(lower=None, upper=None, step=None), Index(value=UnaryOp(op=USub(), operand=Constant(value=1, kind=None)))]), ctx=Load()), ops=[GtE()], comparators=[Name(id='thresh', ctx=Load())])], keywords=[]), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), type_comment=None), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='inds', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=0, kind=None)]), body=[Return(value=None)], orelse=[]), Assign(targets=[Name(id='im', ctx=Store())], value=Subscript(value=Name(id='im', ctx=Load()), slice=ExtSlice(dims=[Slice(lower=None, upper=None, step=None), Slice(lower=None, upper=None, step=None), Index(value=Tuple(elts=[Constant(value=2, kind=None), Constant(value=1, kind=None), Constant(value=0, kind=None)], ctx=Load()))]), ctx=Load()), type_comment=None), Assign(targets=[Tuple(elts=[Name(id='fig', ctx=Store()), Name(id='ax', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='subplots', ctx=Load()), args=[], keywords=[keyword(arg='figsize', value=Tuple(elts=[Constant(value=12, kind=None), Constant(value=12, kind=None)], ctx=Load()))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='ax', ctx=Load()), attr='imshow', ctx=Load()), args=[Name(id='im', ctx=Load())], keywords=[keyword(arg='aspect', value=Constant(value='equal', kind=None))])), For(target=Name(id='i', ctx=Store()), iter=Name(id='inds', ctx=Load()), body=[Assign(targets=[Name(id='bbox', ctx=Store())], value=Subscript(value=Name(id='dets', ctx=Load()), slice=ExtSlice(dims=[Index(value=Name(id='i', ctx=Load())), Slice(lower=None, upper=Constant(value=4, kind=None), step=None)]), ctx=Load()), type_comment=None), Assign(targets=[Name(id='score', ctx=Store())], value=Subscript(value=Name(id='dets', ctx=Load()), slice=Index(value=Tuple(elts=[Name(id='i', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=1, kind=None))], ctx=Load())), ctx=Load()), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='ax', ctx=Load()), attr='add_patch', ctx=Load()), args=[Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='Rectangle', ctx=Load()), args=[Tuple(elts=[Subscript(value=Name(id='bbox', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), Subscript(value=Name(id='bbox', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load())], ctx=Load()), BinOp(left=Subscript(value=Name(id='bbox', ctx=Load()), slice=Index(value=Constant(value=2, kind=None)), ctx=Load()), op=Sub(), right=Subscript(value=Name(id='bbox', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())), BinOp(left=Subscript(value=Name(id='bbox', ctx=Load()), slice=Index(value=Constant(value=3, kind=None)), ctx=Load()), op=Sub(), right=Subscript(value=Name(id='bbox', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load()))], keywords=[keyword(arg='fill', value=Constant(value=False, kind=None)), keyword(arg='edgecolor', value=Constant(value='red', kind=None)), keyword(arg='linewidth', value=Constant(value=3.5, kind=None))])], keywords=[]))], orelse=[], type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='ax', ctx=Load()), attr='set_title', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='{} detections with p({} | box) >= {:.1f}', kind=None), attr='format', ctx=Load()), args=[Name(id='class_name', ctx=Load()), Name(id='class_name', ctx=Load()), Name(id='thresh', ctx=Load())], keywords=[])], keywords=[keyword(arg='fontsize', value=Constant(value=14, kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='axis', ctx=Load()), args=[Constant(value='off', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='tight_layout', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='draw', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='img_name', ctx=Store())], value=Call(func=Attribute(value=Constant(value='demo_{}_{}.jpg', kind=None), attr='format', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='image_name', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.', kind=None)], keywords=[]), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), Name(id='class_name', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='savefig', ctx=Load()), args=[Name(id='img_name', ctx=Load())], keywords=[keyword(arg='dpi', value=Constant(value=300, kind=None))]))], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='demo', args=arguments(posonlyargs=[], args=[arg(arg='sess', annotation=None, type_comment=None), arg(arg='net', annotation=None, type_comment=None), arg(arg='image_name', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='Detect object classes in an image using pre-computed object proposals.', kind=None)), Assign(targets=[Name(id='im_file', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='cfg', ctx=Load()), attr='DATA_DIR', ctx=Load()), Constant(value='demo', kind=None), Constant(value='panos', kind=None), Name(id='image_name', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='im', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='imread', ctx=Load()), args=[Name(id='im_file', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='timer', ctx=Store())], value=Call(func=Name(id='Timer', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='timer', ctx=Load()), attr='tic', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='scores', ctx=Store()), Name(id='boxes', ctx=Store())], ctx=Store())], value=Call(func=Name(id='im_detect', ctx=Load()), args=[Name(id='sess', ctx=Load()), Name(id='net', ctx=Load()), Name(id='im', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='timer', ctx=Load()), attr='toc', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Detection took {:.3f}s for {:d} object proposals', kind=None), attr='format', ctx=Load()), args=[Attribute(value=Name(id='timer', ctx=Load()), attr='total_time', ctx=Load()), Subscript(value=Attribute(value=Name(id='boxes', ctx=Load()), attr='shape', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='CONF_THRESH', ctx=Store())], value=Constant(value=0.9, kind=None), type_comment=None), Assign(targets=[Name(id='NMS_THRESH', ctx=Store())], value=Constant(value=0.7, kind=None), type_comment=None), For(target=Tuple(elts=[Name(id='cls_ind', ctx=Store()), Name(id='cls', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Subscript(value=Name(id='CLASSES', ctx=Load()), slice=Slice(lower=Constant(value=1, kind=None), upper=None, step=None), ctx=Load())], keywords=[]), body=[AugAssign(target=Name(id='cls_ind', ctx=Store()), op=Add(), value=Constant(value=1, kind=None)), Assign(targets=[Name(id='cls_boxes', ctx=Store())], value=Subscript(value=Name(id='boxes', ctx=Load()), slice=ExtSlice(dims=[Slice(lower=None, upper=None, step=None), Slice(lower=BinOp(left=Constant(value=4, kind=None), op=Mult(), right=Name(id='cls_ind', ctx=Load())), upper=BinOp(left=Constant(value=4, kind=None), op=Mult(), right=BinOp(left=Name(id='cls_ind', ctx=Load()), op=Add(), right=Constant(value=1, kind=None))), step=None)]), ctx=Load()), type_comment=None), Assign(targets=[Name(id='cls_scores', ctx=Store())], value=Subscript(value=Name(id='scores', ctx=Load()), slice=ExtSlice(dims=[Slice(lower=None, upper=None, step=None), Index(value=Name(id='cls_ind', ctx=Load()))]), ctx=Load()), type_comment=None), Assign(targets=[Name(id='dets', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='hstack', ctx=Load()), args=[Tuple(elts=[Name(id='cls_boxes', ctx=Load()), Subscript(value=Name(id='cls_scores', ctx=Load()), slice=ExtSlice(dims=[Slice(lower=None, upper=None, step=None), Index(value=Attribute(value=Name(id='np', ctx=Load()), attr='newaxis', ctx=Load()))]), ctx=Load())], ctx=Load())], keywords=[]), attr='astype', ctx=Load()), args=[Attribute(value=Name(id='np', ctx=Load()), attr='float32', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='keep', ctx=Store())], value=Call(func=Name(id='nms', ctx=Load()), args=[Name(id='dets', ctx=Load()), Name(id='NMS_THRESH', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='dets', ctx=Store())], value=Subscript(value=Name(id='dets', ctx=Load()), slice=ExtSlice(dims=[Index(value=Name(id='keep', ctx=Load())), Slice(lower=None, upper=None, step=None)]), ctx=Load()), type_comment=None), Expr(value=Call(func=Name(id='vis_detections', ctx=Load()), args=[Name(id='im', ctx=Load()), Name(id='cls', ctx=Load()), Name(id='dets', ctx=Load())], keywords=[keyword(arg='thresh', value=Name(id='CONF_THRESH', ctx=Load())), keyword(arg='image_name', value=Name(id='image_name', ctx=Load()))]))], orelse=[], type_comment=None)], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='parse_args', args=arguments(posonlyargs=[], args=[], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Expr(value=Constant(value='Parse input arguments.', kind=None)), Assign(targets=[Name(id='parser', ctx=Store())], value=Call(func=Attribute(value=Name(id='argparse', ctx=Load()), attr='ArgumentParser', ctx=Load()), args=[], keywords=[keyword(arg='description', value=Constant(value='Tensorflow Faster R-CNN demo', kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--net', kind=None)], keywords=[keyword(arg='dest', value=Constant(value='demo_net', kind=None)), keyword(arg='help', value=Constant(value='Network to use [vgg16 res101]', kind=None)), keyword(arg='choices', value=Call(func=Attribute(value=Name(id='NETS', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])), keyword(arg='default', value=Constant(value='res101', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--dataset', kind=None)], keywords=[keyword(arg='dest', value=Constant(value='dataset', kind=None)), keyword(arg='help', value=Constant(value='Trained dataset [pascal_voc pascal_voc_0712]', kind=None)), keyword(arg='choices', value=Call(func=Attribute(value=Name(id='DATASETS', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])), keyword(arg='default', value=Constant(value='pascal_voc_0712', kind=None))])), Assign(targets=[Name(id='args', ctx=Store())], value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='parse_args', ctx=Load()), args=[], keywords=[]), type_comment=None), Return(value=Name(id='args', ctx=Load()))], decorator_list=[], returns=None, type_comment=None), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__', kind=None)]), body=[Assign(targets=[Attribute(value=Attribute(value=Name(id='cfg', ctx=Load()), attr='TEST', ctx=Load()), attr='HAS_RPN', ctx=Store())], value=Constant(value=True, kind=None), type_comment=None), Assign(targets=[Name(id='args', ctx=Store())], value=Call(func=Name(id='parse_args', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='demonet', ctx=Store())], value=Attribute(value=Name(id='args', ctx=Load()), attr='demo_net', ctx=Load()), type_comment=None), Assign(targets=[Name(id='dataset', ctx=Store())], value=Attribute(value=Name(id='args', ctx=Load()), attr='dataset', ctx=Load()), type_comment=None), Assign(targets=[Name(id='tfmodel', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Constant(value='output', kind=None), Name(id='demonet', ctx=Load()), Subscript(value=Subscript(value=Name(id='DATASETS', ctx=Load()), slice=Index(value=Name(id='dataset', ctx=Load())), ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), Constant(value='default', kind=None), Subscript(value=Subscript(value=Name(id='NETS', ctx=Load()), slice=Index(value=Name(id='demonet', ctx=Load())), ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='tfmodel', ctx=Store())], value=Constant(value='/home/blur/Documents/git/tf-faster-rcnn/output/default/train/default/res101_faster_rcnn_iter_600.ckpt', kind=None), type_comment=None), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isfile', ctx=Load()), args=[BinOp(left=Name(id='tfmodel', ctx=Load()), op=Add(), right=Constant(value='.meta', kind=None))], keywords=[])), body=[Raise(exc=Call(func=Name(id='IOError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='{:s} not found.\nDid you download the proper networks from our server and place them properly?', kind=None), attr='format', ctx=Load()), args=[BinOp(left=Name(id='tfmodel', ctx=Load()), op=Add(), right=Constant(value='.meta', kind=None))], keywords=[])], keywords=[]), cause=None)], orelse=[]), Assign(targets=[Name(id='tfconfig', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='ConfigProto', ctx=Load()), args=[], keywords=[keyword(arg='allow_soft_placement', value=Constant(value=True, kind=None))]), type_comment=None), Assign(targets=[Attribute(value=Attribute(value=Name(id='tfconfig', ctx=Load()), attr='gpu_options', ctx=Load()), attr='allow_growth', ctx=Store())], value=Constant(value=True, kind=None), type_comment=None), Assign(targets=[Name(id='sess', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='Session', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Name(id='tfconfig', ctx=Load()))]), type_comment=None), If(test=Compare(left=Name(id='demonet', ctx=Load()), ops=[Eq()], comparators=[Constant(value='vgg16', kind=None)]), body=[Assign(targets=[Name(id='net', ctx=Store())], value=Call(func=Name(id='vgg16', ctx=Load()), args=[], keywords=[keyword(arg='batch_size', value=Constant(value=1, kind=None))]), type_comment=None)], orelse=[If(test=Compare(left=Name(id='demonet', ctx=Load()), ops=[Eq()], comparators=[Constant(value='res101', kind=None)]), body=[Assign(targets=[Name(id='net', ctx=Store())], value=Call(func=Name(id='resnetv1', ctx=Load()), args=[], keywords=[keyword(arg='batch_size', value=Constant(value=1, kind=None)), keyword(arg='num_layers', value=Constant(value=101, kind=None))]), type_comment=None)], orelse=[Raise(exc=Name(id='NotImplementedError', ctx=Load()), cause=None)])]), Assign(targets=[Name(id='net', ctx=Store())], value=Call(func=Name(id='vgg16', ctx=Load()), args=[], keywords=[keyword(arg='batch_size', value=Constant(value=1, kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='net', ctx=Load()), attr='create_architecture', ctx=Load()), args=[Name(id='sess', ctx=Load()), Constant(value='TEST', kind=None), Constant(value=21, kind=None)], keywords=[keyword(arg='tag', value=Constant(value='default', kind=None)), keyword(arg='anchor_scales', value=List(elts=[Constant(value=8, kind=None), Constant(value=16, kind=None), Constant(value=32, kind=None)], ctx=Load()))])), Assign(targets=[Name(id='saver', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='train', ctx=Load()), attr='Saver', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='saver', ctx=Load()), attr='restore', ctx=Load()), args=[Name(id='sess', ctx=Load()), Name(id='tfmodel', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Loaded network {:s}', kind=None), attr='format', ctx=Load()), args=[Name(id='tfmodel', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='im_names', ctx=Store())], value=List(elts=[Constant(value='2000010000005.jpg', kind=None), Constant(value='2000010000007.jpg', kind=None), Constant(value='2000010000018.jpg', kind=None), Constant(value='2000010000023.jpg', kind=None), Constant(value='2000010000025.jpg', kind=None), Constant(value='2000010000027.jpg', kind=None), Constant(value='2000010000029.jpg', kind=None), Constant(value='2000010000031.jpg', kind=None), Constant(value='2000010000033.jpg', kind=None), Constant(value='2000010000006.jpg', kind=None), Constant(value='2000010000008.jpg', kind=None), Constant(value='2000010000022.jpg', kind=None), Constant(value='2000010000024.jpg', kind=None), Constant(value='2000010000026.jpg', kind=None), Constant(value='2000010000028.jpg', kind=None), Constant(value='2000010000030.jpg', kind=None), Constant(value='2000010000032.jpg', kind=None), Constant(value='2000010000034.jpg', kind=None)], ctx=Load()), type_comment=None), Assign(targets=[Name(id='im_names', ctx=Store())], value=List(elts=[Constant(value='2000010000008.jpg', kind=None), Constant(value='2000010000022.jpg', kind=None), Constant(value='1000038095323.jpg', kind=None), Constant(value='1000041373831.jpg', kind=None), Constant(value='1000041375422.jpg', kind=None), Constant(value='1000041375985.jpg', kind=None), Constant(value='1000041383807.jpg', kind=None), Constant(value='1000041389784.jpg', kind=None), Constant(value='1000041390341.jpg', kind=None), Constant(value='1000041390379.jpg', kind=None), Constant(value='1000041391977.jpg', kind=None), Constant(value='1000041373341.jpg', kind=None), Constant(value='1000041374057.jpg', kind=None), Constant(value='1000041375423.jpg', kind=None), Constant(value='1000041375986.jpg', kind=None), Constant(value='1000041383818.jpg', kind=None), Constant(value='1000041389844.jpg', kind=None), Constant(value='1000041390343.jpg', kind=None), Constant(value='1000041390406.jpg', kind=None), Constant(value='2000010000008.jpg', kind=None), Constant(value='1000041373342.jpg', kind=None), Constant(value='1000041374067.jpg', kind=None), Constant(value='1000041375568.jpg', kind=None), Constant(value='1000041377051.jpg', kind=None), Constant(value='1000041386232.jpg', kind=None), Constant(value='1000041389847.jpg', kind=None), Constant(value='1000041390344.jpg', kind=None), Constant(value='1000041390773.jpg', kind=None), Constant(value='2000010000022.jpg', kind=None), Constant(value='1000041373343.jpg', kind=None), Constant(value='1000041374285.jpg', kind=None), Constant(value='1000041375972.jpg', kind=None), Constant(value='1000041377077.jpg', kind=None), Constant(value='1000041388478.jpg', kind=None), Constant(value='1000041389982.jpg', kind=None), Constant(value='1000041390345.jpg', kind=None), Constant(value='1000041391974.jpg', kind=None), Constant(value='1000041373741.jpg', kind=None), Constant(value='1000041374286.jpg', kind=None), Constant(value='1000041375977.jpg', kind=None), Constant(value='1000041383563.jpg', kind=None), Constant(value='1000041389284.jpg', kind=None), Constant(value='1000041390226.jpg', kind=None), Constant(value='1000041390372.jpg', kind=None), Constant(value='1000041391975.jpg', kind=None), Constant(value='1000041373802.jpg', kind=None), Constant(value='1000041374288.jpg', kind=None), Constant(value='1000041375984.jpg', kind=None), Constant(value='1000041383564.jpg', kind=None), Constant(value='1000041389545.jpg', kind=None), Constant(value='1000041390339.jpg', kind=None), Constant(value='1000041390373.jpg', kind=None), Constant(value='1000041391976.jpg', kind=None)], ctx=Load()), type_comment=None), For(target=Name(id='im_name', ctx=Store()), iter=Name(id='im_names', ctx=Load()), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~', kind=None)], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Demo for data/demo/panos/{}', kind=None), attr='format', ctx=Load()), args=[Name(id='im_name', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Name(id='demo', ctx=Load()), args=[Name(id='sess', ctx=Load()), Name(id='net', ctx=Load()), Name(id='im_name', ctx=Load())], keywords=[]))], orelse=[], type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='show', ctx=Load()), args=[], keywords=[]))], orelse=[])], type_ignores=[])"
