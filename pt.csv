Path,oldFileContent,currentFileContent
main.py,"Module(body=[ImportFrom(module='__future__', names=[alias(name='print_function', asname=None)], level=0), Import(names=[alias(name='os', asname=None), alias(name='time', asname=None), alias(name='cv2', asname=None), alias(name='sys', asname=None), alias(name='math', asname=None)]), Import(names=[alias(name='tensorflow', asname='tf')]), Import(names=[alias(name='tensorflow.contrib.slim', asname='slim')]), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='time', asname=None), alias(name='datetime', asname=None)]), Import(names=[alias(name='argparse', asname=None)]), Import(names=[alias(name='random', asname=None)]), Import(names=[alias(name='os', asname=None), alias(name='sys', asname=None)]), Import(names=[alias(name='helpers', asname=None)]), Import(names=[alias(name='utils', asname=None)]), Import(names=[alias(name='matplotlib.pyplot', asname='plt')]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='path', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='models', kind=None)], keywords=[])), ImportFrom(module='FC_DenseNet_Tiramisu', names=[alias(name='build_fc_densenet', asname=None)], level=0), ImportFrom(module='Encoder_Decoder', names=[alias(name='build_encoder_decoder', asname=None)], level=0), ImportFrom(module='RefineNet', names=[alias(name='build_refinenet', asname=None)], level=0), ImportFrom(module='FRRN', names=[alias(name='build_frrn', asname=None)], level=0), ImportFrom(module='MobileUNet', names=[alias(name='build_mobile_unet', asname=None)], level=0), ImportFrom(module='PSPNet', names=[alias(name='build_pspnet', asname=None)], level=0), ImportFrom(module='GCN', names=[alias(name='build_gcn', asname=None)], level=0), ImportFrom(module='DeepLabV3', names=[alias(name='build_deeplabv3', asname=None)], level=0), FunctionDef(name='str2bool', args=arguments(posonlyargs=[], args=[arg(arg='v', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[If(test=Compare(left=Call(func=Attribute(value=Name(id='v', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), ops=[In()], comparators=[Tuple(elts=[Constant(value='yes', kind=None), Constant(value='true', kind=None), Constant(value='t', kind=None), Constant(value='y', kind=None), Constant(value='1', kind=None)], ctx=Load())]), body=[Return(value=Constant(value=True, kind=None))], orelse=[If(test=Compare(left=Call(func=Attribute(value=Name(id='v', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), ops=[In()], comparators=[Tuple(elts=[Constant(value='no', kind=None), Constant(value='false', kind=None), Constant(value='f', kind=None), Constant(value='n', kind=None), Constant(value='0', kind=None)], ctx=Load())]), body=[Return(value=Constant(value=False, kind=None))], orelse=[Raise(exc=Call(func=Attribute(value=Name(id='argparse', ctx=Load()), attr='ArgumentTypeError', ctx=Load()), args=[Constant(value='Boolean value expected.', kind=None)], keywords=[]), cause=None)])])], decorator_list=[], returns=None, type_comment=None), Assign(targets=[Name(id='parser', ctx=Store())], value=Call(func=Attribute(value=Name(id='argparse', ctx=Load()), attr='ArgumentParser', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--num_epochs', kind=None)], keywords=[keyword(arg='type', value=Name(id='int', ctx=Load())), keyword(arg='default', value=Constant(value=300, kind=None)), keyword(arg='help', value=Constant(value='Number of epochs to train for', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--mode', kind=None)], keywords=[keyword(arg='type', value=Name(id='str', ctx=Load())), keyword(arg='default', value=Constant(value='train', kind=None)), keyword(arg='help', value=Constant(value='Select ""train"", ""test"", or ""predict"" mode.     Note that for prediction mode you have to specify an image to run the model on.', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--image', kind=None)], keywords=[keyword(arg='type', value=Name(id='str', ctx=Load())), keyword(arg='default', value=Constant(value=None, kind=None)), keyword(arg='help', value=Constant(value='The image you want to predict on. Only valid in ""predict"" mode.', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--continue_training', kind=None)], keywords=[keyword(arg='type', value=Name(id='str2bool', ctx=Load())), keyword(arg='default', value=Constant(value=False, kind=None)), keyword(arg='help', value=Constant(value='Whether to continue training from a checkpoint', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--dataset', kind=None)], keywords=[keyword(arg='type', value=Name(id='str', ctx=Load())), keyword(arg='default', value=Constant(value='CamVid', kind=None)), keyword(arg='help', value=Constant(value='Dataset you are using.', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--crop_height', kind=None)], keywords=[keyword(arg='type', value=Name(id='int', ctx=Load())), keyword(arg='default', value=Constant(value=352, kind=None)), keyword(arg='help', value=Constant(value='Height of cropped input image to network', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--crop_width', kind=None)], keywords=[keyword(arg='type', value=Name(id='int', ctx=Load())), keyword(arg='default', value=Constant(value=480, kind=None)), keyword(arg='help', value=Constant(value='Width of cropped input image to network', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--batch_size', kind=None)], keywords=[keyword(arg='type', value=Name(id='int', ctx=Load())), keyword(arg='default', value=Constant(value=1, kind=None)), keyword(arg='help', value=Constant(value='Number of images in each batch', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--num_val_images', kind=None)], keywords=[keyword(arg='type', value=Name(id='int', ctx=Load())), keyword(arg='default', value=Constant(value=10, kind=None)), keyword(arg='help', value=Constant(value='The number of images to used for validations', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--h_flip', kind=None)], keywords=[keyword(arg='type', value=Name(id='str2bool', ctx=Load())), keyword(arg='default', value=Constant(value=False, kind=None)), keyword(arg='help', value=Constant(value='Whether to randomly flip the image horizontally for data augmentation', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--v_flip', kind=None)], keywords=[keyword(arg='type', value=Name(id='str2bool', ctx=Load())), keyword(arg='default', value=Constant(value=False, kind=None)), keyword(arg='help', value=Constant(value='Whether to randomly flip the image vertically for data augmentation', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--brightness', kind=None)], keywords=[keyword(arg='type', value=Name(id='float', ctx=Load())), keyword(arg='default', value=Constant(value=None, kind=None)), keyword(arg='help', value=Constant(value='Whether to randomly change the image brightness for data augmentation', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--rotation', kind=None)], keywords=[keyword(arg='type', value=Name(id='float', ctx=Load())), keyword(arg='default', value=Constant(value=None, kind=None)), keyword(arg='help', value=Constant(value='Whether to randomly rotate the image for data augmentation', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--zoom', kind=None)], keywords=[keyword(arg='type', value=Name(id='float', ctx=Load())), keyword(arg='default', value=Constant(value=None, kind=None)), keyword(arg='help', value=Constant(value='Whether to randomly zoom in for data augmentation', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--model', kind=None)], keywords=[keyword(arg='type', value=Name(id='str', ctx=Load())), keyword(arg='default', value=Constant(value='FC-DenseNet56', kind=None)), keyword(arg='help', value=Constant(value='The model you are using. Currently supports:    FC-DenseNet56, FC-DenseNet67, FC-DenseNet103, Encoder-Decoder, Encoder-Decoder-Skip, RefineNet-Res50, RefineNet-Res101, RefineNet-Res152,     FRRN-A, FRRN-B, MobileUNet, MobileUNet-Skip, PSPNet-Res50, PSPNet-Res101, PSPNet-Res152, GCN-Res50, GCN-Res101, GCN-Res152, DeepLabV3-Res50     DeepLabV3-Res101, DeepLabV3-Res152, custom', kind=None))])), Assign(targets=[Name(id='args', ctx=Store())], value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='parse_args', ctx=Load()), args=[], keywords=[]), type_comment=None), FunctionDef(name='prepare_data', args=arguments(posonlyargs=[], args=[arg(arg='dataset_dir', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[Attribute(value=Name(id='args', ctx=Load()), attr='dataset', ctx=Load())]), body=[Assign(targets=[Name(id='train_input_names', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='train_output_names', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='val_input_names', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='val_output_names', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='test_input_names', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='test_output_names', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), For(target=Name(id='file', ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[BinOp(left=Name(id='dataset_dir', ctx=Load()), op=Add(), right=Constant(value='/train', kind=None))], keywords=[]), body=[Assign(targets=[Name(id='cwd', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getcwd', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='train_input_names', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=BinOp(left=Name(id='cwd', ctx=Load()), op=Add(), right=Constant(value='/', kind=None)), op=Add(), right=Name(id='dataset_dir', ctx=Load())), op=Add(), right=Constant(value='/train/', kind=None)), op=Add(), right=Name(id='file', ctx=Load()))], keywords=[]))], orelse=[], type_comment=None), For(target=Name(id='file', ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[BinOp(left=Name(id='dataset_dir', ctx=Load()), op=Add(), right=Constant(value='/train_labels', kind=None))], keywords=[]), body=[Assign(targets=[Name(id='cwd', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getcwd', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='train_output_names', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=BinOp(left=Name(id='cwd', ctx=Load()), op=Add(), right=Constant(value='/', kind=None)), op=Add(), right=Name(id='dataset_dir', ctx=Load())), op=Add(), right=Constant(value='/train_labels/', kind=None)), op=Add(), right=Name(id='file', ctx=Load()))], keywords=[]))], orelse=[], type_comment=None), For(target=Name(id='file', ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[BinOp(left=Name(id='dataset_dir', ctx=Load()), op=Add(), right=Constant(value='/val', kind=None))], keywords=[]), body=[Assign(targets=[Name(id='cwd', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getcwd', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='val_input_names', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=BinOp(left=Name(id='cwd', ctx=Load()), op=Add(), right=Constant(value='/', kind=None)), op=Add(), right=Name(id='dataset_dir', ctx=Load())), op=Add(), right=Constant(value='/val/', kind=None)), op=Add(), right=Name(id='file', ctx=Load()))], keywords=[]))], orelse=[], type_comment=None), For(target=Name(id='file', ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[BinOp(left=Name(id='dataset_dir', ctx=Load()), op=Add(), right=Constant(value='/val_labels', kind=None))], keywords=[]), body=[Assign(targets=[Name(id='cwd', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getcwd', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='val_output_names', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=BinOp(left=Name(id='cwd', ctx=Load()), op=Add(), right=Constant(value='/', kind=None)), op=Add(), right=Name(id='dataset_dir', ctx=Load())), op=Add(), right=Constant(value='/val_labels/', kind=None)), op=Add(), right=Name(id='file', ctx=Load()))], keywords=[]))], orelse=[], type_comment=None), For(target=Name(id='file', ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[BinOp(left=Name(id='dataset_dir', ctx=Load()), op=Add(), right=Constant(value='/test', kind=None))], keywords=[]), body=[Assign(targets=[Name(id='cwd', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getcwd', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='test_input_names', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=BinOp(left=Name(id='cwd', ctx=Load()), op=Add(), right=Constant(value='/', kind=None)), op=Add(), right=Name(id='dataset_dir', ctx=Load())), op=Add(), right=Constant(value='/test/', kind=None)), op=Add(), right=Name(id='file', ctx=Load()))], keywords=[]))], orelse=[], type_comment=None), For(target=Name(id='file', ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[BinOp(left=Name(id='dataset_dir', ctx=Load()), op=Add(), right=Constant(value='/test_labels', kind=None))], keywords=[]), body=[Assign(targets=[Name(id='cwd', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getcwd', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='test_output_names', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=BinOp(left=Name(id='cwd', ctx=Load()), op=Add(), right=Constant(value='/', kind=None)), op=Add(), right=Name(id='dataset_dir', ctx=Load())), op=Add(), right=Constant(value='/test_labels/', kind=None)), op=Add(), right=Name(id='file', ctx=Load()))], keywords=[]))], orelse=[], type_comment=None), Expr(value=Tuple(elts=[Call(func=Attribute(value=Name(id='train_input_names', ctx=Load()), attr='sort', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='train_output_names', ctx=Load()), attr='sort', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='val_input_names', ctx=Load()), attr='sort', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='val_output_names', ctx=Load()), attr='sort', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='test_input_names', ctx=Load()), attr='sort', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='test_output_names', ctx=Load()), attr='sort', ctx=Load()), args=[], keywords=[])], ctx=Load())), Return(value=Tuple(elts=[Name(id='train_input_names', ctx=Load()), Name(id='train_output_names', ctx=Load()), Name(id='val_input_names', ctx=Load()), Name(id='val_output_names', ctx=Load()), Name(id='test_input_names', ctx=Load()), Name(id='test_output_names', ctx=Load())], ctx=Load()))], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='load_image', args=arguments(posonlyargs=[], args=[arg(arg='path', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='cvtColor', ctx=Load()), args=[Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='imread', ctx=Load()), args=[Name(id='path', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=1, kind=None))], keywords=[]), Attribute(value=Name(id='cv2', ctx=Load()), attr='COLOR_BGR2RGB', ctx=Load())], keywords=[]), type_comment=None), Return(value=Name(id='image', ctx=Load()))], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='data_augmentation', args=arguments(posonlyargs=[], args=[arg(arg='input_image', annotation=None, type_comment=None), arg(arg='output_image', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='input_image', ctx=Store()), Name(id='output_image', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='utils', ctx=Load()), attr='random_crop', ctx=Load()), args=[Name(id='input_image', ctx=Load()), Name(id='output_image', ctx=Load()), Attribute(value=Name(id='args', ctx=Load()), attr='crop_height', ctx=Load()), Attribute(value=Name(id='args', ctx=Load()), attr='crop_width', ctx=Load())], keywords=[]), type_comment=None), If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='args', ctx=Load()), attr='h_flip', ctx=Load()), Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='randint', ctx=Load()), args=[Constant(value=0, kind=None), Constant(value=1, kind=None)], keywords=[])]), body=[Assign(targets=[Name(id='input_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='flip', ctx=Load()), args=[Name(id='input_image', ctx=Load()), Constant(value=1, kind=None)], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='flip', ctx=Load()), args=[Name(id='output_image', ctx=Load()), Constant(value=1, kind=None)], keywords=[]), type_comment=None)], orelse=[]), If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='args', ctx=Load()), attr='v_flip', ctx=Load()), Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='randint', ctx=Load()), args=[Constant(value=0, kind=None), Constant(value=1, kind=None)], keywords=[])]), body=[Assign(targets=[Name(id='input_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='flip', ctx=Load()), args=[Name(id='input_image', ctx=Load()), Constant(value=0, kind=None)], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='flip', ctx=Load()), args=[Name(id='output_image', ctx=Load()), Constant(value=0, kind=None)], keywords=[]), type_comment=None)], orelse=[]), If(test=Attribute(value=Name(id='args', ctx=Load()), attr='brightness', ctx=Load()), body=[Assign(targets=[Name(id='factor', ctx=Store())], value=BinOp(left=Constant(value=1.0, kind=None), op=Add(), right=Call(func=Name(id='abs', ctx=Load()), args=[Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='gauss', ctx=Load()), args=[], keywords=[keyword(arg='mu', value=Constant(value=0.0, kind=None)), keyword(arg='sigma', value=Attribute(value=Name(id='args', ctx=Load()), attr='brightness', ctx=Load()))])], keywords=[])), type_comment=None), If(test=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='randint', ctx=Load()), args=[Constant(value=0, kind=None), Constant(value=1, kind=None)], keywords=[]), body=[Assign(targets=[Name(id='factor', ctx=Store())], value=BinOp(left=Constant(value=1.0, kind=None), op=Div(), right=Name(id='factor', ctx=Load())), type_comment=None)], orelse=[]), Assign(targets=[Name(id='table', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[ListComp(elt=BinOp(left=BinOp(left=BinOp(left=Name(id='i', ctx=Load()), op=Div(), right=Constant(value=255.0, kind=None)), op=Pow(), right=Name(id='factor', ctx=Load())), op=Mult(), right=Constant(value=255, kind=None)), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='arange', ctx=Load()), args=[Constant(value=0, kind=None), Constant(value=256, kind=None)], keywords=[]), ifs=[], is_async=0)])], keywords=[]), attr='astype', ctx=Load()), args=[Attribute(value=Name(id='np', ctx=Load()), attr='uint8', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='input_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='LUT', ctx=Load()), args=[Name(id='input_image', ctx=Load()), Name(id='table', ctx=Load())], keywords=[]), type_comment=None)], orelse=[]), If(test=Attribute(value=Name(id='args', ctx=Load()), attr='rotation', ctx=Load()), body=[Assign(targets=[Name(id='angle', ctx=Store())], value=Attribute(value=Name(id='args', ctx=Load()), attr='rotation', ctx=Load()), type_comment=None)], orelse=[Assign(targets=[Name(id='angle', ctx=Store())], value=Constant(value=0.0, kind=None), type_comment=None)]), If(test=Attribute(value=Name(id='args', ctx=Load()), attr='zoom', ctx=Load()), body=[Assign(targets=[Name(id='scale', ctx=Store())], value=Attribute(value=Name(id='args', ctx=Load()), attr='zoom', ctx=Load()), type_comment=None)], orelse=[Assign(targets=[Name(id='scale', ctx=Store())], value=Constant(value=1.0, kind=None), type_comment=None)]), If(test=BoolOp(op=Or(), values=[Attribute(value=Name(id='args', ctx=Load()), attr='rotation', ctx=Load()), Attribute(value=Name(id='args', ctx=Load()), attr='zoom', ctx=Load())]), body=[Assign(targets=[Name(id='M', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='getRotationMatrix2D', ctx=Load()), args=[Tuple(elts=[BinOp(left=Subscript(value=Attribute(value=Name(id='input_image', ctx=Load()), attr='shape', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load()), op=FloorDiv(), right=Constant(value=2, kind=None)), BinOp(left=Subscript(value=Attribute(value=Name(id='input_image', ctx=Load()), attr='shape', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), op=FloorDiv(), right=Constant(value=2, kind=None))], ctx=Load()), Name(id='angle', ctx=Load()), Name(id='scale', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='input_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='warpAffine', ctx=Load()), args=[Name(id='input_image', ctx=Load()), Name(id='M', ctx=Load()), Tuple(elts=[Subscript(value=Attribute(value=Name(id='input_image', ctx=Load()), attr='shape', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load()), Subscript(value=Attribute(value=Name(id='input_image', ctx=Load()), attr='shape', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='warpAffine', ctx=Load()), args=[Name(id='output_image', ctx=Load()), Name(id='M', ctx=Load()), Tuple(elts=[Subscript(value=Attribute(value=Name(id='output_image', ctx=Load()), attr='shape', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load()), Subscript(value=Attribute(value=Name(id='output_image', ctx=Load()), attr='shape', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], ctx=Load())], keywords=[]), type_comment=None)], orelse=[]), Return(value=Tuple(elts=[Name(id='input_image', ctx=Load()), Name(id='output_image', ctx=Load())], ctx=Load()))], decorator_list=[], returns=None, type_comment=None), Assign(targets=[Name(id='class_dict', ctx=Store())], value=Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='get_class_dict', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='dataset', ctx=Load()), Constant(value='class_dict.csv', kind=None)], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='class_names_list', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Name(id='class_dict', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='class_names_string', ctx=Store())], value=Constant(value='', kind=None), type_comment=None), For(target=Name(id='class_name', ctx=Store()), iter=Name(id='class_names_list', ctx=Load()), body=[If(test=UnaryOp(op=Not(), operand=Compare(left=Name(id='class_name', ctx=Load()), ops=[Eq()], comparators=[Subscript(value=Name(id='class_names_list', ctx=Load()), slice=Index(value=UnaryOp(op=USub(), operand=Constant(value=1, kind=None))), ctx=Load())])), body=[Assign(targets=[Name(id='class_names_string', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='class_names_string', ctx=Load()), op=Add(), right=Name(id='class_name', ctx=Load())), op=Add(), right=Constant(value=', ', kind=None)), type_comment=None)], orelse=[Assign(targets=[Name(id='class_names_string', ctx=Store())], value=BinOp(left=Name(id='class_names_string', ctx=Load()), op=Add(), right=Name(id='class_name', ctx=Load())), type_comment=None)])], orelse=[], type_comment=None), Assign(targets=[Name(id='num_classes', ctx=Store())], value=Call(func=Name(id='len', ctx=Load()), args=[Name(id='class_names_list', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='config', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='ConfigProto', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='gpu_options', ctx=Load()), attr='allow_growth', ctx=Store())], value=Constant(value=True, kind=None), type_comment=None), Assign(targets=[Name(id='sess', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='Session', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Name(id='config', ctx=Load()))]), type_comment=None), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Preparing the model ...', kind=None)], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='placeholder', ctx=Load()), args=[Attribute(value=Name(id='tf', ctx=Load()), attr='float32', ctx=Load())], keywords=[keyword(arg='shape', value=List(elts=[Constant(value=None, kind=None), Constant(value=None, kind=None), Constant(value=None, kind=None), Constant(value=3, kind=None)], ctx=Load()))]), type_comment=None), Assign(targets=[Name(id='output', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='placeholder', ctx=Load()), args=[Attribute(value=Name(id='tf', ctx=Load()), attr='float32', ctx=Load())], keywords=[keyword(arg='shape', value=List(elts=[Constant(value=None, kind=None), Constant(value=None, kind=None), Constant(value=None, kind=None), Name(id='num_classes', ctx=Load())], ctx=Load()))]), type_comment=None), Assign(targets=[Name(id='network', ctx=Store())], value=Constant(value=None, kind=None), type_comment=None), Assign(targets=[Name(id='init_fn', ctx=Store())], value=Constant(value=None, kind=None), type_comment=None), If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='FC-DenseNet56', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='FC-DenseNet67', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='FC-DenseNet103', kind=None)])]), body=[Assign(targets=[Name(id='network', ctx=Store())], value=Call(func=Name(id='build_fc_densenet', ctx=Load()), args=[Name(id='input', ctx=Load())], keywords=[keyword(arg='preset_model', value=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load())), keyword(arg='num_classes', value=Name(id='num_classes', ctx=Load()))]), type_comment=None)], orelse=[If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='RefineNet-Res50', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='RefineNet-Res101', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='RefineNet-Res152', kind=None)])]), body=[Assign(targets=[Tuple(elts=[Name(id='network', ctx=Store()), Name(id='init_fn', ctx=Store())], ctx=Store())], value=Call(func=Name(id='build_refinenet', ctx=Load()), args=[Name(id='input', ctx=Load())], keywords=[keyword(arg='preset_model', value=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load())), keyword(arg='num_classes', value=Name(id='num_classes', ctx=Load()))]), type_comment=None)], orelse=[If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='FRRN-A', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='FRRN-B', kind=None)])]), body=[Assign(targets=[Name(id='network', ctx=Store())], value=Call(func=Name(id='build_frrn', ctx=Load()), args=[Name(id='input', ctx=Load())], keywords=[keyword(arg='preset_model', value=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load())), keyword(arg='num_classes', value=Name(id='num_classes', ctx=Load()))]), type_comment=None)], orelse=[If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='Encoder-Decoder', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='Encoder-Decoder-Skip', kind=None)])]), body=[Assign(targets=[Name(id='network', ctx=Store())], value=Call(func=Name(id='build_encoder_decoder', ctx=Load()), args=[Name(id='input', ctx=Load())], keywords=[keyword(arg='preset_model', value=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load())), keyword(arg='num_classes', value=Name(id='num_classes', ctx=Load()))]), type_comment=None)], orelse=[If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='MobileUNet', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='MobileUNet-Skip', kind=None)])]), body=[Assign(targets=[Name(id='network', ctx=Store())], value=Call(func=Name(id='build_mobile_unet', ctx=Load()), args=[Name(id='input', ctx=Load())], keywords=[keyword(arg='preset_model', value=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load())), keyword(arg='num_classes', value=Name(id='num_classes', ctx=Load()))]), type_comment=None)], orelse=[If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='PSPNet-Res50', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='PSPNet-Res101', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='PSPNet-Res152', kind=None)])]), body=[Assign(targets=[Tuple(elts=[Name(id='network', ctx=Store()), Name(id='init_fn', ctx=Store())], ctx=Store())], value=Call(func=Name(id='build_pspnet', ctx=Load()), args=[Name(id='input', ctx=Load())], keywords=[keyword(arg='label_size', value=List(elts=[Attribute(value=Name(id='args', ctx=Load()), attr='crop_height', ctx=Load()), Attribute(value=Name(id='args', ctx=Load()), attr='crop_width', ctx=Load())], ctx=Load())), keyword(arg='preset_model', value=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load())), keyword(arg='num_classes', value=Name(id='num_classes', ctx=Load()))]), type_comment=None)], orelse=[If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='GCN-Res50', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='GCN-Res101', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='GCN-Res152', kind=None)])]), body=[Assign(targets=[Tuple(elts=[Name(id='network', ctx=Store()), Name(id='init_fn', ctx=Store())], ctx=Store())], value=Call(func=Name(id='build_gcn', ctx=Load()), args=[Name(id='input', ctx=Load())], keywords=[keyword(arg='preset_model', value=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load())), keyword(arg='num_classes', value=Name(id='num_classes', ctx=Load()))]), type_comment=None)], orelse=[If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='DeepLabV3-Res50', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='DeepLabV3-Res101', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='DeepLabV3-Res152', kind=None)])]), body=[Assign(targets=[Tuple(elts=[Name(id='network', ctx=Store()), Name(id='init_fn', ctx=Store())], ctx=Store())], value=Call(func=Name(id='build_deeplabv3', ctx=Load()), args=[Name(id='input', ctx=Load())], keywords=[keyword(arg='preset_model', value=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load())), keyword(arg='num_classes', value=Name(id='num_classes', ctx=Load()))]), type_comment=None)], orelse=[If(test=Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='custom', kind=None)]), body=[Assign(targets=[Name(id='network', ctx=Store())], value=Call(func=Name(id='build_custom', ctx=Load()), args=[Name(id='input', ctx=Load()), Name(id='num_classes', ctx=Load())], keywords=[]), type_comment=None)], orelse=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Error: the model %d is not available. Try checking which models are available using the command python main.py --help', kind=None)], keywords=[]), cause=None)])])])])])])])])]), Assign(targets=[Name(id='loss', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='reduce_mean', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='nn', ctx=Load()), attr='softmax_cross_entropy_with_logits', ctx=Load()), args=[], keywords=[keyword(arg='logits', value=Name(id='network', ctx=Load())), keyword(arg='labels', value=Name(id='output', ctx=Load()))])], keywords=[]), type_comment=None), Assign(targets=[Name(id='opt', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='train', ctx=Load()), attr='RMSPropOptimizer', ctx=Load()), args=[], keywords=[keyword(arg='learning_rate', value=Constant(value=0.001, kind=None)), keyword(arg='decay', value=Constant(value=0.995, kind=None))]), attr='minimize', ctx=Load()), args=[Name(id='loss', ctx=Load())], keywords=[keyword(arg='var_list', value=ListComp(elt=Name(id='var', ctx=Load()), generators=[comprehension(target=Name(id='var', ctx=Store()), iter=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='trainable_variables', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)]))]), type_comment=None), Assign(targets=[Name(id='saver', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='train', ctx=Load()), attr='Saver', ctx=Load()), args=[], keywords=[keyword(arg='max_to_keep', value=Constant(value=1000, kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='sess', ctx=Load()), attr='run', ctx=Load()), args=[Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='global_variables_initializer', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='utils', ctx=Load()), attr='count_params', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='init_fn', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None, kind=None)]), body=[Expr(value=Call(func=Name(id='init_fn', ctx=Load()), args=[Name(id='sess', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='model_checkpoint_name', ctx=Store())], value=BinOp(left=BinOp(left=BinOp(left=BinOp(left=Constant(value='checkpoints/latest_model_', kind=None), op=Add(), right=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load())), op=Add(), right=Constant(value='_', kind=None)), op=Add(), right=Attribute(value=Name(id='args', ctx=Load()), attr='dataset', ctx=Load())), op=Add(), right=Constant(value='.ckpt', kind=None)), type_comment=None), If(test=BoolOp(op=Or(), values=[Attribute(value=Name(id='args', ctx=Load()), attr='continue_training', ctx=Load()), UnaryOp(op=Not(), operand=Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='mode', ctx=Load()), ops=[Eq()], comparators=[Constant(value='train', kind=None)]))]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Loaded latest model checkpoint', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='saver', ctx=Load()), attr='restore', ctx=Load()), args=[Name(id='sess', ctx=Load()), Name(id='model_checkpoint_name', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='avg_scores_per_epoch', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), If(test=Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='mode', ctx=Load()), ops=[Eq()], comparators=[Constant(value='train', kind=None)]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='\n***** Begin training *****', kind=None)], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Dataset -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='dataset', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Model -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Crop Height -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='crop_height', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Crop Width -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='crop_width', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Num Epochs -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='num_epochs', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Batch Size -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='batch_size', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Num Classes -->', kind=None), Name(id='num_classes', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Data Augmentation:', kind=None)], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='\tVertical Flip -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='v_flip', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='\tHorizontal Flip -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='h_flip', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='\tBrightness Alteration -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='brightness', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='\tRotation -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='rotation', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='\tZooming -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='zoom', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='', kind=None)], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Loading the data ...', kind=None)], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='train_input_names', ctx=Store()), Name(id='train_output_names', ctx=Store()), Name(id='val_input_names', ctx=Store()), Name(id='val_output_names', ctx=Store()), Name(id='test_input_names', ctx=Store()), Name(id='test_output_names', ctx=Store())], ctx=Store())], value=Call(func=Name(id='prepare_data', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='avg_loss_per_epoch', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='val_indices', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='num_vals', ctx=Store())], value=Call(func=Name(id='min', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='num_val_images', ctx=Load()), Call(func=Name(id='len', ctx=Load()), args=[Name(id='val_input_names', ctx=Load())], keywords=[])], keywords=[]), type_comment=None), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='num_vals', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='ind', ctx=Store())], value=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='randint', ctx=Load()), args=[Constant(value=0, kind=None), BinOp(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='val_input_names', ctx=Load())], keywords=[]), op=Sub(), right=Constant(value=1, kind=None))], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='val_indices', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='ind', ctx=Load())], keywords=[]))], orelse=[], type_comment=None), For(target=Name(id='epoch', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=0, kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='num_epochs', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='current_losses', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='cnt', ctx=Store())], value=Constant(value=0, kind=None), type_comment=None), Assign(targets=[Name(id='id_list', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='permutation', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='train_input_names', ctx=Load())], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='num_iters', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='floor', ctx=Load()), args=[BinOp(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='id_list', ctx=Load())], keywords=[]), op=Div(), right=Attribute(value=Name(id='args', ctx=Load()), attr='batch_size', ctx=Load()))], keywords=[])], keywords=[]), type_comment=None), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='num_iters', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='st', ctx=Store())], value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='input_image_batch', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='output_image_batch', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), For(target=Name(id='j', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='batch_size', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='index', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='i', ctx=Load()), op=Mult(), right=Attribute(value=Name(id='args', ctx=Load()), attr='batch_size', ctx=Load())), op=Add(), right=Name(id='j', ctx=Load())), type_comment=None), Assign(targets=[Name(id='id', ctx=Store())], value=Subscript(value=Name(id='id_list', ctx=Load()), slice=Index(value=Name(id='index', ctx=Load())), ctx=Load()), type_comment=None), Assign(targets=[Name(id='input_image', ctx=Store())], value=Call(func=Name(id='load_image', ctx=Load()), args=[Subscript(value=Name(id='train_input_names', ctx=Load()), slice=Index(value=Name(id='id', ctx=Load())), ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Name(id='load_image', ctx=Load()), args=[Subscript(value=Name(id='train_output_names', ctx=Load()), slice=Index(value=Name(id='id', ctx=Load())), ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Tuple(elts=[Name(id='input_image', ctx=Store()), Name(id='output_image', ctx=Store())], ctx=Store())], value=Call(func=Name(id='data_augmentation', ctx=Load()), args=[Name(id='input_image', ctx=Load()), Name(id='output_image', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='input_image', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='float32', ctx=Load()), args=[Name(id='input_image', ctx=Load())], keywords=[]), op=Div(), right=Constant(value=255.0, kind=None)), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='float32', ctx=Load()), args=[Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='one_hot_it', ctx=Load()), args=[], keywords=[keyword(arg='label', value=Name(id='output_image', ctx=Load())), keyword(arg='class_dict', value=Name(id='class_dict', ctx=Load()))])], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='input_image_batch', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='expand_dims', ctx=Load()), args=[Name(id='input_image', ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=0, kind=None))])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='output_image_batch', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='expand_dims', ctx=Load()), args=[Name(id='output_image', ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=0, kind=None))])], keywords=[]))], orelse=[], type_comment=None), If(test=Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='batch_size', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1, kind=None)]), body=[Assign(targets=[Name(id='input_image_batch', ctx=Store())], value=Subscript(value=Name(id='input_image_batch', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Name(id='output_image_batch', ctx=Store())], value=Subscript(value=Name(id='output_image_batch', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), type_comment=None)], orelse=[Assign(targets=[Name(id='input_image_batch', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='squeeze', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='stack', ctx=Load()), args=[Name(id='input_image_batch', ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=1, kind=None))])], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_image_batch', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='squeeze', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='stack', ctx=Load()), args=[Name(id='output_image_batch', ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=1, kind=None))])], keywords=[]), type_comment=None)]), Assign(targets=[Tuple(elts=[Name(id='_', ctx=Store()), Name(id='current', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='sess', ctx=Load()), attr='run', ctx=Load()), args=[List(elts=[Name(id='opt', ctx=Load()), Name(id='loss', ctx=Load())], ctx=Load())], keywords=[keyword(arg='feed_dict', value=Dict(keys=[Name(id='input', ctx=Load()), Name(id='output', ctx=Load())], values=[Name(id='input_image_batch', ctx=Load()), Name(id='output_image_batch', ctx=Load())]))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='current_losses', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='current', ctx=Load())], keywords=[])), Assign(targets=[Name(id='cnt', ctx=Store())], value=BinOp(left=Name(id='cnt', ctx=Load()), op=Add(), right=Attribute(value=Name(id='args', ctx=Load()), attr='batch_size', ctx=Load())), type_comment=None), If(test=Compare(left=BinOp(left=Name(id='cnt', ctx=Load()), op=Mod(), right=Constant(value=20, kind=None)), ops=[Eq()], comparators=[Constant(value=0, kind=None)]), body=[Assign(targets=[Name(id='string_print', ctx=Store())], value=BinOp(left=Constant(value='Epoch = %d Count = %d Current = %.2f Time = %.2f', kind=None), op=Mod(), right=Tuple(elts=[Name(id='epoch', ctx=Load()), Name(id='cnt', ctx=Load()), Name(id='current', ctx=Load()), BinOp(left=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]), op=Sub(), right=Name(id='st', ctx=Load()))], ctx=Load())), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='utils', ctx=Load()), attr='LOG', ctx=Load()), args=[Name(id='string_print', ctx=Load())], keywords=[]))], orelse=[])], orelse=[], type_comment=None), Assign(targets=[Name(id='mean_loss', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='current_losses', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='avg_loss_per_epoch', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='mean_loss', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isdir', ctx=Load()), args=[BinOp(left=Constant(value='%s/%04d', kind=None), op=Mod(), right=Tuple(elts=[Constant(value='checkpoints', kind=None), Name(id='epoch', ctx=Load())], ctx=Load()))], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='makedirs', ctx=Load()), args=[BinOp(left=Constant(value='%s/%04d', kind=None), op=Mod(), right=Tuple(elts=[Constant(value='checkpoints', kind=None), Name(id='epoch', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='saver', ctx=Load()), attr='save', ctx=Load()), args=[Name(id='sess', ctx=Load()), Name(id='model_checkpoint_name', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='saver', ctx=Load()), attr='save', ctx=Load()), args=[Name(id='sess', ctx=Load()), BinOp(left=Constant(value='%s/%04d/model.ckpt', kind=None), op=Mod(), right=Tuple(elts=[Constant(value='checkpoints', kind=None), Name(id='epoch', ctx=Load())], ctx=Load()))], keywords=[])), Assign(targets=[Name(id='target', ctx=Store())], value=Call(func=Name(id='open', ctx=Load()), args=[BinOp(left=Constant(value='%s/%04d/val_scores.csv', kind=None), op=Mod(), right=Tuple(elts=[Constant(value='checkpoints', kind=None), Name(id='epoch', ctx=Load())], ctx=Load())), Constant(value='w', kind=None)], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value='val_name, avg_accuracy, precision, recall, f1 score, mean iou %s\n', kind=None), op=Mod(), right=Name(id='class_names_string', ctx=Load()))], keywords=[])), Assign(targets=[Name(id='scores_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='class_scores_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='precision_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='recall_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='f1_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='iou_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), For(target=Name(id='ind', ctx=Store()), iter=Name(id='val_indices', ctx=Load()), body=[Assign(targets=[Name(id='input_image', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='expand_dims', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='float32', ctx=Load()), args=[Subscript(value=Call(func=Name(id='load_image', ctx=Load()), args=[Subscript(value=Name(id='val_input_names', ctx=Load()), slice=Index(value=Name(id='ind', ctx=Load())), ctx=Load())], keywords=[]), slice=ExtSlice(dims=[Slice(lower=None, upper=Attribute(value=Name(id='args', ctx=Load()), attr='crop_height', ctx=Load()), step=None), Slice(lower=None, upper=Attribute(value=Name(id='args', ctx=Load()), attr='crop_width', ctx=Load()), step=None)]), ctx=Load())], keywords=[])], keywords=[keyword(arg='axis', value=Constant(value=0, kind=None))]), op=Div(), right=Constant(value=255.0, kind=None)), type_comment=None), Assign(targets=[Name(id='gt', ctx=Store())], value=Subscript(value=Call(func=Name(id='load_image', ctx=Load()), args=[Subscript(value=Name(id='val_output_names', ctx=Load()), slice=Index(value=Name(id='ind', ctx=Load())), ctx=Load())], keywords=[]), slice=ExtSlice(dims=[Slice(lower=None, upper=Attribute(value=Name(id='args', ctx=Load()), attr='crop_height', ctx=Load()), step=None), Slice(lower=None, upper=Attribute(value=Name(id='args', ctx=Load()), attr='crop_width', ctx=Load()), step=None)]), ctx=Load()), type_comment=None), Assign(targets=[Name(id='gt', ctx=Store())], value=Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='reverse_one_hot', ctx=Load()), args=[Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='one_hot_it', ctx=Load()), args=[Name(id='gt', ctx=Load()), Name(id='class_dict', ctx=Load())], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='st', ctx=Store())], value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='sess', ctx=Load()), attr='run', ctx=Load()), args=[Name(id='network', ctx=Load())], keywords=[keyword(arg='feed_dict', value=Dict(keys=[Name(id='input', ctx=Load())], values=[Name(id='input_image', ctx=Load())]))]), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[Subscript(value=Name(id='output_image', ctx=Load()), slice=ExtSlice(dims=[Index(value=Constant(value=0, kind=None)), Slice(lower=None, upper=None, step=None), Slice(lower=None, upper=None, step=None), Slice(lower=None, upper=None, step=None)]), ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='reverse_one_hot', ctx=Load()), args=[Name(id='output_image', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='out_vis_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='colour_code_segmentation', ctx=Load()), args=[Name(id='output_image', ctx=Load()), Name(id='class_dict', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Tuple(elts=[Name(id='accuracy', ctx=Store()), Name(id='class_accuracies', ctx=Store()), Name(id='prec', ctx=Store()), Name(id='rec', ctx=Store()), Name(id='f1', ctx=Store()), Name(id='iou', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='utils', ctx=Load()), attr='evaluate_segmentation', ctx=Load()), args=[], keywords=[keyword(arg='pred', value=Name(id='output_image', ctx=Load())), keyword(arg='gt', value=Name(id='gt', ctx=Load())), keyword(arg='num_classes', value=Name(id='num_classes', ctx=Load()))]), type_comment=None), Assign(targets=[Name(id='file_name', ctx=Store())], value=Call(func=Attribute(value=Name(id='utils', ctx=Load()), attr='filepath_to_name', ctx=Load()), args=[Subscript(value=Name(id='val_input_names', ctx=Load()), slice=Index(value=Name(id='ind', ctx=Load())), ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value='%s, %f, %f, %f, %f, %f', kind=None), op=Mod(), right=Tuple(elts=[Name(id='file_name', ctx=Load()), Name(id='accuracy', ctx=Load()), Name(id='prec', ctx=Load()), Name(id='rec', ctx=Load()), Name(id='f1', ctx=Load()), Name(id='iou', ctx=Load())], ctx=Load()))], keywords=[])), For(target=Name(id='item', ctx=Store()), iter=Name(id='class_accuracies', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value=', %f', kind=None), op=Mod(), right=Name(id='item', ctx=Load()))], keywords=[]))], orelse=[], type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='write', ctx=Load()), args=[Constant(value='\n', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='scores_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='accuracy', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='class_scores_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='class_accuracies', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='precision_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='prec', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='recall_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='rec', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='f1_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='f1', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='iou_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='iou', ctx=Load())], keywords=[])), Assign(targets=[Name(id='gt', ctx=Store())], value=Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='colour_code_segmentation', ctx=Load()), args=[Name(id='gt', ctx=Load()), Name(id='class_dict', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='file_name', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='basename', ctx=Load()), args=[Subscript(value=Name(id='val_input_names', ctx=Load()), slice=Index(value=Name(id='ind', ctx=Load())), ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='file_name', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='splitext', ctx=Load()), args=[Name(id='file_name', ctx=Load())], keywords=[]), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='imwrite', ctx=Load()), args=[BinOp(left=Constant(value='%s/%04d/%s_pred.png', kind=None), op=Mod(), right=Tuple(elts=[Constant(value='checkpoints', kind=None), Name(id='epoch', ctx=Load()), Name(id='file_name', ctx=Load())], ctx=Load())), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='uint8', ctx=Load()), args=[Name(id='out_vis_image', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='imwrite', ctx=Load()), args=[BinOp(left=Constant(value='%s/%04d/%s_gt.png', kind=None), op=Mod(), right=Tuple(elts=[Constant(value='checkpoints', kind=None), Name(id='epoch', ctx=Load()), Name(id='file_name', ctx=Load())], ctx=Load())), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='uint8', ctx=Load()), args=[Name(id='gt', ctx=Load())], keywords=[])], keywords=[]))], orelse=[], type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='avg_score', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='scores_list', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='class_avg_scores', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='class_scores_list', ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=0, kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='avg_scores_per_epoch', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='avg_score', ctx=Load())], keywords=[])), Assign(targets=[Name(id='avg_precision', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='precision_list', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='avg_recall', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='recall_list', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='avg_f1', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='f1_list', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='avg_iou', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='iou_list', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[BinOp(left=Constant(value='\nAverage validation accuracy for epoch # %04d = %f', kind=None), op=Mod(), right=Tuple(elts=[Name(id='epoch', ctx=Load()), Name(id='avg_score', ctx=Load())], ctx=Load()))], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[BinOp(left=Constant(value='Average per class validation accuracies for epoch # %04d:', kind=None), op=Mod(), right=Name(id='epoch', ctx=Load()))], keywords=[])), For(target=Tuple(elts=[Name(id='index', ctx=Store()), Name(id='item', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='class_avg_scores', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[BinOp(left=Constant(value='%s = %f', kind=None), op=Mod(), right=Tuple(elts=[Subscript(value=Name(id='class_names_list', ctx=Load()), slice=Index(value=Name(id='index', ctx=Load())), ctx=Load()), Name(id='item', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[], type_comment=None), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Validation precision = ', kind=None), Name(id='avg_precision', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Validation recall = ', kind=None), Name(id='avg_recall', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Validation F1 score = ', kind=None), Name(id='avg_f1', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Validation IoU score = ', kind=None), Name(id='avg_iou', ctx=Load())], keywords=[])), Assign(targets=[Name(id='scores_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None)], orelse=[], type_comment=None), Assign(targets=[Name(id='fig', ctx=Store())], value=Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='figure', ctx=Load()), args=[], keywords=[keyword(arg='figsize', value=Tuple(elts=[Constant(value=11, kind=None), Constant(value=8, kind=None)], ctx=Load()))]), type_comment=None), Assign(targets=[Name(id='ax1', ctx=Store())], value=Call(func=Attribute(value=Name(id='fig', ctx=Load()), attr='add_subplot', ctx=Load()), args=[Constant(value=111, kind=None)], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='ax1', ctx=Load()), attr='plot', ctx=Load()), args=[Call(func=Name(id='range', ctx=Load()), args=[Name(id='num_epochs', ctx=Load())], keywords=[]), Name(id='avg_scores_per_epoch', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ax1', ctx=Load()), attr='set_title', ctx=Load()), args=[Constant(value='Average validation accuracy vs epochs', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ax1', ctx=Load()), attr='set_xlabel', ctx=Load()), args=[Constant(value='Epoch', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ax1', ctx=Load()), attr='set_ylabel', ctx=Load()), args=[Constant(value='Avg. val. accuracy', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='savefig', ctx=Load()), args=[Constant(value='accuracy_vs_epochs.png', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='clf', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='ax1', ctx=Store())], value=Call(func=Attribute(value=Name(id='fig', ctx=Load()), attr='add_subplot', ctx=Load()), args=[Constant(value=111, kind=None)], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='ax1', ctx=Load()), attr='plot', ctx=Load()), args=[Call(func=Name(id='range', ctx=Load()), args=[Name(id='num_epochs', ctx=Load())], keywords=[]), Name(id='avg_loss_per_epoch', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ax1', ctx=Load()), attr='set_title', ctx=Load()), args=[Constant(value='Average loss vs epochs', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ax1', ctx=Load()), attr='set_xlabel', ctx=Load()), args=[Constant(value='Epoch', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ax1', ctx=Load()), attr='set_ylabel', ctx=Load()), args=[Constant(value='Current loss', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='savefig', ctx=Load()), args=[Constant(value='loss_vs_epochs.png', kind=None)], keywords=[]))], orelse=[If(test=Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='mode', ctx=Load()), ops=[Eq()], comparators=[Constant(value='test', kind=None)]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='\n***** Begin testing *****', kind=None)], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Dataset -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='dataset', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Model -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Crop Height -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='crop_height', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Crop Width -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='crop_width', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Num Classes -->', kind=None), Name(id='num_classes', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='', kind=None)], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isdir', ctx=Load()), args=[BinOp(left=Constant(value='%s', kind=None), op=Mod(), right=Constant(value='Test', kind=None))], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='makedirs', ctx=Load()), args=[BinOp(left=Constant(value='%s', kind=None), op=Mod(), right=Constant(value='Test', kind=None))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='target', ctx=Store())], value=Call(func=Name(id='open', ctx=Load()), args=[BinOp(left=Constant(value='%s/test_scores.csv', kind=None), op=Mod(), right=Constant(value='Test', kind=None)), Constant(value='w', kind=None)], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value='test_name, avg_accuracy, precision, recall, f1 score, mean iou %s\n', kind=None), op=Mod(), right=Name(id='class_names_string', ctx=Load()))], keywords=[])), Assign(targets=[Name(id='scores_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='class_scores_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='precision_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='recall_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='f1_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='iou_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='run_times_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), For(target=Name(id='ind', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='test_input_names', ctx=Load())], keywords=[])], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value='\rRunning test image %d / %d', kind=None), op=Mod(), right=Tuple(elts=[BinOp(left=Name(id='ind', ctx=Load()), op=Add(), right=Constant(value=1, kind=None)), Call(func=Name(id='len', ctx=Load()), args=[Name(id='test_input_names', ctx=Load())], keywords=[])], ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='flush', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='input_image', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='expand_dims', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='float32', ctx=Load()), args=[Subscript(value=Call(func=Name(id='load_image', ctx=Load()), args=[Subscript(value=Name(id='test_input_names', ctx=Load()), slice=Index(value=Name(id='ind', ctx=Load())), ctx=Load())], keywords=[]), slice=ExtSlice(dims=[Slice(lower=None, upper=Attribute(value=Name(id='args', ctx=Load()), attr='crop_height', ctx=Load()), step=None), Slice(lower=None, upper=Attribute(value=Name(id='args', ctx=Load()), attr='crop_width', ctx=Load()), step=None)]), ctx=Load())], keywords=[])], keywords=[keyword(arg='axis', value=Constant(value=0, kind=None))]), op=Div(), right=Constant(value=255.0, kind=None)), type_comment=None), Assign(targets=[Name(id='gt', ctx=Store())], value=Subscript(value=Call(func=Name(id='load_image', ctx=Load()), args=[Subscript(value=Name(id='test_output_names', ctx=Load()), slice=Index(value=Name(id='ind', ctx=Load())), ctx=Load())], keywords=[]), slice=ExtSlice(dims=[Slice(lower=None, upper=Attribute(value=Name(id='args', ctx=Load()), attr='crop_height', ctx=Load()), step=None), Slice(lower=None, upper=Attribute(value=Name(id='args', ctx=Load()), attr='crop_width', ctx=Load()), step=None)]), ctx=Load()), type_comment=None), Assign(targets=[Name(id='gt', ctx=Store())], value=Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='reverse_one_hot', ctx=Load()), args=[Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='one_hot_it', ctx=Load()), args=[Name(id='gt', ctx=Load()), Name(id='class_dict', ctx=Load())], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='st', ctx=Store())], value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='sess', ctx=Load()), attr='run', ctx=Load()), args=[Name(id='network', ctx=Load())], keywords=[keyword(arg='feed_dict', value=Dict(keys=[Name(id='input', ctx=Load())], values=[Name(id='input_image', ctx=Load())]))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='run_times_list', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]), op=Sub(), right=Name(id='st', ctx=Load()))], keywords=[])), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[Subscript(value=Name(id='output_image', ctx=Load()), slice=ExtSlice(dims=[Index(value=Constant(value=0, kind=None)), Slice(lower=None, upper=None, step=None), Slice(lower=None, upper=None, step=None), Slice(lower=None, upper=None, step=None)]), ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='reverse_one_hot', ctx=Load()), args=[Name(id='output_image', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='out_vis_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='colour_code_segmentation', ctx=Load()), args=[Name(id='output_image', ctx=Load()), Name(id='class_dict', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Tuple(elts=[Name(id='accuracy', ctx=Store()), Name(id='class_accuracies', ctx=Store()), Name(id='prec', ctx=Store()), Name(id='rec', ctx=Store()), Name(id='f1', ctx=Store()), Name(id='iou', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='utils', ctx=Load()), attr='evaluate_segmentation', ctx=Load()), args=[], keywords=[keyword(arg='pred', value=Name(id='output_image', ctx=Load())), keyword(arg='gt', value=Name(id='gt', ctx=Load())), keyword(arg='num_classes', value=Name(id='num_classes', ctx=Load()))]), type_comment=None), Assign(targets=[Name(id='file_name', ctx=Store())], value=Call(func=Attribute(value=Name(id='utils', ctx=Load()), attr='filepath_to_name', ctx=Load()), args=[Subscript(value=Name(id='val_input_names', ctx=Load()), slice=Index(value=Name(id='ind', ctx=Load())), ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value='%s, %f, %f, %f, %f, %f', kind=None), op=Mod(), right=Tuple(elts=[Name(id='file_name', ctx=Load()), Name(id='accuracy', ctx=Load()), Name(id='prec', ctx=Load()), Name(id='rec', ctx=Load()), Name(id='f1', ctx=Load()), Name(id='iou', ctx=Load())], ctx=Load()))], keywords=[])), For(target=Name(id='item', ctx=Store()), iter=Name(id='class_accuracies', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value=', %f', kind=None), op=Mod(), right=Name(id='item', ctx=Load()))], keywords=[]))], orelse=[], type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='write', ctx=Load()), args=[Constant(value='\n', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='scores_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='accuracy', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='class_scores_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='class_accuracies', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='precision_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='prec', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='recall_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='rec', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='f1_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='f1', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='iou_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='iou', ctx=Load())], keywords=[])), Assign(targets=[Name(id='gt', ctx=Store())], value=Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='colour_code_segmentation', ctx=Load()), args=[Name(id='gt', ctx=Load()), Name(id='class_dict', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='imwrite', ctx=Load()), args=[BinOp(left=Constant(value='%s/%s_pred.png', kind=None), op=Mod(), right=Tuple(elts=[Constant(value='Test', kind=None), Name(id='file_name', ctx=Load())], ctx=Load())), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='uint8', ctx=Load()), args=[Name(id='out_vis_image', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='imwrite', ctx=Load()), args=[BinOp(left=Constant(value='%s/%s_gt.png', kind=None), op=Mod(), right=Tuple(elts=[Constant(value='Test', kind=None), Name(id='file_name', ctx=Load())], ctx=Load())), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='uint8', ctx=Load()), args=[Name(id='gt', ctx=Load())], keywords=[])], keywords=[]))], orelse=[], type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='avg_score', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='scores_list', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='class_avg_scores', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='class_scores_list', ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=0, kind=None))]), type_comment=None), Assign(targets=[Name(id='avg_precision', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='precision_list', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='avg_recall', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='recall_list', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='avg_f1', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='f1_list', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='avg_iou', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='iou_list', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='avg_time', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='run_times_list', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Average test accuracy = ', kind=None), Name(id='avg_score', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Average per class test accuracies = \n', kind=None)], keywords=[])), For(target=Tuple(elts=[Name(id='index', ctx=Store()), Name(id='item', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='class_avg_scores', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[BinOp(left=Constant(value='%s = %f', kind=None), op=Mod(), right=Tuple(elts=[Subscript(value=Name(id='class_names_list', ctx=Load()), slice=Index(value=Name(id='index', ctx=Load())), ctx=Load()), Name(id='item', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[], type_comment=None), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Average precision = ', kind=None), Name(id='avg_precision', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Average recall = ', kind=None), Name(id='avg_recall', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Average F1 score = ', kind=None), Name(id='avg_f1', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Average mean IoU score = ', kind=None), Name(id='avg_iou', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Average run time = ', kind=None), Name(id='avg_time', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='mode', ctx=Load()), ops=[Eq()], comparators=[Constant(value='predict', kind=None)]), body=[If(test=Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='image', ctx=Load()), ops=[Is()], comparators=[Constant(value=None, kind=None)]), body=[Expr(value=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='You must pass an image path when using prediction mode.', kind=None)], keywords=[]))], orelse=[]), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='\n***** Begin prediction *****', kind=None)], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Dataset -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='dataset', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Model -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Crop Height -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='crop_height', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Crop Width -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='crop_width', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Num Classes -->', kind=None), Name(id='num_classes', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Image -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='image', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='', kind=None)], keywords=[])), Assign(targets=[Name(id='input_image', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='expand_dims', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='float32', ctx=Load()), args=[Subscript(value=Call(func=Name(id='load_image', ctx=Load()), args=[Subscript(value=Name(id='test_input_names', ctx=Load()), slice=Index(value=Name(id='ind', ctx=Load())), ctx=Load())], keywords=[]), slice=ExtSlice(dims=[Slice(lower=None, upper=Attribute(value=Name(id='args', ctx=Load()), attr='crop_height', ctx=Load()), step=None), Slice(lower=None, upper=Attribute(value=Name(id='args', ctx=Load()), attr='crop_width', ctx=Load()), step=None)]), ctx=Load())], keywords=[])], keywords=[keyword(arg='axis', value=Constant(value=0, kind=None))]), op=Div(), right=Constant(value=255.0, kind=None)), type_comment=None), Assign(targets=[Name(id='st', ctx=Store())], value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='sess', ctx=Load()), attr='run', ctx=Load()), args=[Name(id='network', ctx=Load())], keywords=[keyword(arg='feed_dict', value=Dict(keys=[Name(id='input', ctx=Load())], values=[Name(id='input_image', ctx=Load())]))]), type_comment=None), Assign(targets=[Name(id='run_time', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]), op=Sub(), right=Name(id='st', ctx=Load())), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[Subscript(value=Name(id='output_image', ctx=Load()), slice=ExtSlice(dims=[Index(value=Constant(value=0, kind=None)), Slice(lower=None, upper=None, step=None), Slice(lower=None, upper=None, step=None), Slice(lower=None, upper=None, step=None)]), ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='reverse_one_hot', ctx=Load()), args=[Name(id='output_image', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='out_vis_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='colour_code_segmentation', ctx=Load()), args=[Name(id='output_image', ctx=Load()), Name(id='class_dict', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='imwrite', ctx=Load()), args=[BinOp(left=Constant(value='%s/%s_pred.png', kind=None), op=Mod(), right=Tuple(elts=[Constant(value='Test', kind=None), Name(id='file_name', ctx=Load())], ctx=Load())), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='uint8', ctx=Load()), args=[Name(id='out_vis_image', ctx=Load())], keywords=[])], keywords=[]))], orelse=[Expr(value=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Invalid mode selected.', kind=None)], keywords=[]))])])])], type_ignores=[])","Module(body=[ImportFrom(module='__future__', names=[alias(name='print_function', asname=None)], level=0), Import(names=[alias(name='os', asname=None), alias(name='time', asname=None), alias(name='cv2', asname=None), alias(name='sys', asname=None), alias(name='math', asname=None)]), Import(names=[alias(name='tensorflow', asname='tf')]), Import(names=[alias(name='tensorflow.contrib.slim', asname='slim')]), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='time', asname=None), alias(name='datetime', asname=None)]), Import(names=[alias(name='argparse', asname=None)]), Import(names=[alias(name='random', asname=None)]), Import(names=[alias(name='os', asname=None), alias(name='sys', asname=None)]), Import(names=[alias(name='helpers', asname=None)]), Import(names=[alias(name='utils', asname=None)]), Import(names=[alias(name='matplotlib.pyplot', asname='plt')]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='path', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='models', kind=None)], keywords=[])), ImportFrom(module='FC_DenseNet_Tiramisu', names=[alias(name='build_fc_densenet', asname=None)], level=0), ImportFrom(module='Encoder_Decoder', names=[alias(name='build_encoder_decoder', asname=None)], level=0), ImportFrom(module='RefineNet', names=[alias(name='build_refinenet', asname=None)], level=0), ImportFrom(module='FRRN', names=[alias(name='build_frrn', asname=None)], level=0), ImportFrom(module='MobileUNet', names=[alias(name='build_mobile_unet', asname=None)], level=0), ImportFrom(module='PSPNet', names=[alias(name='build_pspnet', asname=None)], level=0), ImportFrom(module='GCN', names=[alias(name='build_gcn', asname=None)], level=0), ImportFrom(module='DeepLabV3', names=[alias(name='build_deeplabv3', asname=None)], level=0), FunctionDef(name='str2bool', args=arguments(posonlyargs=[], args=[arg(arg='v', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[If(test=Compare(left=Call(func=Attribute(value=Name(id='v', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), ops=[In()], comparators=[Tuple(elts=[Constant(value='yes', kind=None), Constant(value='true', kind=None), Constant(value='t', kind=None), Constant(value='y', kind=None), Constant(value='1', kind=None)], ctx=Load())]), body=[Return(value=Constant(value=True, kind=None))], orelse=[If(test=Compare(left=Call(func=Attribute(value=Name(id='v', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), ops=[In()], comparators=[Tuple(elts=[Constant(value='no', kind=None), Constant(value='false', kind=None), Constant(value='f', kind=None), Constant(value='n', kind=None), Constant(value='0', kind=None)], ctx=Load())]), body=[Return(value=Constant(value=False, kind=None))], orelse=[Raise(exc=Call(func=Attribute(value=Name(id='argparse', ctx=Load()), attr='ArgumentTypeError', ctx=Load()), args=[Constant(value='Boolean value expected.', kind=None)], keywords=[]), cause=None)])])], decorator_list=[], returns=None, type_comment=None), Assign(targets=[Name(id='parser', ctx=Store())], value=Call(func=Attribute(value=Name(id='argparse', ctx=Load()), attr='ArgumentParser', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--num_epochs', kind=None)], keywords=[keyword(arg='type', value=Name(id='int', ctx=Load())), keyword(arg='default', value=Constant(value=300, kind=None)), keyword(arg='help', value=Constant(value='Number of epochs to train for', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--mode', kind=None)], keywords=[keyword(arg='type', value=Name(id='str', ctx=Load())), keyword(arg='default', value=Constant(value='train', kind=None)), keyword(arg='help', value=Constant(value='Select ""train"", ""test"", or ""predict"" mode.     Note that for prediction mode you have to specify an image to run the model on.', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--image', kind=None)], keywords=[keyword(arg='type', value=Name(id='str', ctx=Load())), keyword(arg='default', value=Constant(value=None, kind=None)), keyword(arg='help', value=Constant(value='The image you want to predict on. Only valid in ""predict"" mode.', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--continue_training', kind=None)], keywords=[keyword(arg='type', value=Name(id='str2bool', ctx=Load())), keyword(arg='default', value=Constant(value=False, kind=None)), keyword(arg='help', value=Constant(value='Whether to continue training from a checkpoint', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--dataset', kind=None)], keywords=[keyword(arg='type', value=Name(id='str', ctx=Load())), keyword(arg='default', value=Constant(value='CamVid', kind=None)), keyword(arg='help', value=Constant(value='Dataset you are using.', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--crop_height', kind=None)], keywords=[keyword(arg='type', value=Name(id='int', ctx=Load())), keyword(arg='default', value=Constant(value=352, kind=None)), keyword(arg='help', value=Constant(value='Height of cropped input image to network', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--crop_width', kind=None)], keywords=[keyword(arg='type', value=Name(id='int', ctx=Load())), keyword(arg='default', value=Constant(value=480, kind=None)), keyword(arg='help', value=Constant(value='Width of cropped input image to network', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--batch_size', kind=None)], keywords=[keyword(arg='type', value=Name(id='int', ctx=Load())), keyword(arg='default', value=Constant(value=1, kind=None)), keyword(arg='help', value=Constant(value='Number of images in each batch', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--num_val_images', kind=None)], keywords=[keyword(arg='type', value=Name(id='int', ctx=Load())), keyword(arg='default', value=Constant(value=10, kind=None)), keyword(arg='help', value=Constant(value='The number of images to used for validations', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--h_flip', kind=None)], keywords=[keyword(arg='type', value=Name(id='str2bool', ctx=Load())), keyword(arg='default', value=Constant(value=False, kind=None)), keyword(arg='help', value=Constant(value='Whether to randomly flip the image horizontally for data augmentation', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--v_flip', kind=None)], keywords=[keyword(arg='type', value=Name(id='str2bool', ctx=Load())), keyword(arg='default', value=Constant(value=False, kind=None)), keyword(arg='help', value=Constant(value='Whether to randomly flip the image vertically for data augmentation', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--brightness', kind=None)], keywords=[keyword(arg='type', value=Name(id='float', ctx=Load())), keyword(arg='default', value=Constant(value=None, kind=None)), keyword(arg='help', value=Constant(value='Whether to randomly change the image brightness for data augmentation', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--rotation', kind=None)], keywords=[keyword(arg='type', value=Name(id='float', ctx=Load())), keyword(arg='default', value=Constant(value=None, kind=None)), keyword(arg='help', value=Constant(value='Whether to randomly rotate the image for data augmentation', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--zoom', kind=None)], keywords=[keyword(arg='type', value=Name(id='float', ctx=Load())), keyword(arg='default', value=Constant(value=None, kind=None)), keyword(arg='help', value=Constant(value='Whether to randomly zoom in for data augmentation', kind=None))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--model', kind=None)], keywords=[keyword(arg='type', value=Name(id='str', ctx=Load())), keyword(arg='default', value=Constant(value='FC-DenseNet56', kind=None)), keyword(arg='help', value=Constant(value='The model you are using. Currently supports:    FC-DenseNet56, FC-DenseNet67, FC-DenseNet103, Encoder-Decoder, Encoder-Decoder-Skip, RefineNet-Res50, RefineNet-Res101, RefineNet-Res152,     FRRN-A, FRRN-B, MobileUNet, MobileUNet-Skip, PSPNet-Res50, PSPNet-Res101, PSPNet-Res152, GCN-Res50, GCN-Res101, GCN-Res152, DeepLabV3-Res50     DeepLabV3-Res101, DeepLabV3-Res152, custom', kind=None))])), Assign(targets=[Name(id='args', ctx=Store())], value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='parse_args', ctx=Load()), args=[], keywords=[]), type_comment=None), FunctionDef(name='prepare_data', args=arguments(posonlyargs=[], args=[arg(arg='dataset_dir', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[Attribute(value=Name(id='args', ctx=Load()), attr='dataset', ctx=Load())]), body=[Assign(targets=[Name(id='train_input_names', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='train_output_names', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='val_input_names', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='val_output_names', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='test_input_names', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='test_output_names', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), For(target=Name(id='file', ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[BinOp(left=Name(id='dataset_dir', ctx=Load()), op=Add(), right=Constant(value='/train', kind=None))], keywords=[]), body=[Assign(targets=[Name(id='cwd', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getcwd', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='train_input_names', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=BinOp(left=Name(id='cwd', ctx=Load()), op=Add(), right=Constant(value='/', kind=None)), op=Add(), right=Name(id='dataset_dir', ctx=Load())), op=Add(), right=Constant(value='/train/', kind=None)), op=Add(), right=Name(id='file', ctx=Load()))], keywords=[]))], orelse=[], type_comment=None), For(target=Name(id='file', ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[BinOp(left=Name(id='dataset_dir', ctx=Load()), op=Add(), right=Constant(value='/train_labels', kind=None))], keywords=[]), body=[Assign(targets=[Name(id='cwd', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getcwd', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='train_output_names', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=BinOp(left=Name(id='cwd', ctx=Load()), op=Add(), right=Constant(value='/', kind=None)), op=Add(), right=Name(id='dataset_dir', ctx=Load())), op=Add(), right=Constant(value='/train_labels/', kind=None)), op=Add(), right=Name(id='file', ctx=Load()))], keywords=[]))], orelse=[], type_comment=None), For(target=Name(id='file', ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[BinOp(left=Name(id='dataset_dir', ctx=Load()), op=Add(), right=Constant(value='/val', kind=None))], keywords=[]), body=[Assign(targets=[Name(id='cwd', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getcwd', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='val_input_names', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=BinOp(left=Name(id='cwd', ctx=Load()), op=Add(), right=Constant(value='/', kind=None)), op=Add(), right=Name(id='dataset_dir', ctx=Load())), op=Add(), right=Constant(value='/val/', kind=None)), op=Add(), right=Name(id='file', ctx=Load()))], keywords=[]))], orelse=[], type_comment=None), For(target=Name(id='file', ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[BinOp(left=Name(id='dataset_dir', ctx=Load()), op=Add(), right=Constant(value='/val_labels', kind=None))], keywords=[]), body=[Assign(targets=[Name(id='cwd', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getcwd', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='val_output_names', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=BinOp(left=Name(id='cwd', ctx=Load()), op=Add(), right=Constant(value='/', kind=None)), op=Add(), right=Name(id='dataset_dir', ctx=Load())), op=Add(), right=Constant(value='/val_labels/', kind=None)), op=Add(), right=Name(id='file', ctx=Load()))], keywords=[]))], orelse=[], type_comment=None), For(target=Name(id='file', ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[BinOp(left=Name(id='dataset_dir', ctx=Load()), op=Add(), right=Constant(value='/test', kind=None))], keywords=[]), body=[Assign(targets=[Name(id='cwd', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getcwd', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='test_input_names', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=BinOp(left=Name(id='cwd', ctx=Load()), op=Add(), right=Constant(value='/', kind=None)), op=Add(), right=Name(id='dataset_dir', ctx=Load())), op=Add(), right=Constant(value='/test/', kind=None)), op=Add(), right=Name(id='file', ctx=Load()))], keywords=[]))], orelse=[], type_comment=None), For(target=Name(id='file', ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[BinOp(left=Name(id='dataset_dir', ctx=Load()), op=Add(), right=Constant(value='/test_labels', kind=None))], keywords=[]), body=[Assign(targets=[Name(id='cwd', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getcwd', ctx=Load()), args=[], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='test_output_names', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=BinOp(left=Name(id='cwd', ctx=Load()), op=Add(), right=Constant(value='/', kind=None)), op=Add(), right=Name(id='dataset_dir', ctx=Load())), op=Add(), right=Constant(value='/test_labels/', kind=None)), op=Add(), right=Name(id='file', ctx=Load()))], keywords=[]))], orelse=[], type_comment=None), Expr(value=Tuple(elts=[Call(func=Attribute(value=Name(id='train_input_names', ctx=Load()), attr='sort', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='train_output_names', ctx=Load()), attr='sort', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='val_input_names', ctx=Load()), attr='sort', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='val_output_names', ctx=Load()), attr='sort', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='test_input_names', ctx=Load()), attr='sort', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='test_output_names', ctx=Load()), attr='sort', ctx=Load()), args=[], keywords=[])], ctx=Load())), Return(value=Tuple(elts=[Name(id='train_input_names', ctx=Load()), Name(id='train_output_names', ctx=Load()), Name(id='val_input_names', ctx=Load()), Name(id='val_output_names', ctx=Load()), Name(id='test_input_names', ctx=Load()), Name(id='test_output_names', ctx=Load())], ctx=Load()))], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='load_image', args=arguments(posonlyargs=[], args=[arg(arg='path', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Assign(targets=[Name(id='img', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='imread', ctx=Load()), args=[Name(id='path', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=1, kind=None))], keywords=[]), type_comment=None), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='img', ctx=Load()), attr='shape', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=2, kind=None)]), body=[Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Attribute(value=Name(id='c2', ctx=Load()), attr='cvtColor', ctx=Load()), args=[Name(id='img', ctx=Load()), Attribute(value=Name(id='cv2', ctx=Load()), attr='COLOR_GRAY2RGB', ctx=Load())], keywords=[]), type_comment=None)], orelse=[Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='cvtColor', ctx=Load()), args=[Name(id='img', ctx=Load()), Attribute(value=Name(id='cv2', ctx=Load()), attr='COLOR_BGR2RGB', ctx=Load())], keywords=[]), type_comment=None)]), Return(value=Name(id='image', ctx=Load()))], decorator_list=[], returns=None, type_comment=None), FunctionDef(name='data_augmentation', args=arguments(posonlyargs=[], args=[arg(arg='input_image', annotation=None, type_comment=None), arg(arg='output_image', annotation=None, type_comment=None)], vararg=None, kwonlyargs=[], kw_defaults=[], kwarg=None, defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='input_image', ctx=Store()), Name(id='output_image', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='utils', ctx=Load()), attr='random_crop', ctx=Load()), args=[Name(id='input_image', ctx=Load()), Name(id='output_image', ctx=Load()), Attribute(value=Name(id='args', ctx=Load()), attr='crop_height', ctx=Load()), Attribute(value=Name(id='args', ctx=Load()), attr='crop_width', ctx=Load())], keywords=[]), type_comment=None), If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='args', ctx=Load()), attr='h_flip', ctx=Load()), Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='randint', ctx=Load()), args=[Constant(value=0, kind=None), Constant(value=1, kind=None)], keywords=[])]), body=[Assign(targets=[Name(id='input_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='flip', ctx=Load()), args=[Name(id='input_image', ctx=Load()), Constant(value=1, kind=None)], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='flip', ctx=Load()), args=[Name(id='output_image', ctx=Load()), Constant(value=1, kind=None)], keywords=[]), type_comment=None)], orelse=[]), If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='args', ctx=Load()), attr='v_flip', ctx=Load()), Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='randint', ctx=Load()), args=[Constant(value=0, kind=None), Constant(value=1, kind=None)], keywords=[])]), body=[Assign(targets=[Name(id='input_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='flip', ctx=Load()), args=[Name(id='input_image', ctx=Load()), Constant(value=0, kind=None)], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='flip', ctx=Load()), args=[Name(id='output_image', ctx=Load()), Constant(value=0, kind=None)], keywords=[]), type_comment=None)], orelse=[]), If(test=Attribute(value=Name(id='args', ctx=Load()), attr='brightness', ctx=Load()), body=[Assign(targets=[Name(id='factor', ctx=Store())], value=BinOp(left=Constant(value=1.0, kind=None), op=Add(), right=Call(func=Name(id='abs', ctx=Load()), args=[Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='gauss', ctx=Load()), args=[], keywords=[keyword(arg='mu', value=Constant(value=0.0, kind=None)), keyword(arg='sigma', value=Attribute(value=Name(id='args', ctx=Load()), attr='brightness', ctx=Load()))])], keywords=[])), type_comment=None), If(test=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='randint', ctx=Load()), args=[Constant(value=0, kind=None), Constant(value=1, kind=None)], keywords=[]), body=[Assign(targets=[Name(id='factor', ctx=Store())], value=BinOp(left=Constant(value=1.0, kind=None), op=Div(), right=Name(id='factor', ctx=Load())), type_comment=None)], orelse=[]), Assign(targets=[Name(id='table', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[ListComp(elt=BinOp(left=BinOp(left=BinOp(left=Name(id='i', ctx=Load()), op=Div(), right=Constant(value=255.0, kind=None)), op=Pow(), right=Name(id='factor', ctx=Load())), op=Mult(), right=Constant(value=255, kind=None)), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='arange', ctx=Load()), args=[Constant(value=0, kind=None), Constant(value=256, kind=None)], keywords=[]), ifs=[], is_async=0)])], keywords=[]), attr='astype', ctx=Load()), args=[Attribute(value=Name(id='np', ctx=Load()), attr='uint8', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='input_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='LUT', ctx=Load()), args=[Name(id='input_image', ctx=Load()), Name(id='table', ctx=Load())], keywords=[]), type_comment=None)], orelse=[]), If(test=Attribute(value=Name(id='args', ctx=Load()), attr='rotation', ctx=Load()), body=[Assign(targets=[Name(id='angle', ctx=Store())], value=Attribute(value=Name(id='args', ctx=Load()), attr='rotation', ctx=Load()), type_comment=None)], orelse=[Assign(targets=[Name(id='angle', ctx=Store())], value=Constant(value=0.0, kind=None), type_comment=None)]), If(test=Attribute(value=Name(id='args', ctx=Load()), attr='zoom', ctx=Load()), body=[Assign(targets=[Name(id='scale', ctx=Store())], value=Attribute(value=Name(id='args', ctx=Load()), attr='zoom', ctx=Load()), type_comment=None)], orelse=[Assign(targets=[Name(id='scale', ctx=Store())], value=Constant(value=1.0, kind=None), type_comment=None)]), If(test=BoolOp(op=Or(), values=[Attribute(value=Name(id='args', ctx=Load()), attr='rotation', ctx=Load()), Attribute(value=Name(id='args', ctx=Load()), attr='zoom', ctx=Load())]), body=[Assign(targets=[Name(id='M', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='getRotationMatrix2D', ctx=Load()), args=[Tuple(elts=[BinOp(left=Subscript(value=Attribute(value=Name(id='input_image', ctx=Load()), attr='shape', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load()), op=FloorDiv(), right=Constant(value=2, kind=None)), BinOp(left=Subscript(value=Attribute(value=Name(id='input_image', ctx=Load()), attr='shape', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), op=FloorDiv(), right=Constant(value=2, kind=None))], ctx=Load()), Name(id='angle', ctx=Load()), Name(id='scale', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='input_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='warpAffine', ctx=Load()), args=[Name(id='input_image', ctx=Load()), Name(id='M', ctx=Load()), Tuple(elts=[Subscript(value=Attribute(value=Name(id='input_image', ctx=Load()), attr='shape', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load()), Subscript(value=Attribute(value=Name(id='input_image', ctx=Load()), attr='shape', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='warpAffine', ctx=Load()), args=[Name(id='output_image', ctx=Load()), Name(id='M', ctx=Load()), Tuple(elts=[Subscript(value=Attribute(value=Name(id='output_image', ctx=Load()), attr='shape', ctx=Load()), slice=Index(value=Constant(value=1, kind=None)), ctx=Load()), Subscript(value=Attribute(value=Name(id='output_image', ctx=Load()), attr='shape', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load())], ctx=Load())], keywords=[]), type_comment=None)], orelse=[]), Return(value=Tuple(elts=[Name(id='input_image', ctx=Load()), Name(id='output_image', ctx=Load())], ctx=Load()))], decorator_list=[], returns=None, type_comment=None), Assign(targets=[Name(id='class_dict', ctx=Store())], value=Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='get_class_dict', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='dataset', ctx=Load()), Constant(value='class_dict.csv', kind=None)], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='class_names_list', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Name(id='class_dict', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='class_names_string', ctx=Store())], value=Constant(value='', kind=None), type_comment=None), For(target=Name(id='class_name', ctx=Store()), iter=Name(id='class_names_list', ctx=Load()), body=[If(test=UnaryOp(op=Not(), operand=Compare(left=Name(id='class_name', ctx=Load()), ops=[Eq()], comparators=[Subscript(value=Name(id='class_names_list', ctx=Load()), slice=Index(value=UnaryOp(op=USub(), operand=Constant(value=1, kind=None))), ctx=Load())])), body=[Assign(targets=[Name(id='class_names_string', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='class_names_string', ctx=Load()), op=Add(), right=Name(id='class_name', ctx=Load())), op=Add(), right=Constant(value=', ', kind=None)), type_comment=None)], orelse=[Assign(targets=[Name(id='class_names_string', ctx=Store())], value=BinOp(left=Name(id='class_names_string', ctx=Load()), op=Add(), right=Name(id='class_name', ctx=Load())), type_comment=None)])], orelse=[], type_comment=None), Assign(targets=[Name(id='num_classes', ctx=Store())], value=Call(func=Name(id='len', ctx=Load()), args=[Name(id='class_names_list', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='config', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='ConfigProto', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='gpu_options', ctx=Load()), attr='allow_growth', ctx=Store())], value=Constant(value=True, kind=None), type_comment=None), Assign(targets=[Name(id='sess', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='Session', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Name(id='config', ctx=Load()))]), type_comment=None), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Preparing the model ...', kind=None)], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='placeholder', ctx=Load()), args=[Attribute(value=Name(id='tf', ctx=Load()), attr='float32', ctx=Load())], keywords=[keyword(arg='shape', value=List(elts=[Constant(value=None, kind=None), Constant(value=None, kind=None), Constant(value=None, kind=None), Constant(value=3, kind=None)], ctx=Load()))]), type_comment=None), Assign(targets=[Name(id='output', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='placeholder', ctx=Load()), args=[Attribute(value=Name(id='tf', ctx=Load()), attr='float32', ctx=Load())], keywords=[keyword(arg='shape', value=List(elts=[Constant(value=None, kind=None), Constant(value=None, kind=None), Constant(value=None, kind=None), Name(id='num_classes', ctx=Load())], ctx=Load()))]), type_comment=None), Assign(targets=[Name(id='network', ctx=Store())], value=Constant(value=None, kind=None), type_comment=None), Assign(targets=[Name(id='init_fn', ctx=Store())], value=Constant(value=None, kind=None), type_comment=None), If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='FC-DenseNet56', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='FC-DenseNet67', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='FC-DenseNet103', kind=None)])]), body=[Assign(targets=[Name(id='network', ctx=Store())], value=Call(func=Name(id='build_fc_densenet', ctx=Load()), args=[Name(id='input', ctx=Load())], keywords=[keyword(arg='preset_model', value=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load())), keyword(arg='num_classes', value=Name(id='num_classes', ctx=Load()))]), type_comment=None)], orelse=[If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='RefineNet-Res50', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='RefineNet-Res101', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='RefineNet-Res152', kind=None)])]), body=[Assign(targets=[Tuple(elts=[Name(id='network', ctx=Store()), Name(id='init_fn', ctx=Store())], ctx=Store())], value=Call(func=Name(id='build_refinenet', ctx=Load()), args=[Name(id='input', ctx=Load())], keywords=[keyword(arg='preset_model', value=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load())), keyword(arg='num_classes', value=Name(id='num_classes', ctx=Load()))]), type_comment=None)], orelse=[If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='FRRN-A', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='FRRN-B', kind=None)])]), body=[Assign(targets=[Name(id='network', ctx=Store())], value=Call(func=Name(id='build_frrn', ctx=Load()), args=[Name(id='input', ctx=Load())], keywords=[keyword(arg='preset_model', value=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load())), keyword(arg='num_classes', value=Name(id='num_classes', ctx=Load()))]), type_comment=None)], orelse=[If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='Encoder-Decoder', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='Encoder-Decoder-Skip', kind=None)])]), body=[Assign(targets=[Name(id='network', ctx=Store())], value=Call(func=Name(id='build_encoder_decoder', ctx=Load()), args=[Name(id='input', ctx=Load())], keywords=[keyword(arg='preset_model', value=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load())), keyword(arg='num_classes', value=Name(id='num_classes', ctx=Load()))]), type_comment=None)], orelse=[If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='MobileUNet', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='MobileUNet-Skip', kind=None)])]), body=[Assign(targets=[Name(id='network', ctx=Store())], value=Call(func=Name(id='build_mobile_unet', ctx=Load()), args=[Name(id='input', ctx=Load())], keywords=[keyword(arg='preset_model', value=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load())), keyword(arg='num_classes', value=Name(id='num_classes', ctx=Load()))]), type_comment=None)], orelse=[If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='PSPNet-Res50', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='PSPNet-Res101', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='PSPNet-Res152', kind=None)])]), body=[Assign(targets=[Tuple(elts=[Name(id='network', ctx=Store()), Name(id='init_fn', ctx=Store())], ctx=Store())], value=Call(func=Name(id='build_pspnet', ctx=Load()), args=[Name(id='input', ctx=Load())], keywords=[keyword(arg='label_size', value=List(elts=[Attribute(value=Name(id='args', ctx=Load()), attr='crop_height', ctx=Load()), Attribute(value=Name(id='args', ctx=Load()), attr='crop_width', ctx=Load())], ctx=Load())), keyword(arg='preset_model', value=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load())), keyword(arg='num_classes', value=Name(id='num_classes', ctx=Load()))]), type_comment=None)], orelse=[If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='GCN-Res50', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='GCN-Res101', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='GCN-Res152', kind=None)])]), body=[Assign(targets=[Tuple(elts=[Name(id='network', ctx=Store()), Name(id='init_fn', ctx=Store())], ctx=Store())], value=Call(func=Name(id='build_gcn', ctx=Load()), args=[Name(id='input', ctx=Load())], keywords=[keyword(arg='preset_model', value=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load())), keyword(arg='num_classes', value=Name(id='num_classes', ctx=Load()))]), type_comment=None)], orelse=[If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='DeepLabV3-Res50', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='DeepLabV3-Res101', kind=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='DeepLabV3-Res152', kind=None)])]), body=[Assign(targets=[Tuple(elts=[Name(id='network', ctx=Store()), Name(id='init_fn', ctx=Store())], ctx=Store())], value=Call(func=Name(id='build_deeplabv3', ctx=Load()), args=[Name(id='input', ctx=Load())], keywords=[keyword(arg='preset_model', value=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load())), keyword(arg='num_classes', value=Name(id='num_classes', ctx=Load()))]), type_comment=None)], orelse=[If(test=Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='custom', kind=None)]), body=[Assign(targets=[Name(id='network', ctx=Store())], value=Call(func=Name(id='build_custom', ctx=Load()), args=[Name(id='input', ctx=Load()), Name(id='num_classes', ctx=Load())], keywords=[]), type_comment=None)], orelse=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Error: the model %d is not available. Try checking which models are available using the command python main.py --help', kind=None)], keywords=[]), cause=None)])])])])])])])])]), Assign(targets=[Name(id='loss', ctx=Store())], value=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='reduce_mean', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='nn', ctx=Load()), attr='softmax_cross_entropy_with_logits', ctx=Load()), args=[], keywords=[keyword(arg='logits', value=Name(id='network', ctx=Load())), keyword(arg='labels', value=Name(id='output', ctx=Load()))])], keywords=[]), type_comment=None), Assign(targets=[Name(id='opt', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='train', ctx=Load()), attr='RMSPropOptimizer', ctx=Load()), args=[], keywords=[keyword(arg='learning_rate', value=Constant(value=0.001, kind=None)), keyword(arg='decay', value=Constant(value=0.995, kind=None))]), attr='minimize', ctx=Load()), args=[Name(id='loss', ctx=Load())], keywords=[keyword(arg='var_list', value=ListComp(elt=Name(id='var', ctx=Load()), generators=[comprehension(target=Name(id='var', ctx=Store()), iter=Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='trainable_variables', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)]))]), type_comment=None), Assign(targets=[Name(id='saver', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='tf', ctx=Load()), attr='train', ctx=Load()), attr='Saver', ctx=Load()), args=[], keywords=[keyword(arg='max_to_keep', value=Constant(value=1000, kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='sess', ctx=Load()), attr='run', ctx=Load()), args=[Call(func=Attribute(value=Name(id='tf', ctx=Load()), attr='global_variables_initializer', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='utils', ctx=Load()), attr='count_params', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='init_fn', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None, kind=None)]), body=[Expr(value=Call(func=Name(id='init_fn', ctx=Load()), args=[Name(id='sess', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='model_checkpoint_name', ctx=Store())], value=BinOp(left=BinOp(left=BinOp(left=BinOp(left=Constant(value='checkpoints/latest_model_', kind=None), op=Add(), right=Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load())), op=Add(), right=Constant(value='_', kind=None)), op=Add(), right=Attribute(value=Name(id='args', ctx=Load()), attr='dataset', ctx=Load())), op=Add(), right=Constant(value='.ckpt', kind=None)), type_comment=None), If(test=BoolOp(op=Or(), values=[Attribute(value=Name(id='args', ctx=Load()), attr='continue_training', ctx=Load()), UnaryOp(op=Not(), operand=Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='mode', ctx=Load()), ops=[Eq()], comparators=[Constant(value='train', kind=None)]))]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Loaded latest model checkpoint', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='saver', ctx=Load()), attr='restore', ctx=Load()), args=[Name(id='sess', ctx=Load()), Name(id='model_checkpoint_name', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='avg_scores_per_epoch', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), If(test=Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='mode', ctx=Load()), ops=[Eq()], comparators=[Constant(value='train', kind=None)]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='\n***** Begin training *****', kind=None)], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Dataset -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='dataset', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Model -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Crop Height -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='crop_height', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Crop Width -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='crop_width', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Num Epochs -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='num_epochs', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Batch Size -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='batch_size', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Num Classes -->', kind=None), Name(id='num_classes', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Data Augmentation:', kind=None)], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='\tVertical Flip -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='v_flip', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='\tHorizontal Flip -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='h_flip', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='\tBrightness Alteration -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='brightness', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='\tRotation -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='rotation', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='\tZooming -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='zoom', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='', kind=None)], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Loading the data ...', kind=None)], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='train_input_names', ctx=Store()), Name(id='train_output_names', ctx=Store()), Name(id='val_input_names', ctx=Store()), Name(id='val_output_names', ctx=Store()), Name(id='test_input_names', ctx=Store()), Name(id='test_output_names', ctx=Store())], ctx=Store())], value=Call(func=Name(id='prepare_data', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='avg_loss_per_epoch', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='val_indices', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='num_vals', ctx=Store())], value=Call(func=Name(id='min', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='num_val_images', ctx=Load()), Call(func=Name(id='len', ctx=Load()), args=[Name(id='val_input_names', ctx=Load())], keywords=[])], keywords=[]), type_comment=None), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='num_vals', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='ind', ctx=Store())], value=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='randint', ctx=Load()), args=[Constant(value=0, kind=None), BinOp(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='val_input_names', ctx=Load())], keywords=[]), op=Sub(), right=Constant(value=1, kind=None))], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='val_indices', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='ind', ctx=Load())], keywords=[]))], orelse=[], type_comment=None), For(target=Name(id='epoch', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=0, kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='num_epochs', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='current_losses', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='cnt', ctx=Store())], value=Constant(value=0, kind=None), type_comment=None), Assign(targets=[Name(id='id_list', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='permutation', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='train_input_names', ctx=Load())], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='num_iters', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='floor', ctx=Load()), args=[BinOp(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='id_list', ctx=Load())], keywords=[]), op=Div(), right=Attribute(value=Name(id='args', ctx=Load()), attr='batch_size', ctx=Load()))], keywords=[])], keywords=[]), type_comment=None), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='num_iters', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='st', ctx=Store())], value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='input_image_batch', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='output_image_batch', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), For(target=Name(id='j', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='batch_size', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='index', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='i', ctx=Load()), op=Mult(), right=Attribute(value=Name(id='args', ctx=Load()), attr='batch_size', ctx=Load())), op=Add(), right=Name(id='j', ctx=Load())), type_comment=None), Assign(targets=[Name(id='id', ctx=Store())], value=Subscript(value=Name(id='id_list', ctx=Load()), slice=Index(value=Name(id='index', ctx=Load())), ctx=Load()), type_comment=None), Assign(targets=[Name(id='input_image', ctx=Store())], value=Call(func=Name(id='load_image', ctx=Load()), args=[Subscript(value=Name(id='train_input_names', ctx=Load()), slice=Index(value=Name(id='id', ctx=Load())), ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Name(id='load_image', ctx=Load()), args=[Subscript(value=Name(id='train_output_names', ctx=Load()), slice=Index(value=Name(id='id', ctx=Load())), ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Tuple(elts=[Name(id='input_image', ctx=Store()), Name(id='output_image', ctx=Store())], ctx=Store())], value=Call(func=Name(id='data_augmentation', ctx=Load()), args=[Name(id='input_image', ctx=Load()), Name(id='output_image', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='input_image', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='float32', ctx=Load()), args=[Name(id='input_image', ctx=Load())], keywords=[]), op=Div(), right=Constant(value=255.0, kind=None)), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='float32', ctx=Load()), args=[Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='one_hot_it', ctx=Load()), args=[], keywords=[keyword(arg='label', value=Name(id='output_image', ctx=Load())), keyword(arg='class_dict', value=Name(id='class_dict', ctx=Load()))])], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='input_image_batch', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='expand_dims', ctx=Load()), args=[Name(id='input_image', ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=0, kind=None))])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='output_image_batch', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='expand_dims', ctx=Load()), args=[Name(id='output_image', ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=0, kind=None))])], keywords=[]))], orelse=[], type_comment=None), If(test=Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='batch_size', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1, kind=None)]), body=[Assign(targets=[Name(id='input_image_batch', ctx=Store())], value=Subscript(value=Name(id='input_image_batch', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), type_comment=None), Assign(targets=[Name(id='output_image_batch', ctx=Store())], value=Subscript(value=Name(id='output_image_batch', ctx=Load()), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), type_comment=None)], orelse=[Assign(targets=[Name(id='input_image_batch', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='squeeze', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='stack', ctx=Load()), args=[Name(id='input_image_batch', ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=1, kind=None))])], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_image_batch', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='squeeze', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='stack', ctx=Load()), args=[Name(id='output_image_batch', ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=1, kind=None))])], keywords=[]), type_comment=None)]), Assign(targets=[Tuple(elts=[Name(id='_', ctx=Store()), Name(id='current', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='sess', ctx=Load()), attr='run', ctx=Load()), args=[List(elts=[Name(id='opt', ctx=Load()), Name(id='loss', ctx=Load())], ctx=Load())], keywords=[keyword(arg='feed_dict', value=Dict(keys=[Name(id='input', ctx=Load()), Name(id='output', ctx=Load())], values=[Name(id='input_image_batch', ctx=Load()), Name(id='output_image_batch', ctx=Load())]))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='current_losses', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='current', ctx=Load())], keywords=[])), Assign(targets=[Name(id='cnt', ctx=Store())], value=BinOp(left=Name(id='cnt', ctx=Load()), op=Add(), right=Attribute(value=Name(id='args', ctx=Load()), attr='batch_size', ctx=Load())), type_comment=None), If(test=Compare(left=BinOp(left=Name(id='cnt', ctx=Load()), op=Mod(), right=Constant(value=20, kind=None)), ops=[Eq()], comparators=[Constant(value=0, kind=None)]), body=[Assign(targets=[Name(id='string_print', ctx=Store())], value=BinOp(left=Constant(value='Epoch = %d Count = %d Current = %.2f Time = %.2f', kind=None), op=Mod(), right=Tuple(elts=[Name(id='epoch', ctx=Load()), Name(id='cnt', ctx=Load()), Name(id='current', ctx=Load()), BinOp(left=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]), op=Sub(), right=Name(id='st', ctx=Load()))], ctx=Load())), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='utils', ctx=Load()), attr='LOG', ctx=Load()), args=[Name(id='string_print', ctx=Load())], keywords=[]))], orelse=[])], orelse=[], type_comment=None), Assign(targets=[Name(id='mean_loss', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='current_losses', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='avg_loss_per_epoch', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='mean_loss', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isdir', ctx=Load()), args=[BinOp(left=Constant(value='%s/%04d', kind=None), op=Mod(), right=Tuple(elts=[Constant(value='checkpoints', kind=None), Name(id='epoch', ctx=Load())], ctx=Load()))], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='makedirs', ctx=Load()), args=[BinOp(left=Constant(value='%s/%04d', kind=None), op=Mod(), right=Tuple(elts=[Constant(value='checkpoints', kind=None), Name(id='epoch', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='saver', ctx=Load()), attr='save', ctx=Load()), args=[Name(id='sess', ctx=Load()), Name(id='model_checkpoint_name', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='saver', ctx=Load()), attr='save', ctx=Load()), args=[Name(id='sess', ctx=Load()), BinOp(left=Constant(value='%s/%04d/model.ckpt', kind=None), op=Mod(), right=Tuple(elts=[Constant(value='checkpoints', kind=None), Name(id='epoch', ctx=Load())], ctx=Load()))], keywords=[])), Assign(targets=[Name(id='target', ctx=Store())], value=Call(func=Name(id='open', ctx=Load()), args=[BinOp(left=Constant(value='%s/%04d/val_scores.csv', kind=None), op=Mod(), right=Tuple(elts=[Constant(value='checkpoints', kind=None), Name(id='epoch', ctx=Load())], ctx=Load())), Constant(value='w', kind=None)], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value='val_name, avg_accuracy, precision, recall, f1 score, mean iou %s\n', kind=None), op=Mod(), right=Name(id='class_names_string', ctx=Load()))], keywords=[])), Assign(targets=[Name(id='scores_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='class_scores_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='precision_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='recall_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='f1_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='iou_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), For(target=Name(id='ind', ctx=Store()), iter=Name(id='val_indices', ctx=Load()), body=[Assign(targets=[Name(id='input_image', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='expand_dims', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='float32', ctx=Load()), args=[Subscript(value=Call(func=Name(id='load_image', ctx=Load()), args=[Subscript(value=Name(id='val_input_names', ctx=Load()), slice=Index(value=Name(id='ind', ctx=Load())), ctx=Load())], keywords=[]), slice=ExtSlice(dims=[Slice(lower=None, upper=Attribute(value=Name(id='args', ctx=Load()), attr='crop_height', ctx=Load()), step=None), Slice(lower=None, upper=Attribute(value=Name(id='args', ctx=Load()), attr='crop_width', ctx=Load()), step=None)]), ctx=Load())], keywords=[])], keywords=[keyword(arg='axis', value=Constant(value=0, kind=None))]), op=Div(), right=Constant(value=255.0, kind=None)), type_comment=None), Assign(targets=[Name(id='gt', ctx=Store())], value=Subscript(value=Call(func=Name(id='load_image', ctx=Load()), args=[Subscript(value=Name(id='val_output_names', ctx=Load()), slice=Index(value=Name(id='ind', ctx=Load())), ctx=Load())], keywords=[]), slice=ExtSlice(dims=[Slice(lower=None, upper=Attribute(value=Name(id='args', ctx=Load()), attr='crop_height', ctx=Load()), step=None), Slice(lower=None, upper=Attribute(value=Name(id='args', ctx=Load()), attr='crop_width', ctx=Load()), step=None)]), ctx=Load()), type_comment=None), Assign(targets=[Name(id='gt', ctx=Store())], value=Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='reverse_one_hot', ctx=Load()), args=[Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='one_hot_it', ctx=Load()), args=[Name(id='gt', ctx=Load()), Name(id='class_dict', ctx=Load())], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='st', ctx=Store())], value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='sess', ctx=Load()), attr='run', ctx=Load()), args=[Name(id='network', ctx=Load())], keywords=[keyword(arg='feed_dict', value=Dict(keys=[Name(id='input', ctx=Load())], values=[Name(id='input_image', ctx=Load())]))]), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[Subscript(value=Name(id='output_image', ctx=Load()), slice=ExtSlice(dims=[Index(value=Constant(value=0, kind=None)), Slice(lower=None, upper=None, step=None), Slice(lower=None, upper=None, step=None), Slice(lower=None, upper=None, step=None)]), ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='reverse_one_hot', ctx=Load()), args=[Name(id='output_image', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='out_vis_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='colour_code_segmentation', ctx=Load()), args=[Name(id='output_image', ctx=Load()), Name(id='class_dict', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Tuple(elts=[Name(id='accuracy', ctx=Store()), Name(id='class_accuracies', ctx=Store()), Name(id='prec', ctx=Store()), Name(id='rec', ctx=Store()), Name(id='f1', ctx=Store()), Name(id='iou', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='utils', ctx=Load()), attr='evaluate_segmentation', ctx=Load()), args=[], keywords=[keyword(arg='pred', value=Name(id='output_image', ctx=Load())), keyword(arg='gt', value=Name(id='gt', ctx=Load())), keyword(arg='num_classes', value=Name(id='num_classes', ctx=Load()))]), type_comment=None), Assign(targets=[Name(id='file_name', ctx=Store())], value=Call(func=Attribute(value=Name(id='utils', ctx=Load()), attr='filepath_to_name', ctx=Load()), args=[Subscript(value=Name(id='val_input_names', ctx=Load()), slice=Index(value=Name(id='ind', ctx=Load())), ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value='%s, %f, %f, %f, %f, %f', kind=None), op=Mod(), right=Tuple(elts=[Name(id='file_name', ctx=Load()), Name(id='accuracy', ctx=Load()), Name(id='prec', ctx=Load()), Name(id='rec', ctx=Load()), Name(id='f1', ctx=Load()), Name(id='iou', ctx=Load())], ctx=Load()))], keywords=[])), For(target=Name(id='item', ctx=Store()), iter=Name(id='class_accuracies', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value=', %f', kind=None), op=Mod(), right=Name(id='item', ctx=Load()))], keywords=[]))], orelse=[], type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='write', ctx=Load()), args=[Constant(value='\n', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='scores_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='accuracy', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='class_scores_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='class_accuracies', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='precision_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='prec', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='recall_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='rec', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='f1_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='f1', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='iou_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='iou', ctx=Load())], keywords=[])), Assign(targets=[Name(id='gt', ctx=Store())], value=Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='colour_code_segmentation', ctx=Load()), args=[Name(id='gt', ctx=Load()), Name(id='class_dict', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='file_name', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='basename', ctx=Load()), args=[Subscript(value=Name(id='val_input_names', ctx=Load()), slice=Index(value=Name(id='ind', ctx=Load())), ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='file_name', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='splitext', ctx=Load()), args=[Name(id='file_name', ctx=Load())], keywords=[]), slice=Index(value=Constant(value=0, kind=None)), ctx=Load()), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='imwrite', ctx=Load()), args=[BinOp(left=Constant(value='%s/%04d/%s_pred.png', kind=None), op=Mod(), right=Tuple(elts=[Constant(value='checkpoints', kind=None), Name(id='epoch', ctx=Load()), Name(id='file_name', ctx=Load())], ctx=Load())), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='uint8', ctx=Load()), args=[Name(id='out_vis_image', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='imwrite', ctx=Load()), args=[BinOp(left=Constant(value='%s/%04d/%s_gt.png', kind=None), op=Mod(), right=Tuple(elts=[Constant(value='checkpoints', kind=None), Name(id='epoch', ctx=Load()), Name(id='file_name', ctx=Load())], ctx=Load())), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='uint8', ctx=Load()), args=[Name(id='gt', ctx=Load())], keywords=[])], keywords=[]))], orelse=[], type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='avg_score', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='scores_list', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='class_avg_scores', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='class_scores_list', ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=0, kind=None))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='avg_scores_per_epoch', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='avg_score', ctx=Load())], keywords=[])), Assign(targets=[Name(id='avg_precision', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='precision_list', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='avg_recall', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='recall_list', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='avg_f1', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='f1_list', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='avg_iou', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='iou_list', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[BinOp(left=Constant(value='\nAverage validation accuracy for epoch # %04d = %f', kind=None), op=Mod(), right=Tuple(elts=[Name(id='epoch', ctx=Load()), Name(id='avg_score', ctx=Load())], ctx=Load()))], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[BinOp(left=Constant(value='Average per class validation accuracies for epoch # %04d:', kind=None), op=Mod(), right=Name(id='epoch', ctx=Load()))], keywords=[])), For(target=Tuple(elts=[Name(id='index', ctx=Store()), Name(id='item', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='class_avg_scores', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[BinOp(left=Constant(value='%s = %f', kind=None), op=Mod(), right=Tuple(elts=[Subscript(value=Name(id='class_names_list', ctx=Load()), slice=Index(value=Name(id='index', ctx=Load())), ctx=Load()), Name(id='item', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[], type_comment=None), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Validation precision = ', kind=None), Name(id='avg_precision', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Validation recall = ', kind=None), Name(id='avg_recall', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Validation F1 score = ', kind=None), Name(id='avg_f1', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Validation IoU score = ', kind=None), Name(id='avg_iou', ctx=Load())], keywords=[])), Assign(targets=[Name(id='scores_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None)], orelse=[], type_comment=None), Assign(targets=[Name(id='fig', ctx=Store())], value=Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='figure', ctx=Load()), args=[], keywords=[keyword(arg='figsize', value=Tuple(elts=[Constant(value=11, kind=None), Constant(value=8, kind=None)], ctx=Load()))]), type_comment=None), Assign(targets=[Name(id='ax1', ctx=Store())], value=Call(func=Attribute(value=Name(id='fig', ctx=Load()), attr='add_subplot', ctx=Load()), args=[Constant(value=111, kind=None)], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='ax1', ctx=Load()), attr='plot', ctx=Load()), args=[Call(func=Name(id='range', ctx=Load()), args=[Name(id='num_epochs', ctx=Load())], keywords=[]), Name(id='avg_scores_per_epoch', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ax1', ctx=Load()), attr='set_title', ctx=Load()), args=[Constant(value='Average validation accuracy vs epochs', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ax1', ctx=Load()), attr='set_xlabel', ctx=Load()), args=[Constant(value='Epoch', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ax1', ctx=Load()), attr='set_ylabel', ctx=Load()), args=[Constant(value='Avg. val. accuracy', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='savefig', ctx=Load()), args=[Constant(value='accuracy_vs_epochs.png', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='clf', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='ax1', ctx=Store())], value=Call(func=Attribute(value=Name(id='fig', ctx=Load()), attr='add_subplot', ctx=Load()), args=[Constant(value=111, kind=None)], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='ax1', ctx=Load()), attr='plot', ctx=Load()), args=[Call(func=Name(id='range', ctx=Load()), args=[Name(id='num_epochs', ctx=Load())], keywords=[]), Name(id='avg_loss_per_epoch', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ax1', ctx=Load()), attr='set_title', ctx=Load()), args=[Constant(value='Average loss vs epochs', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ax1', ctx=Load()), attr='set_xlabel', ctx=Load()), args=[Constant(value='Epoch', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ax1', ctx=Load()), attr='set_ylabel', ctx=Load()), args=[Constant(value='Current loss', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='plt', ctx=Load()), attr='savefig', ctx=Load()), args=[Constant(value='loss_vs_epochs.png', kind=None)], keywords=[]))], orelse=[If(test=Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='mode', ctx=Load()), ops=[Eq()], comparators=[Constant(value='test', kind=None)]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='\n***** Begin testing *****', kind=None)], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Dataset -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='dataset', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Model -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Crop Height -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='crop_height', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Crop Width -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='crop_width', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Num Classes -->', kind=None), Name(id='num_classes', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='', kind=None)], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isdir', ctx=Load()), args=[BinOp(left=Constant(value='%s', kind=None), op=Mod(), right=Constant(value='Test', kind=None))], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='makedirs', ctx=Load()), args=[BinOp(left=Constant(value='%s', kind=None), op=Mod(), right=Constant(value='Test', kind=None))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='target', ctx=Store())], value=Call(func=Name(id='open', ctx=Load()), args=[BinOp(left=Constant(value='%s/test_scores.csv', kind=None), op=Mod(), right=Constant(value='Test', kind=None)), Constant(value='w', kind=None)], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value='test_name, avg_accuracy, precision, recall, f1 score, mean iou %s\n', kind=None), op=Mod(), right=Name(id='class_names_string', ctx=Load()))], keywords=[])), Assign(targets=[Name(id='scores_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='class_scores_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='precision_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='recall_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='f1_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='iou_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), Assign(targets=[Name(id='run_times_list', ctx=Store())], value=List(elts=[], ctx=Load()), type_comment=None), For(target=Name(id='ind', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='test_input_names', ctx=Load())], keywords=[])], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value='\rRunning test image %d / %d', kind=None), op=Mod(), right=Tuple(elts=[BinOp(left=Name(id='ind', ctx=Load()), op=Add(), right=Constant(value=1, kind=None)), Call(func=Name(id='len', ctx=Load()), args=[Name(id='test_input_names', ctx=Load())], keywords=[])], ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='flush', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='input_image', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='expand_dims', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='float32', ctx=Load()), args=[Subscript(value=Call(func=Name(id='load_image', ctx=Load()), args=[Subscript(value=Name(id='test_input_names', ctx=Load()), slice=Index(value=Name(id='ind', ctx=Load())), ctx=Load())], keywords=[]), slice=ExtSlice(dims=[Slice(lower=None, upper=Attribute(value=Name(id='args', ctx=Load()), attr='crop_height', ctx=Load()), step=None), Slice(lower=None, upper=Attribute(value=Name(id='args', ctx=Load()), attr='crop_width', ctx=Load()), step=None)]), ctx=Load())], keywords=[])], keywords=[keyword(arg='axis', value=Constant(value=0, kind=None))]), op=Div(), right=Constant(value=255.0, kind=None)), type_comment=None), Assign(targets=[Name(id='gt', ctx=Store())], value=Subscript(value=Call(func=Name(id='load_image', ctx=Load()), args=[Subscript(value=Name(id='test_output_names', ctx=Load()), slice=Index(value=Name(id='ind', ctx=Load())), ctx=Load())], keywords=[]), slice=ExtSlice(dims=[Slice(lower=None, upper=Attribute(value=Name(id='args', ctx=Load()), attr='crop_height', ctx=Load()), step=None), Slice(lower=None, upper=Attribute(value=Name(id='args', ctx=Load()), attr='crop_width', ctx=Load()), step=None)]), ctx=Load()), type_comment=None), Assign(targets=[Name(id='gt', ctx=Store())], value=Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='reverse_one_hot', ctx=Load()), args=[Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='one_hot_it', ctx=Load()), args=[Name(id='gt', ctx=Load()), Name(id='class_dict', ctx=Load())], keywords=[])], keywords=[]), type_comment=None), Assign(targets=[Name(id='st', ctx=Store())], value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='sess', ctx=Load()), attr='run', ctx=Load()), args=[Name(id='network', ctx=Load())], keywords=[keyword(arg='feed_dict', value=Dict(keys=[Name(id='input', ctx=Load())], values=[Name(id='input_image', ctx=Load())]))]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='run_times_list', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]), op=Sub(), right=Name(id='st', ctx=Load()))], keywords=[])), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[Subscript(value=Name(id='output_image', ctx=Load()), slice=ExtSlice(dims=[Index(value=Constant(value=0, kind=None)), Slice(lower=None, upper=None, step=None), Slice(lower=None, upper=None, step=None), Slice(lower=None, upper=None, step=None)]), ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='reverse_one_hot', ctx=Load()), args=[Name(id='output_image', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='out_vis_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='colour_code_segmentation', ctx=Load()), args=[Name(id='output_image', ctx=Load()), Name(id='class_dict', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Tuple(elts=[Name(id='accuracy', ctx=Store()), Name(id='class_accuracies', ctx=Store()), Name(id='prec', ctx=Store()), Name(id='rec', ctx=Store()), Name(id='f1', ctx=Store()), Name(id='iou', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='utils', ctx=Load()), attr='evaluate_segmentation', ctx=Load()), args=[], keywords=[keyword(arg='pred', value=Name(id='output_image', ctx=Load())), keyword(arg='gt', value=Name(id='gt', ctx=Load())), keyword(arg='num_classes', value=Name(id='num_classes', ctx=Load()))]), type_comment=None), Assign(targets=[Name(id='file_name', ctx=Store())], value=Call(func=Attribute(value=Name(id='utils', ctx=Load()), attr='filepath_to_name', ctx=Load()), args=[Subscript(value=Name(id='val_input_names', ctx=Load()), slice=Index(value=Name(id='ind', ctx=Load())), ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value='%s, %f, %f, %f, %f, %f', kind=None), op=Mod(), right=Tuple(elts=[Name(id='file_name', ctx=Load()), Name(id='accuracy', ctx=Load()), Name(id='prec', ctx=Load()), Name(id='rec', ctx=Load()), Name(id='f1', ctx=Load()), Name(id='iou', ctx=Load())], ctx=Load()))], keywords=[])), For(target=Name(id='item', ctx=Store()), iter=Name(id='class_accuracies', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value=', %f', kind=None), op=Mod(), right=Name(id='item', ctx=Load()))], keywords=[]))], orelse=[], type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='write', ctx=Load()), args=[Constant(value='\n', kind=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='scores_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='accuracy', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='class_scores_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='class_accuracies', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='precision_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='prec', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='recall_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='rec', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='f1_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='f1', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='iou_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='iou', ctx=Load())], keywords=[])), Assign(targets=[Name(id='gt', ctx=Store())], value=Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='colour_code_segmentation', ctx=Load()), args=[Name(id='gt', ctx=Load()), Name(id='class_dict', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='imwrite', ctx=Load()), args=[BinOp(left=Constant(value='%s/%s_pred.png', kind=None), op=Mod(), right=Tuple(elts=[Constant(value='Test', kind=None), Name(id='file_name', ctx=Load())], ctx=Load())), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='uint8', ctx=Load()), args=[Name(id='out_vis_image', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='imwrite', ctx=Load()), args=[BinOp(left=Constant(value='%s/%s_gt.png', kind=None), op=Mod(), right=Tuple(elts=[Constant(value='Test', kind=None), Name(id='file_name', ctx=Load())], ctx=Load())), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='uint8', ctx=Load()), args=[Name(id='gt', ctx=Load())], keywords=[])], keywords=[]))], orelse=[], type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='avg_score', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='scores_list', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='class_avg_scores', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='class_scores_list', ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=0, kind=None))]), type_comment=None), Assign(targets=[Name(id='avg_precision', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='precision_list', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='avg_recall', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='recall_list', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='avg_f1', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='f1_list', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='avg_iou', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='iou_list', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='avg_time', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='run_times_list', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Average test accuracy = ', kind=None), Name(id='avg_score', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Average per class test accuracies = \n', kind=None)], keywords=[])), For(target=Tuple(elts=[Name(id='index', ctx=Store()), Name(id='item', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='class_avg_scores', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[BinOp(left=Constant(value='%s = %f', kind=None), op=Mod(), right=Tuple(elts=[Subscript(value=Name(id='class_names_list', ctx=Load()), slice=Index(value=Name(id='index', ctx=Load())), ctx=Load()), Name(id='item', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[], type_comment=None), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Average precision = ', kind=None), Name(id='avg_precision', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Average recall = ', kind=None), Name(id='avg_recall', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Average F1 score = ', kind=None), Name(id='avg_f1', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Average mean IoU score = ', kind=None), Name(id='avg_iou', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Average run time = ', kind=None), Name(id='avg_time', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='mode', ctx=Load()), ops=[Eq()], comparators=[Constant(value='predict', kind=None)]), body=[If(test=Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='image', ctx=Load()), ops=[Is()], comparators=[Constant(value=None, kind=None)]), body=[Expr(value=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='You must pass an image path when using prediction mode.', kind=None)], keywords=[]))], orelse=[]), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='\n***** Begin prediction *****', kind=None)], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Dataset -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='dataset', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Model -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='model', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Crop Height -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='crop_height', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Crop Width -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='crop_width', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Num Classes -->', kind=None), Name(id='num_classes', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Image -->', kind=None), Attribute(value=Name(id='args', ctx=Load()), attr='image', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='', kind=None)], keywords=[])), Assign(targets=[Name(id='input_image', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='expand_dims', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='float32', ctx=Load()), args=[Subscript(value=Call(func=Name(id='load_image', ctx=Load()), args=[Subscript(value=Name(id='test_input_names', ctx=Load()), slice=Index(value=Name(id='ind', ctx=Load())), ctx=Load())], keywords=[]), slice=ExtSlice(dims=[Slice(lower=None, upper=Attribute(value=Name(id='args', ctx=Load()), attr='crop_height', ctx=Load()), step=None), Slice(lower=None, upper=Attribute(value=Name(id='args', ctx=Load()), attr='crop_width', ctx=Load()), step=None)]), ctx=Load())], keywords=[])], keywords=[keyword(arg='axis', value=Constant(value=0, kind=None))]), op=Div(), right=Constant(value=255.0, kind=None)), type_comment=None), Assign(targets=[Name(id='st', ctx=Store())], value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='sess', ctx=Load()), attr='run', ctx=Load()), args=[Name(id='network', ctx=Load())], keywords=[keyword(arg='feed_dict', value=Dict(keys=[Name(id='input', ctx=Load())], values=[Name(id='input_image', ctx=Load())]))]), type_comment=None), Assign(targets=[Name(id='run_time', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]), op=Sub(), right=Name(id='st', ctx=Load())), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[Subscript(value=Name(id='output_image', ctx=Load()), slice=ExtSlice(dims=[Index(value=Constant(value=0, kind=None)), Slice(lower=None, upper=None, step=None), Slice(lower=None, upper=None, step=None), Slice(lower=None, upper=None, step=None)]), ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='output_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='reverse_one_hot', ctx=Load()), args=[Name(id='output_image', ctx=Load())], keywords=[]), type_comment=None), Assign(targets=[Name(id='out_vis_image', ctx=Store())], value=Call(func=Attribute(value=Name(id='helpers', ctx=Load()), attr='colour_code_segmentation', ctx=Load()), args=[Name(id='output_image', ctx=Load()), Name(id='class_dict', ctx=Load())], keywords=[]), type_comment=None), Expr(value=Call(func=Attribute(value=Name(id='cv2', ctx=Load()), attr='imwrite', ctx=Load()), args=[BinOp(left=Constant(value='%s/%s_pred.png', kind=None), op=Mod(), right=Tuple(elts=[Constant(value='Test', kind=None), Name(id='file_name', ctx=Load())], ctx=Load())), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='uint8', ctx=Load()), args=[Name(id='out_vis_image', ctx=Load())], keywords=[])], keywords=[]))], orelse=[Expr(value=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Invalid mode selected.', kind=None)], keywords=[]))])])])], type_ignores=[])"
